[
    {
        "label": "builder",
        "importPath": "google.protobuf.internal",
        "description": "google.protobuf.internal",
        "isExtraImport": true,
        "detail": "google.protobuf.internal",
        "documentation": {}
    },
    {
        "label": "enum_type_wrapper",
        "importPath": "google.protobuf.internal",
        "description": "google.protobuf.internal",
        "isExtraImport": true,
        "detail": "google.protobuf.internal",
        "documentation": {}
    },
    {
        "label": "descriptor",
        "importPath": "google.protobuf",
        "description": "google.protobuf",
        "isExtraImport": true,
        "detail": "google.protobuf",
        "documentation": {}
    },
    {
        "label": "descriptor_pool",
        "importPath": "google.protobuf",
        "description": "google.protobuf",
        "isExtraImport": true,
        "detail": "google.protobuf",
        "documentation": {}
    },
    {
        "label": "symbol_database",
        "importPath": "google.protobuf",
        "description": "google.protobuf",
        "isExtraImport": true,
        "detail": "google.protobuf",
        "documentation": {}
    },
    {
        "label": "descriptor",
        "importPath": "google.protobuf",
        "description": "google.protobuf",
        "isExtraImport": true,
        "detail": "google.protobuf",
        "documentation": {}
    },
    {
        "label": "message",
        "importPath": "google.protobuf",
        "description": "google.protobuf",
        "isExtraImport": true,
        "detail": "google.protobuf",
        "documentation": {}
    },
    {
        "label": "reflection",
        "importPath": "google.protobuf",
        "description": "google.protobuf",
        "isExtraImport": true,
        "detail": "google.protobuf",
        "documentation": {}
    },
    {
        "label": "symbol_database",
        "importPath": "google.protobuf",
        "description": "google.protobuf",
        "isExtraImport": true,
        "detail": "google.protobuf",
        "documentation": {}
    },
    {
        "label": "descriptor_pb2",
        "importPath": "google.protobuf",
        "description": "google.protobuf",
        "isExtraImport": true,
        "detail": "google.protobuf",
        "documentation": {}
    },
    {
        "label": "text_format",
        "importPath": "google.protobuf",
        "description": "google.protobuf",
        "isExtraImport": true,
        "detail": "google.protobuf",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "base64",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "base64",
        "description": "base64",
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "b64encode",
        "importPath": "base64",
        "description": "base64",
        "isExtraImport": true,
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "binascii",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "binascii",
        "description": "binascii",
        "detail": "binascii",
        "documentation": {}
    },
    {
        "label": "DecodeError",
        "importPath": "google.protobuf.message",
        "description": "google.protobuf.message",
        "isExtraImport": true,
        "detail": "google.protobuf.message",
        "documentation": {}
    },
    {
        "label": "wv_proto2_pb2",
        "importPath": "modules.cdm.protos",
        "description": "modules.cdm.protos",
        "isExtraImport": true,
        "detail": "modules.cdm.protos",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "modules.cdm.session",
        "description": "modules.cdm.session",
        "isExtraImport": true,
        "detail": "modules.cdm.session",
        "documentation": {}
    },
    {
        "label": "Key",
        "importPath": "modules.cdm.key",
        "description": "modules.cdm.key",
        "isExtraImport": true,
        "detail": "modules.cdm.key",
        "documentation": {}
    },
    {
        "label": "get_random_bytes",
        "importPath": "Cryptodome.Random",
        "description": "Cryptodome.Random",
        "isExtraImport": true,
        "detail": "Cryptodome.Random",
        "documentation": {}
    },
    {
        "label": "random",
        "importPath": "Cryptodome.Random",
        "description": "Cryptodome.Random",
        "isExtraImport": true,
        "detail": "Cryptodome.Random",
        "documentation": {}
    },
    {
        "label": "PKCS1_OAEP",
        "importPath": "Cryptodome.Cipher",
        "description": "Cryptodome.Cipher",
        "isExtraImport": true,
        "detail": "Cryptodome.Cipher",
        "documentation": {}
    },
    {
        "label": "AES",
        "importPath": "Cryptodome.Cipher",
        "description": "Cryptodome.Cipher",
        "isExtraImport": true,
        "detail": "Cryptodome.Cipher",
        "documentation": {}
    },
    {
        "label": "CMAC",
        "importPath": "Cryptodome.Hash",
        "description": "Cryptodome.Hash",
        "isExtraImport": true,
        "detail": "Cryptodome.Hash",
        "documentation": {}
    },
    {
        "label": "SHA256",
        "importPath": "Cryptodome.Hash",
        "description": "Cryptodome.Hash",
        "isExtraImport": true,
        "detail": "Cryptodome.Hash",
        "documentation": {}
    },
    {
        "label": "HMAC",
        "importPath": "Cryptodome.Hash",
        "description": "Cryptodome.Hash",
        "isExtraImport": true,
        "detail": "Cryptodome.Hash",
        "documentation": {}
    },
    {
        "label": "SHA1",
        "importPath": "Cryptodome.Hash",
        "description": "Cryptodome.Hash",
        "isExtraImport": true,
        "detail": "Cryptodome.Hash",
        "documentation": {}
    },
    {
        "label": "RSA",
        "importPath": "Cryptodome.PublicKey",
        "description": "Cryptodome.PublicKey",
        "isExtraImport": true,
        "detail": "Cryptodome.PublicKey",
        "documentation": {}
    },
    {
        "label": "pss",
        "importPath": "Cryptodome.Signature",
        "description": "Cryptodome.Signature",
        "isExtraImport": true,
        "detail": "Cryptodome.Signature",
        "documentation": {}
    },
    {
        "label": "Padding",
        "importPath": "Cryptodome.Util",
        "description": "Cryptodome.Util",
        "isExtraImport": true,
        "detail": "Cryptodome.Util",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "xml.etree.ElementTree",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "xml.etree.ElementTree",
        "description": "xml.etree.ElementTree",
        "detail": "xml.etree.ElementTree",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "struct",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "struct",
        "description": "struct",
        "detail": "struct",
        "documentation": {}
    },
    {
        "label": "requests,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests.",
        "description": "requests.",
        "detail": "requests.",
        "documentation": {}
    },
    {
        "label": "cdm",
        "importPath": "modules.cdm",
        "description": "modules.cdm",
        "isExtraImport": true,
        "detail": "modules.cdm",
        "documentation": {}
    },
    {
        "label": "deviceconfig",
        "importPath": "modules.cdm",
        "description": "modules.cdm",
        "isExtraImport": true,
        "detail": "modules.cdm",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "importlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "importlib",
        "description": "importlib",
        "detail": "importlib",
        "documentation": {}
    },
    {
        "label": "pyfiglet",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pyfiglet",
        "description": "pyfiglet",
        "detail": "pyfiglet",
        "documentation": {}
    },
    {
        "label": "init",
        "importPath": "colorama",
        "description": "colorama",
        "isExtraImport": true,
        "detail": "colorama",
        "documentation": {}
    },
    {
        "label": "Fore",
        "importPath": "colorama",
        "description": "colorama",
        "isExtraImport": true,
        "detail": "colorama",
        "documentation": {}
    },
    {
        "label": "device_android_generic",
        "importPath": "modules.cdm.deviceconfig",
        "description": "modules.cdm.deviceconfig",
        "isExtraImport": true,
        "detail": "modules.cdm.deviceconfig",
        "documentation": {}
    },
    {
        "label": "get_pssh",
        "importPath": "modules.cdm.pssh",
        "description": "modules.cdm.pssh",
        "isExtraImport": true,
        "detail": "modules.cdm.pssh",
        "documentation": {}
    },
    {
        "label": "WvDecrypt",
        "importPath": "modules.cdm.wvdecryptcustom",
        "description": "modules.cdm.wvdecryptcustom",
        "isExtraImport": true,
        "detail": "modules.cdm.wvdecryptcustom",
        "documentation": {}
    },
    {
        "label": "coloredlogs",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "coloredlogs",
        "description": "coloredlogs",
        "detail": "coloredlogs",
        "documentation": {}
    },
    {
        "label": "_sym_db",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto2_pb2",
        "description": "modules.cdm.protos.wv_proto2_pb2",
        "peekOfCode": "_sym_db = _symbol_database.Default()\nDESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\\n\\x0fwv_proto2.proto\\\"\\xe7\\x05\\n\\x14\\x43lientIdentification\\x12-\\n\\x04Type\\x18\\x01 \\x02(\\x0e\\x32\\x1f.ClientIdentification.TokenType\\x12\\'\\n\\x05Token\\x18\\x02 \\x01(\\x0b\\x32\\x18.SignedDeviceCertificate\\x12\\x33\\n\\nClientInfo\\x18\\x03 \\x03(\\x0b\\x32\\x1f.ClientIdentification.NameValue\\x12\\x1b\\n\\x13ProviderClientToken\\x18\\x04 \\x01(\\x0c\\x12\\x16\\n\\x0eLicenseCounter\\x18\\x05 \\x01(\\r\\x12\\x45\\n\\x13_ClientCapabilities\\x18\\x06 \\x01(\\x0b\\x32(.ClientIdentification.ClientCapabilities\\x12 \\n\\x0b_FileHashes\\x18\\x07 \\x01(\\x0b\\x32\\x0b.FileHashes\\x1a(\\n\\tNameValue\\x12\\x0c\\n\\x04Name\\x18\\x01 \\x02(\\t\\x12\\r\\n\\x05Value\\x18\\x02 \\x02(\\t\\x1a\\xa4\\x02\\n\\x12\\x43lientCapabilities\\x12\\x13\\n\\x0b\\x43lientToken\\x18\\x01 \\x01(\\r\\x12\\x14\\n\\x0cSessionToken\\x18\\x02 \\x01(\\r\\x12\\\"\\n\\x1aVideoResolutionConstraints\\x18\\x03 \\x01(\\r\\x12L\\n\\x0eMaxHdcpVersion\\x18\\x04 \\x01(\\x0e\\x32\\x34.ClientIdentification.ClientCapabilities.HdcpVersion\\x12\\x1b\\n\\x13OemCryptoApiVersion\\x18\\x05 \\x01(\\r\\\"T\\n\\x0bHdcpVersion\\x12\\r\\n\\tHDCP_NONE\\x10\\x00\\x12\\x0b\\n\\x07HDCP_V1\\x10\\x01\\x12\\x0b\\n\\x07HDCP_V2\\x10\\x02\\x12\\r\\n\\tHDCP_V2_1\\x10\\x03\\x12\\r\\n\\tHDCP_V2_2\\x10\\x04\\\"S\\n\\tTokenType\\x12\\n\\n\\x06KEYBOX\\x10\\x00\\x12\\x16\\n\\x12\\x44\\x45VICE_CERTIFICATE\\x10\\x01\\x12\\\"\\n\\x1eREMOTE_ATTESTATION_CERTIFICATE\\x10\\x02\\\"\\x9b\\x02\\n\\x11\\x44\\x65viceCertificate\\x12\\x30\\n\\x04Type\\x18\\x01 \\x02(\\x0e\\x32\\\".DeviceCertificate.CertificateType\\x12\\x14\\n\\x0cSerialNumber\\x18\\x02 \\x01(\\x0c\\x12\\x1b\\n\\x13\\x43reationTimeSeconds\\x18\\x03 \\x01(\\r\\x12\\x11\\n\\tPublicKey\\x18\\x04 \\x01(\\x0c\\x12\\x10\\n\\x08SystemId\\x18\\x05 \\x01(\\r\\x12\\x1c\\n\\x14TestDeviceDeprecated\\x18\\x06 \\x01(\\r\\x12\\x11\\n\\tServiceId\\x18\\x07 \\x01(\\x0c\\\"K\\n\\x0f\\x43\\x65rtificateType\\x12\\x08\\n\\x04ROOT\\x10\\x00\\x12\\x10\\n\\x0cINTERMEDIATE\\x10\\x01\\x12\\x0f\\n\\x0bUSER_DEVICE\\x10\\x02\\x12\\x0b\\n\\x07SERVICE\\x10\\x03\\\"\\xc4\\x01\\n\\x17\\x44\\x65viceCertificateStatus\\x12\\x14\\n\\x0cSerialNumber\\x18\\x01 \\x01(\\x0c\\x12:\\n\\x06Status\\x18\\x02 \\x01(\\x0e\\x32*.DeviceCertificateStatus.CertificateStatus\\x12*\\n\\nDeviceInfo\\x18\\x04 \\x01(\\x0b\\x32\\x16.ProvisionedDeviceInfo\\\"+\\n\\x11\\x43\\x65rtificateStatus\\x12\\t\\n\\x05VALID\\x10\\x00\\x12\\x0b\\n\\x07REVOKED\\x10\\x01\\\"o\\n\\x1b\\x44\\x65viceCertificateStatusList\\x12\\x1b\\n\\x13\\x43reationTimeSeconds\\x18\\x01 \\x01(\\r\\x12\\x33\\n\\x11\\x43\\x65rtificateStatus\\x18\\x02 \\x03(\\x0b\\x32\\x18.DeviceCertificateStatus\\\"\\xaf\\x01\\n\\x1d\\x45ncryptedClientIdentification\\x12\\x11\\n\\tServiceId\\x18\\x01 \\x02(\\t\\x12&\\n\\x1eServiceCertificateSerialNumber\\x18\\x02 \\x01(\\x0c\\x12\\x19\\n\\x11\\x45ncryptedClientId\\x18\\x03 \\x02(\\x0c\\x12\\x1b\\n\\x13\\x45ncryptedClientIdIv\\x18\\x04 \\x02(\\x0c\\x12\\x1b\\n\\x13\\x45ncryptedPrivacyKey\\x18\\x05 \\x02(\\x0c\\\"\\x9c\\x01\\n\\x15LicenseIdentification\\x12\\x11\\n\\tRequestId\\x18\\x01 \\x01(\\x0c\\x12\\x11\\n\\tSessionId\\x18\\x02 \\x01(\\x0c\\x12\\x12\\n\\nPurchaseId\\x18\\x03 \\x01(\\x0c\\x12\\x1a\\n\\x04Type\\x18\\x04 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x0f\\n\\x07Version\\x18\\x05 \\x01(\\r\\x12\\x1c\\n\\x14ProviderSessionToken\\x18\\x06 \\x01(\\x0c\\\"\\xa1\\x0e\\n\\x07License\\x12\\\"\\n\\x02Id\\x18\\x01 \\x01(\\x0b\\x32\\x16.LicenseIdentification\\x12 \\n\\x07_Policy\\x18\\x02 \\x01(\\x0b\\x32\\x0f.License.Policy\\x12\\\"\\n\\x03Key\\x18\\x03 \\x03(\\x0b\\x32\\x15.License.KeyContainer\\x12\\x18\\n\\x10LicenseStartTime\\x18\\x04 \\x01(\\r\\x12!\\n\\x19RemoteAttestationVerified\\x18\\x05 \\x01(\\r\\x12\\x1b\\n\\x13ProviderClientToken\\x18\\x06 \\x01(\\x0c\\x12\\x18\\n\\x10ProtectionScheme\\x18\\x07 \\x01(\\r\\x1a\\xbb\\x02\\n\\x06Policy\\x12\\x0f\\n\\x07\\x43\\x61nPlay\\x18\\x01 \\x01(\\x08\\x12\\x12\\n\\nCanPersist\\x18\\x02 \\x01(\\x08\\x12\\x10\\n\\x08\\x43\\x61nRenew\\x18\\x03 \\x01(\\x08\\x12\\x1d\\n\\x15RentalDurationSeconds\\x18\\x04 \\x01(\\r\\x12\\x1f\\n\\x17PlaybackDurationSeconds\\x18\\x05 \\x01(\\r\\x12\\x1e\\n\\x16LicenseDurationSeconds\\x18\\x06 \\x01(\\r\\x12&\\n\\x1eRenewalRecoveryDurationSeconds\\x18\\x07 \\x01(\\r\\x12\\x18\\n\\x10RenewalServerUrl\\x18\\x08 \\x01(\\t\\x12\\x1b\\n\\x13RenewalDelaySeconds\\x18\\t \\x01(\\r\\x12#\\n\\x1bRenewalRetryIntervalSeconds\\x18\\n \\x01(\\r\\x12\\x16\\n\\x0eRenewWithUsage\\x18\\x0b \\x01(\\x08\\x1a\\xf9\\t\\n\\x0cKeyContainer\\x12\\n\\n\\x02Id\\x18\\x01 \\x01(\\x0c\\x12\\n\\n\\x02Iv\\x18\\x02 \\x01(\\x0c\\x12\\x0b\\n\\x03Key\\x18\\x03 \\x01(\\x0c\\x12+\\n\\x04Type\\x18\\x04 \\x01(\\x0e\\x32\\x1d.License.KeyContainer.KeyType\\x12\\x32\\n\\x05Level\\x18\\x05 \\x01(\\x0e\\x32#.License.KeyContainer.SecurityLevel\\x12\\x42\\n\\x12RequiredProtection\\x18\\x06 \\x01(\\x0b\\x32&.License.KeyContainer.OutputProtection\\x12\\x43\\n\\x13RequestedProtection\\x18\\x07 \\x01(\\x0b\\x32&.License.KeyContainer.OutputProtection\\x12\\x35\\n\\x0b_KeyControl\\x18\\x08 \\x01(\\x0b\\x32 .License.KeyContainer.KeyControl\\x12[\\n\\x1e_OperatorSessionKeyPermissions\\x18\\t \\x01(\\x0b\\x32\\x33.License.KeyContainer.OperatorSessionKeyPermissions\\x12S\\n\\x1aVideoResolutionConstraints\\x18\\n \\x03(\\x0b\\x32/.License.KeyContainer.VideoResolutionConstraint\\x1a\\xdb\\x01\\n\\x10OutputProtection\\x12\\x42\\n\\x04Hdcp\\x18\\x01 \\x01(\\x0e\\x32\\x34.ClientIdentification.ClientCapabilities.HdcpVersion\\x12>\\n\\tCgmsFlags\\x18\\x02 \\x01(\\x0e\\x32+.License.KeyContainer.OutputProtection.CGMS\\\"C\\n\\x04\\x43GMS\\x12\\r\\n\\tCOPY_FREE\\x10\\x00\\x12\\r\\n\\tCOPY_ONCE\\x10\\x02\\x12\\x0e\\n\\nCOPY_NEVER\\x10\\x03\\x12\\r\\n\\tCGMS_NONE\\x10*\\x1a\\x31\\n\\nKeyControl\\x12\\x17\\n\\x0fKeyControlBlock\\x18\\x01 \\x02(\\x0c\\x12\\n\\n\\x02Iv\\x18\\x02 \\x01(\\x0c\\x1a|\\n\\x1dOperatorSessionKeyPermissions\\x12\\x14\\n\\x0c\\x41llowEncrypt\\x18\\x01 \\x01(\\r\\x12\\x14\\n\\x0c\\x41llowDecrypt\\x18\\x02 \\x01(\\r\\x12\\x11\\n\\tAllowSign\\x18\\x03 \\x01(\\r\\x12\\x1c\\n\\x14\\x41llowSignatureVerify\\x18\\x04 \\x01(\\r\\x1a\\x99\\x01\\n\\x19VideoResolutionConstraint\\x12\\x1b\\n\\x13MinResolutionPixels\\x18\\x01 \\x01(\\r\\x12\\x1b\\n\\x13MaxResolutionPixels\\x18\\x02 \\x01(\\r\\x12\\x42\\n\\x12RequiredProtection\\x18\\x03 \\x01(\\x0b\\x32&.License.KeyContainer.OutputProtection\\\"J\\n\\x07KeyType\\x12\\x0b\\n\\x07SIGNING\\x10\\x01\\x12\\x0b\\n\\x07\\x43ONTENT\\x10\\x02\\x12\\x0f\\n\\x0bKEY_CONTROL\\x10\\x03\\x12\\x14\\n\\x10OPERATOR_SESSION\\x10\\x04\\\"z\\n\\rSecurityLevel\\x12\\x14\\n\\x10SW_SECURE_CRYPTO\\x10\\x01\\x12\\x14\\n\\x10SW_SECURE_DECODE\\x10\\x02\\x12\\x14\\n\\x10HW_SECURE_CRYPTO\\x10\\x03\\x12\\x14\\n\\x10HW_SECURE_DECODE\\x10\\x04\\x12\\x11\\n\\rHW_SECURE_ALL\\x10\\x05\\\"\\x98\\x01\\n\\x0cLicenseError\\x12&\\n\\tErrorCode\\x18\\x01 \\x01(\\x0e\\x32\\x13.LicenseError.Error\\\"`\\n\\x05\\x45rror\\x12\\x1e\\n\\x1aINVALID_DEVICE_CERTIFICATE\\x10\\x01\\x12\\x1e\\n\\x1aREVOKED_DEVICE_CERTIFICATE\\x10\\x02\\x12\\x17\\n\\x13SERVICE_UNAVAILABLE\\x10\\x03\\\"\\xac\\x07\\n\\x0eLicenseRequest\\x12\\'\\n\\x08\\x43lientId\\x18\\x01 \\x01(\\x0b\\x32\\x15.ClientIdentification\\x12\\x38\\n\\tContentId\\x18\\x02 \\x01(\\x0b\\x32%.LicenseRequest.ContentIdentification\\x12)\\n\\x04Type\\x18\\x03 \\x01(\\x0e\\x32\\x1b.LicenseRequest.RequestType\\x12\\x13\\n\\x0bRequestTime\\x18\\x04 \\x01(\\r\\x12!\\n\\x19KeyControlNonceDeprecated\\x18\\x05 \\x01(\\x0c\\x12)\\n\\x0fProtocolVersion\\x18\\x06 \\x01(\\x0e\\x32\\x10.ProtocolVersion\\x12\\x17\\n\\x0fKeyControlNonce\\x18\\x07 \\x01(\\r\\x12\\x39\\n\\x11\\x45ncryptedClientId\\x18\\x08 \\x01(\\x0b\\x32\\x1e.EncryptedClientIdentification\\x1a\\xa2\\x04\\n\\x15\\x43ontentIdentification\\x12:\\n\\x06\\x43\\x65ncId\\x18\\x01 \\x01(\\x0b\\x32*.LicenseRequest.ContentIdentification.CENC\\x12:\\n\\x06WebmId\\x18\\x02 \\x01(\\x0b\\x32*.LicenseRequest.ContentIdentification.WebM\\x12\\x46\\n\\x07License\\x18\\x03 \\x01(\\x0b\\x32\\x35.LicenseRequest.ContentIdentification.ExistingLicense\\x1a_\\n\\x04\\x43\\x45NC\\x12!\\n\\x04Pssh\\x18\\x01 \\x01(\\x0b\\x32\\x13.WidevineCencHeader\\x12!\\n\\x0bLicenseType\\x18\\x02 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x11\\n\\tRequestId\\x18\\x03 \\x01(\\x0c\\x1aL\\n\\x04WebM\\x12\\x0e\\n\\x06Header\\x18\\x01 \\x01(\\x0c\\x12!\\n\\x0bLicenseType\\x18\\x02 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x11\\n\\tRequestId\\x18\\x03 \\x01(\\x0c\\x1a\\x99\\x01\\n\\x0f\\x45xistingLicense\\x12)\\n\\tLicenseId\\x18\\x01 \\x01(\\x0b\\x32\\x16.LicenseIdentification\\x12\\x1b\\n\\x13SecondsSinceStarted\\x18\\x02 \\x01(\\r\\x12\\x1e\\n\\x16SecondsSinceLastPlayed\\x18\\x03 \\x01(\\r\\x12\\x1e\\n\\x16SessionUsageTableEntry\\x18\\x04 \\x01(\\x0c\\\"0\\n\\x0bRequestType\\x12\\x07\\n\\x03NEW\\x10\\x01\\x12\\x0b\\n\\x07RENEWAL\\x10\\x02\\x12\\x0b\\n\\x07RELEASE\\x10\\x03\\\"\\xa9\\x07\\n\\x11LicenseRequestRaw\\x12\\'\\n\\x08\\x43lientId\\x18\\x01 \\x01(\\x0b\\x32\\x15.ClientIdentification\\x12;\\n\\tContentId\\x18\\x02 \\x01(\\x0b\\x32(.LicenseRequestRaw.ContentIdentification\\x12,\\n\\x04Type\\x18\\x03 \\x01(\\x0e\\x32\\x1e.LicenseRequestRaw.RequestType\\x12\\x13\\n\\x0bRequestTime\\x18\\x04 \\x01(\\r\\x12!\\n\\x19KeyControlNonceDeprecated\\x18\\x05 \\x01(\\x0c\\x12)\\n\\x0fProtocolVersion\\x18\\x06 \\x01(\\x0e\\x32\\x10.ProtocolVersion\\x12\\x17\\n\\x0fKeyControlNonce\\x18\\x07 \\x01(\\r\\x12\\x39\\n\\x11\\x45ncryptedClientId\\x18\\x08 \\x01(\\x0b\\x32\\x1e.EncryptedClientIdentification\\x1a\\x96\\x04\\n\\x15\\x43ontentIdentification\\x12=\\n\\x06\\x43\\x65ncId\\x18\\x01 \\x01(\\x0b\\x32-.LicenseRequestRaw.ContentIdentification.CENC\\x12=\\n\\x06WebmId\\x18\\x02 \\x01(\\x0b\\x32-.LicenseRequestRaw.ContentIdentification.WebM\\x12I\\n\\x07License\\x18\\x03 \\x01(\\x0b\\x32\\x38.LicenseRequestRaw.ContentIdentification.ExistingLicense\\x1aJ\\n\\x04\\x43\\x45NC\\x12\\x0c\\n\\x04Pssh\\x18\\x01 \\x01(\\x0c\\x12!\\n\\x0bLicenseType\\x18\\x02 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x11\\n\\tRequestId\\x18\\x03 \\x01(\\x0c\\x1aL\\n\\x04WebM\\x12\\x0e\\n\\x06Header\\x18\\x01 \\x01(\\x0c\\x12!\\n\\x0bLicenseType\\x18\\x02 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x11\\n\\tRequestId\\x18\\x03 \\x01(\\x0c\\x1a\\x99\\x01\\n\\x0f\\x45xistingLicense\\x12)\\n\\tLicenseId\\x18\\x01 \\x01(\\x0b\\x32\\x16.LicenseIdentification\\x12\\x1b\\n\\x13SecondsSinceStarted\\x18\\x02 \\x01(\\r\\x12\\x1e\\n\\x16SecondsSinceLastPlayed\\x18\\x03 \\x01(\\r\\x12\\x1e\\n\\x16SessionUsageTableEntry\\x18\\x04 \\x01(\\x0c\\\"0\\n\\x0bRequestType\\x12\\x07\\n\\x03NEW\\x10\\x01\\x12\\x0b\\n\\x07RENEWAL\\x10\\x02\\x12\\x0b\\n\\x07RELEASE\\x10\\x03\\\"\\xa6\\x02\\n\\x15ProvisionedDeviceInfo\\x12\\x10\\n\\x08SystemId\\x18\\x01 \\x01(\\r\\x12\\x0b\\n\\x03Soc\\x18\\x02 \\x01(\\t\\x12\\x14\\n\\x0cManufacturer\\x18\\x03 \\x01(\\t\\x12\\r\\n\\x05Model\\x18\\x04 \\x01(\\t\\x12\\x12\\n\\nDeviceType\\x18\\x05 \\x01(\\t\\x12\\x11\\n\\tModelYear\\x18\\x06 \\x01(\\r\\x12=\\n\\rSecurityLevel\\x18\\x07 \\x01(\\x0e\\x32&.ProvisionedDeviceInfo.WvSecurityLevel\\x12\\x12\\n\\nTestDevice\\x18\\x08 \\x01(\\r\\\"O\\n\\x0fWvSecurityLevel\\x12\\x15\\n\\x11LEVEL_UNSPECIFIED\\x10\\x00\\x12\\x0b\\n\\x07LEVEL_1\\x10\\x01\\x12\\x0b\\n\\x07LEVEL_2\\x10\\x02\\x12\\x0b\\n\\x07LEVEL_3\\x10\\x03\\\"\\x15\\n\\x13ProvisioningOptions\\\"\\x15\\n\\x13ProvisioningRequest\\\"\\x16\\n\\x14ProvisioningResponse\\\"i\\n\\x11RemoteAttestation\\x12\\x33\\n\\x0b\\x43\\x65rtificate\\x18\\x01 \\x01(\\x0b\\x32\\x1e.EncryptedClientIdentification\\x12\\x0c\\n\\x04Salt\\x18\\x02 \\x01(\\t\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\t\\\"\\r\\n\\x0bSessionInit\\\"\\x0e\\n\\x0cSessionState\\\"\\x1d\\n\\x1bSignedCertificateStatusList\\\"\\x86\\x01\\n\\x17SignedDeviceCertificate\\x12.\\n\\x12_DeviceCertificate\\x18\\x01 \\x01(\\x0b\\x32\\x12.DeviceCertificate\\x12\\x11\\n\\tSignature\\x18\\x02 \\x01(\\x0c\\x12(\\n\\x06Signer\\x18\\x03 \\x01(\\x0b\\x32\\x18.SignedDeviceCertificate\\\"\\x1b\\n\\x19SignedProvisioningMessage\\\"\\x9b\\x02\\n\\rSignedMessage\\x12(\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32\\x1a.SignedMessage.MessageType\\x12\\x0b\\n\\x03Msg\\x18\\x02 \\x01(\\x0c\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"}\\n\\x0bMessageType\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xc5\\x02\\n\\x12WidevineCencHeader\\x12\\x30\\n\\talgorithm\\x18\\x01 \\x01(\\x0e\\x32\\x1d.WidevineCencHeader.Algorithm\\x12\\x0e\\n\\x06key_id\\x18\\x02 \\x03(\\x0c\\x12\\x10\\n\\x08provider\\x18\\x03 \\x01(\\t\\x12\\x12\\n\\ncontent_id\\x18\\x04 \\x01(\\x0c\\x12\\x1d\\n\\x15track_type_deprecated\\x18\\x05 \\x01(\\t\\x12\\x0e\\n\\x06policy\\x18\\x06 \\x01(\\t\\x12\\x1b\\n\\x13\\x63rypto_period_index\\x18\\x07 \\x01(\\r\\x12\\x17\\n\\x0fgrouped_license\\x18\\x08 \\x01(\\x0c\\x12\\x19\\n\\x11protection_scheme\\x18\\t \\x01(\\r\\x12\\x1d\\n\\x15\\x63rypto_period_seconds\\x18\\n \\x01(\\r\\\"(\\n\\tAlgorithm\\x12\\x0f\\n\\x0bUNENCRYPTED\\x10\\x00\\x12\\n\\n\\x06\\x41\\x45SCTR\\x10\\x01\\\"\\xba\\x02\\n\\x14SignedLicenseRequest\\x12/\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32!.SignedLicenseRequest.MessageType\\x12\\x1c\\n\\x03Msg\\x18\\x02 \\x01(\\x0b\\x32\\x0f.LicenseRequest\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"}\\n\\x0bMessageType\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xc3\\x02\\n\\x17SignedLicenseRequestRaw\\x12\\x32\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32$.SignedLicenseRequestRaw.MessageType\\x12\\x1f\\n\\x03Msg\\x18\\x02 \\x01(\\x0b\\x32\\x12.LicenseRequestRaw\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"}\\n\\x0bMessageType\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xa5\\x02\\n\\rSignedLicense\\x12(\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32\\x1a.SignedLicense.MessageType\\x12\\x15\\n\\x03Msg\\x18\\x02 \\x01(\\x0b\\x32\\x08.License\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"}\\n\\x0bMessageType\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xcb\\x02\\n\\x18SignedServiceCertificate\\x12\\x33\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32%.SignedServiceCertificate.MessageType\\x12%\\n\\x03Msg\\x18\\x02 \\x01(\\x0b\\x32\\x18.SignedDeviceCertificate\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"}\\n\\x0bMessageType\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xb5\\x01\\n\\nFileHashes\\x12\\x0e\\n\\x06signer\\x18\\x01 \\x01(\\x0c\\x12)\\n\\nsignatures\\x18\\x02 \\x03(\\x0b\\x32\\x15.FileHashes.Signature\\x1al\\n\\tSignature\\x12\\x10\\n\\x08\\x66ilename\\x18\\x01 \\x01(\\t\\x12\\x14\\n\\x0ctest_signing\\x18\\x02 \\x01(\\x08\\x12\\x12\\n\\nSHA512Hash\\x18\\x03 \\x01(\\x0c\\x12\\x10\\n\\x08main_exe\\x18\\x04 \\x01(\\x08\\x12\\x11\\n\\tsignature\\x18\\x05 \\x01(\\x0c*1\\n\\x0bLicenseType\\x12\\x08\\n\\x04ZERO\\x10\\x00\\x12\\x0b\\n\\x07\\x44\\x45\\x46\\x41ULT\\x10\\x01\\x12\\x0b\\n\\x07OFFLINE\\x10\\x02*\\x1e\\n\\x0fProtocolVersion\\x12\\x0b\\n\\x07\\x43URRENT\\x10\\x15')\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'wv_proto2_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n  DESCRIPTOR._options = None\n  _LICENSETYPE._serialized_start=8339\n  _LICENSETYPE._serialized_end=8388\n  _PROTOCOLVERSION._serialized_start=8390\n  _PROTOCOLVERSION._serialized_end=8420",
        "detail": "modules.cdm.protos.wv_proto2_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto2_pb2",
        "description": "modules.cdm.protos.wv_proto2_pb2",
        "peekOfCode": "DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\\n\\x0fwv_proto2.proto\\\"\\xe7\\x05\\n\\x14\\x43lientIdentification\\x12-\\n\\x04Type\\x18\\x01 \\x02(\\x0e\\x32\\x1f.ClientIdentification.TokenType\\x12\\'\\n\\x05Token\\x18\\x02 \\x01(\\x0b\\x32\\x18.SignedDeviceCertificate\\x12\\x33\\n\\nClientInfo\\x18\\x03 \\x03(\\x0b\\x32\\x1f.ClientIdentification.NameValue\\x12\\x1b\\n\\x13ProviderClientToken\\x18\\x04 \\x01(\\x0c\\x12\\x16\\n\\x0eLicenseCounter\\x18\\x05 \\x01(\\r\\x12\\x45\\n\\x13_ClientCapabilities\\x18\\x06 \\x01(\\x0b\\x32(.ClientIdentification.ClientCapabilities\\x12 \\n\\x0b_FileHashes\\x18\\x07 \\x01(\\x0b\\x32\\x0b.FileHashes\\x1a(\\n\\tNameValue\\x12\\x0c\\n\\x04Name\\x18\\x01 \\x02(\\t\\x12\\r\\n\\x05Value\\x18\\x02 \\x02(\\t\\x1a\\xa4\\x02\\n\\x12\\x43lientCapabilities\\x12\\x13\\n\\x0b\\x43lientToken\\x18\\x01 \\x01(\\r\\x12\\x14\\n\\x0cSessionToken\\x18\\x02 \\x01(\\r\\x12\\\"\\n\\x1aVideoResolutionConstraints\\x18\\x03 \\x01(\\r\\x12L\\n\\x0eMaxHdcpVersion\\x18\\x04 \\x01(\\x0e\\x32\\x34.ClientIdentification.ClientCapabilities.HdcpVersion\\x12\\x1b\\n\\x13OemCryptoApiVersion\\x18\\x05 \\x01(\\r\\\"T\\n\\x0bHdcpVersion\\x12\\r\\n\\tHDCP_NONE\\x10\\x00\\x12\\x0b\\n\\x07HDCP_V1\\x10\\x01\\x12\\x0b\\n\\x07HDCP_V2\\x10\\x02\\x12\\r\\n\\tHDCP_V2_1\\x10\\x03\\x12\\r\\n\\tHDCP_V2_2\\x10\\x04\\\"S\\n\\tTokenType\\x12\\n\\n\\x06KEYBOX\\x10\\x00\\x12\\x16\\n\\x12\\x44\\x45VICE_CERTIFICATE\\x10\\x01\\x12\\\"\\n\\x1eREMOTE_ATTESTATION_CERTIFICATE\\x10\\x02\\\"\\x9b\\x02\\n\\x11\\x44\\x65viceCertificate\\x12\\x30\\n\\x04Type\\x18\\x01 \\x02(\\x0e\\x32\\\".DeviceCertificate.CertificateType\\x12\\x14\\n\\x0cSerialNumber\\x18\\x02 \\x01(\\x0c\\x12\\x1b\\n\\x13\\x43reationTimeSeconds\\x18\\x03 \\x01(\\r\\x12\\x11\\n\\tPublicKey\\x18\\x04 \\x01(\\x0c\\x12\\x10\\n\\x08SystemId\\x18\\x05 \\x01(\\r\\x12\\x1c\\n\\x14TestDeviceDeprecated\\x18\\x06 \\x01(\\r\\x12\\x11\\n\\tServiceId\\x18\\x07 \\x01(\\x0c\\\"K\\n\\x0f\\x43\\x65rtificateType\\x12\\x08\\n\\x04ROOT\\x10\\x00\\x12\\x10\\n\\x0cINTERMEDIATE\\x10\\x01\\x12\\x0f\\n\\x0bUSER_DEVICE\\x10\\x02\\x12\\x0b\\n\\x07SERVICE\\x10\\x03\\\"\\xc4\\x01\\n\\x17\\x44\\x65viceCertificateStatus\\x12\\x14\\n\\x0cSerialNumber\\x18\\x01 \\x01(\\x0c\\x12:\\n\\x06Status\\x18\\x02 \\x01(\\x0e\\x32*.DeviceCertificateStatus.CertificateStatus\\x12*\\n\\nDeviceInfo\\x18\\x04 \\x01(\\x0b\\x32\\x16.ProvisionedDeviceInfo\\\"+\\n\\x11\\x43\\x65rtificateStatus\\x12\\t\\n\\x05VALID\\x10\\x00\\x12\\x0b\\n\\x07REVOKED\\x10\\x01\\\"o\\n\\x1b\\x44\\x65viceCertificateStatusList\\x12\\x1b\\n\\x13\\x43reationTimeSeconds\\x18\\x01 \\x01(\\r\\x12\\x33\\n\\x11\\x43\\x65rtificateStatus\\x18\\x02 \\x03(\\x0b\\x32\\x18.DeviceCertificateStatus\\\"\\xaf\\x01\\n\\x1d\\x45ncryptedClientIdentification\\x12\\x11\\n\\tServiceId\\x18\\x01 \\x02(\\t\\x12&\\n\\x1eServiceCertificateSerialNumber\\x18\\x02 \\x01(\\x0c\\x12\\x19\\n\\x11\\x45ncryptedClientId\\x18\\x03 \\x02(\\x0c\\x12\\x1b\\n\\x13\\x45ncryptedClientIdIv\\x18\\x04 \\x02(\\x0c\\x12\\x1b\\n\\x13\\x45ncryptedPrivacyKey\\x18\\x05 \\x02(\\x0c\\\"\\x9c\\x01\\n\\x15LicenseIdentification\\x12\\x11\\n\\tRequestId\\x18\\x01 \\x01(\\x0c\\x12\\x11\\n\\tSessionId\\x18\\x02 \\x01(\\x0c\\x12\\x12\\n\\nPurchaseId\\x18\\x03 \\x01(\\x0c\\x12\\x1a\\n\\x04Type\\x18\\x04 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x0f\\n\\x07Version\\x18\\x05 \\x01(\\r\\x12\\x1c\\n\\x14ProviderSessionToken\\x18\\x06 \\x01(\\x0c\\\"\\xa1\\x0e\\n\\x07License\\x12\\\"\\n\\x02Id\\x18\\x01 \\x01(\\x0b\\x32\\x16.LicenseIdentification\\x12 \\n\\x07_Policy\\x18\\x02 \\x01(\\x0b\\x32\\x0f.License.Policy\\x12\\\"\\n\\x03Key\\x18\\x03 \\x03(\\x0b\\x32\\x15.License.KeyContainer\\x12\\x18\\n\\x10LicenseStartTime\\x18\\x04 \\x01(\\r\\x12!\\n\\x19RemoteAttestationVerified\\x18\\x05 \\x01(\\r\\x12\\x1b\\n\\x13ProviderClientToken\\x18\\x06 \\x01(\\x0c\\x12\\x18\\n\\x10ProtectionScheme\\x18\\x07 \\x01(\\r\\x1a\\xbb\\x02\\n\\x06Policy\\x12\\x0f\\n\\x07\\x43\\x61nPlay\\x18\\x01 \\x01(\\x08\\x12\\x12\\n\\nCanPersist\\x18\\x02 \\x01(\\x08\\x12\\x10\\n\\x08\\x43\\x61nRenew\\x18\\x03 \\x01(\\x08\\x12\\x1d\\n\\x15RentalDurationSeconds\\x18\\x04 \\x01(\\r\\x12\\x1f\\n\\x17PlaybackDurationSeconds\\x18\\x05 \\x01(\\r\\x12\\x1e\\n\\x16LicenseDurationSeconds\\x18\\x06 \\x01(\\r\\x12&\\n\\x1eRenewalRecoveryDurationSeconds\\x18\\x07 \\x01(\\r\\x12\\x18\\n\\x10RenewalServerUrl\\x18\\x08 \\x01(\\t\\x12\\x1b\\n\\x13RenewalDelaySeconds\\x18\\t \\x01(\\r\\x12#\\n\\x1bRenewalRetryIntervalSeconds\\x18\\n \\x01(\\r\\x12\\x16\\n\\x0eRenewWithUsage\\x18\\x0b \\x01(\\x08\\x1a\\xf9\\t\\n\\x0cKeyContainer\\x12\\n\\n\\x02Id\\x18\\x01 \\x01(\\x0c\\x12\\n\\n\\x02Iv\\x18\\x02 \\x01(\\x0c\\x12\\x0b\\n\\x03Key\\x18\\x03 \\x01(\\x0c\\x12+\\n\\x04Type\\x18\\x04 \\x01(\\x0e\\x32\\x1d.License.KeyContainer.KeyType\\x12\\x32\\n\\x05Level\\x18\\x05 \\x01(\\x0e\\x32#.License.KeyContainer.SecurityLevel\\x12\\x42\\n\\x12RequiredProtection\\x18\\x06 \\x01(\\x0b\\x32&.License.KeyContainer.OutputProtection\\x12\\x43\\n\\x13RequestedProtection\\x18\\x07 \\x01(\\x0b\\x32&.License.KeyContainer.OutputProtection\\x12\\x35\\n\\x0b_KeyControl\\x18\\x08 \\x01(\\x0b\\x32 .License.KeyContainer.KeyControl\\x12[\\n\\x1e_OperatorSessionKeyPermissions\\x18\\t \\x01(\\x0b\\x32\\x33.License.KeyContainer.OperatorSessionKeyPermissions\\x12S\\n\\x1aVideoResolutionConstraints\\x18\\n \\x03(\\x0b\\x32/.License.KeyContainer.VideoResolutionConstraint\\x1a\\xdb\\x01\\n\\x10OutputProtection\\x12\\x42\\n\\x04Hdcp\\x18\\x01 \\x01(\\x0e\\x32\\x34.ClientIdentification.ClientCapabilities.HdcpVersion\\x12>\\n\\tCgmsFlags\\x18\\x02 \\x01(\\x0e\\x32+.License.KeyContainer.OutputProtection.CGMS\\\"C\\n\\x04\\x43GMS\\x12\\r\\n\\tCOPY_FREE\\x10\\x00\\x12\\r\\n\\tCOPY_ONCE\\x10\\x02\\x12\\x0e\\n\\nCOPY_NEVER\\x10\\x03\\x12\\r\\n\\tCGMS_NONE\\x10*\\x1a\\x31\\n\\nKeyControl\\x12\\x17\\n\\x0fKeyControlBlock\\x18\\x01 \\x02(\\x0c\\x12\\n\\n\\x02Iv\\x18\\x02 \\x01(\\x0c\\x1a|\\n\\x1dOperatorSessionKeyPermissions\\x12\\x14\\n\\x0c\\x41llowEncrypt\\x18\\x01 \\x01(\\r\\x12\\x14\\n\\x0c\\x41llowDecrypt\\x18\\x02 \\x01(\\r\\x12\\x11\\n\\tAllowSign\\x18\\x03 \\x01(\\r\\x12\\x1c\\n\\x14\\x41llowSignatureVerify\\x18\\x04 \\x01(\\r\\x1a\\x99\\x01\\n\\x19VideoResolutionConstraint\\x12\\x1b\\n\\x13MinResolutionPixels\\x18\\x01 \\x01(\\r\\x12\\x1b\\n\\x13MaxResolutionPixels\\x18\\x02 \\x01(\\r\\x12\\x42\\n\\x12RequiredProtection\\x18\\x03 \\x01(\\x0b\\x32&.License.KeyContainer.OutputProtection\\\"J\\n\\x07KeyType\\x12\\x0b\\n\\x07SIGNING\\x10\\x01\\x12\\x0b\\n\\x07\\x43ONTENT\\x10\\x02\\x12\\x0f\\n\\x0bKEY_CONTROL\\x10\\x03\\x12\\x14\\n\\x10OPERATOR_SESSION\\x10\\x04\\\"z\\n\\rSecurityLevel\\x12\\x14\\n\\x10SW_SECURE_CRYPTO\\x10\\x01\\x12\\x14\\n\\x10SW_SECURE_DECODE\\x10\\x02\\x12\\x14\\n\\x10HW_SECURE_CRYPTO\\x10\\x03\\x12\\x14\\n\\x10HW_SECURE_DECODE\\x10\\x04\\x12\\x11\\n\\rHW_SECURE_ALL\\x10\\x05\\\"\\x98\\x01\\n\\x0cLicenseError\\x12&\\n\\tErrorCode\\x18\\x01 \\x01(\\x0e\\x32\\x13.LicenseError.Error\\\"`\\n\\x05\\x45rror\\x12\\x1e\\n\\x1aINVALID_DEVICE_CERTIFICATE\\x10\\x01\\x12\\x1e\\n\\x1aREVOKED_DEVICE_CERTIFICATE\\x10\\x02\\x12\\x17\\n\\x13SERVICE_UNAVAILABLE\\x10\\x03\\\"\\xac\\x07\\n\\x0eLicenseRequest\\x12\\'\\n\\x08\\x43lientId\\x18\\x01 \\x01(\\x0b\\x32\\x15.ClientIdentification\\x12\\x38\\n\\tContentId\\x18\\x02 \\x01(\\x0b\\x32%.LicenseRequest.ContentIdentification\\x12)\\n\\x04Type\\x18\\x03 \\x01(\\x0e\\x32\\x1b.LicenseRequest.RequestType\\x12\\x13\\n\\x0bRequestTime\\x18\\x04 \\x01(\\r\\x12!\\n\\x19KeyControlNonceDeprecated\\x18\\x05 \\x01(\\x0c\\x12)\\n\\x0fProtocolVersion\\x18\\x06 \\x01(\\x0e\\x32\\x10.ProtocolVersion\\x12\\x17\\n\\x0fKeyControlNonce\\x18\\x07 \\x01(\\r\\x12\\x39\\n\\x11\\x45ncryptedClientId\\x18\\x08 \\x01(\\x0b\\x32\\x1e.EncryptedClientIdentification\\x1a\\xa2\\x04\\n\\x15\\x43ontentIdentification\\x12:\\n\\x06\\x43\\x65ncId\\x18\\x01 \\x01(\\x0b\\x32*.LicenseRequest.ContentIdentification.CENC\\x12:\\n\\x06WebmId\\x18\\x02 \\x01(\\x0b\\x32*.LicenseRequest.ContentIdentification.WebM\\x12\\x46\\n\\x07License\\x18\\x03 \\x01(\\x0b\\x32\\x35.LicenseRequest.ContentIdentification.ExistingLicense\\x1a_\\n\\x04\\x43\\x45NC\\x12!\\n\\x04Pssh\\x18\\x01 \\x01(\\x0b\\x32\\x13.WidevineCencHeader\\x12!\\n\\x0bLicenseType\\x18\\x02 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x11\\n\\tRequestId\\x18\\x03 \\x01(\\x0c\\x1aL\\n\\x04WebM\\x12\\x0e\\n\\x06Header\\x18\\x01 \\x01(\\x0c\\x12!\\n\\x0bLicenseType\\x18\\x02 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x11\\n\\tRequestId\\x18\\x03 \\x01(\\x0c\\x1a\\x99\\x01\\n\\x0f\\x45xistingLicense\\x12)\\n\\tLicenseId\\x18\\x01 \\x01(\\x0b\\x32\\x16.LicenseIdentification\\x12\\x1b\\n\\x13SecondsSinceStarted\\x18\\x02 \\x01(\\r\\x12\\x1e\\n\\x16SecondsSinceLastPlayed\\x18\\x03 \\x01(\\r\\x12\\x1e\\n\\x16SessionUsageTableEntry\\x18\\x04 \\x01(\\x0c\\\"0\\n\\x0bRequestType\\x12\\x07\\n\\x03NEW\\x10\\x01\\x12\\x0b\\n\\x07RENEWAL\\x10\\x02\\x12\\x0b\\n\\x07RELEASE\\x10\\x03\\\"\\xa9\\x07\\n\\x11LicenseRequestRaw\\x12\\'\\n\\x08\\x43lientId\\x18\\x01 \\x01(\\x0b\\x32\\x15.ClientIdentification\\x12;\\n\\tContentId\\x18\\x02 \\x01(\\x0b\\x32(.LicenseRequestRaw.ContentIdentification\\x12,\\n\\x04Type\\x18\\x03 \\x01(\\x0e\\x32\\x1e.LicenseRequestRaw.RequestType\\x12\\x13\\n\\x0bRequestTime\\x18\\x04 \\x01(\\r\\x12!\\n\\x19KeyControlNonceDeprecated\\x18\\x05 \\x01(\\x0c\\x12)\\n\\x0fProtocolVersion\\x18\\x06 \\x01(\\x0e\\x32\\x10.ProtocolVersion\\x12\\x17\\n\\x0fKeyControlNonce\\x18\\x07 \\x01(\\r\\x12\\x39\\n\\x11\\x45ncryptedClientId\\x18\\x08 \\x01(\\x0b\\x32\\x1e.EncryptedClientIdentification\\x1a\\x96\\x04\\n\\x15\\x43ontentIdentification\\x12=\\n\\x06\\x43\\x65ncId\\x18\\x01 \\x01(\\x0b\\x32-.LicenseRequestRaw.ContentIdentification.CENC\\x12=\\n\\x06WebmId\\x18\\x02 \\x01(\\x0b\\x32-.LicenseRequestRaw.ContentIdentification.WebM\\x12I\\n\\x07License\\x18\\x03 \\x01(\\x0b\\x32\\x38.LicenseRequestRaw.ContentIdentification.ExistingLicense\\x1aJ\\n\\x04\\x43\\x45NC\\x12\\x0c\\n\\x04Pssh\\x18\\x01 \\x01(\\x0c\\x12!\\n\\x0bLicenseType\\x18\\x02 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x11\\n\\tRequestId\\x18\\x03 \\x01(\\x0c\\x1aL\\n\\x04WebM\\x12\\x0e\\n\\x06Header\\x18\\x01 \\x01(\\x0c\\x12!\\n\\x0bLicenseType\\x18\\x02 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x11\\n\\tRequestId\\x18\\x03 \\x01(\\x0c\\x1a\\x99\\x01\\n\\x0f\\x45xistingLicense\\x12)\\n\\tLicenseId\\x18\\x01 \\x01(\\x0b\\x32\\x16.LicenseIdentification\\x12\\x1b\\n\\x13SecondsSinceStarted\\x18\\x02 \\x01(\\r\\x12\\x1e\\n\\x16SecondsSinceLastPlayed\\x18\\x03 \\x01(\\r\\x12\\x1e\\n\\x16SessionUsageTableEntry\\x18\\x04 \\x01(\\x0c\\\"0\\n\\x0bRequestType\\x12\\x07\\n\\x03NEW\\x10\\x01\\x12\\x0b\\n\\x07RENEWAL\\x10\\x02\\x12\\x0b\\n\\x07RELEASE\\x10\\x03\\\"\\xa6\\x02\\n\\x15ProvisionedDeviceInfo\\x12\\x10\\n\\x08SystemId\\x18\\x01 \\x01(\\r\\x12\\x0b\\n\\x03Soc\\x18\\x02 \\x01(\\t\\x12\\x14\\n\\x0cManufacturer\\x18\\x03 \\x01(\\t\\x12\\r\\n\\x05Model\\x18\\x04 \\x01(\\t\\x12\\x12\\n\\nDeviceType\\x18\\x05 \\x01(\\t\\x12\\x11\\n\\tModelYear\\x18\\x06 \\x01(\\r\\x12=\\n\\rSecurityLevel\\x18\\x07 \\x01(\\x0e\\x32&.ProvisionedDeviceInfo.WvSecurityLevel\\x12\\x12\\n\\nTestDevice\\x18\\x08 \\x01(\\r\\\"O\\n\\x0fWvSecurityLevel\\x12\\x15\\n\\x11LEVEL_UNSPECIFIED\\x10\\x00\\x12\\x0b\\n\\x07LEVEL_1\\x10\\x01\\x12\\x0b\\n\\x07LEVEL_2\\x10\\x02\\x12\\x0b\\n\\x07LEVEL_3\\x10\\x03\\\"\\x15\\n\\x13ProvisioningOptions\\\"\\x15\\n\\x13ProvisioningRequest\\\"\\x16\\n\\x14ProvisioningResponse\\\"i\\n\\x11RemoteAttestation\\x12\\x33\\n\\x0b\\x43\\x65rtificate\\x18\\x01 \\x01(\\x0b\\x32\\x1e.EncryptedClientIdentification\\x12\\x0c\\n\\x04Salt\\x18\\x02 \\x01(\\t\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\t\\\"\\r\\n\\x0bSessionInit\\\"\\x0e\\n\\x0cSessionState\\\"\\x1d\\n\\x1bSignedCertificateStatusList\\\"\\x86\\x01\\n\\x17SignedDeviceCertificate\\x12.\\n\\x12_DeviceCertificate\\x18\\x01 \\x01(\\x0b\\x32\\x12.DeviceCertificate\\x12\\x11\\n\\tSignature\\x18\\x02 \\x01(\\x0c\\x12(\\n\\x06Signer\\x18\\x03 \\x01(\\x0b\\x32\\x18.SignedDeviceCertificate\\\"\\x1b\\n\\x19SignedProvisioningMessage\\\"\\x9b\\x02\\n\\rSignedMessage\\x12(\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32\\x1a.SignedMessage.MessageType\\x12\\x0b\\n\\x03Msg\\x18\\x02 \\x01(\\x0c\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"}\\n\\x0bMessageType\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xc5\\x02\\n\\x12WidevineCencHeader\\x12\\x30\\n\\talgorithm\\x18\\x01 \\x01(\\x0e\\x32\\x1d.WidevineCencHeader.Algorithm\\x12\\x0e\\n\\x06key_id\\x18\\x02 \\x03(\\x0c\\x12\\x10\\n\\x08provider\\x18\\x03 \\x01(\\t\\x12\\x12\\n\\ncontent_id\\x18\\x04 \\x01(\\x0c\\x12\\x1d\\n\\x15track_type_deprecated\\x18\\x05 \\x01(\\t\\x12\\x0e\\n\\x06policy\\x18\\x06 \\x01(\\t\\x12\\x1b\\n\\x13\\x63rypto_period_index\\x18\\x07 \\x01(\\r\\x12\\x17\\n\\x0fgrouped_license\\x18\\x08 \\x01(\\x0c\\x12\\x19\\n\\x11protection_scheme\\x18\\t \\x01(\\r\\x12\\x1d\\n\\x15\\x63rypto_period_seconds\\x18\\n \\x01(\\r\\\"(\\n\\tAlgorithm\\x12\\x0f\\n\\x0bUNENCRYPTED\\x10\\x00\\x12\\n\\n\\x06\\x41\\x45SCTR\\x10\\x01\\\"\\xba\\x02\\n\\x14SignedLicenseRequest\\x12/\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32!.SignedLicenseRequest.MessageType\\x12\\x1c\\n\\x03Msg\\x18\\x02 \\x01(\\x0b\\x32\\x0f.LicenseRequest\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"}\\n\\x0bMessageType\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xc3\\x02\\n\\x17SignedLicenseRequestRaw\\x12\\x32\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32$.SignedLicenseRequestRaw.MessageType\\x12\\x1f\\n\\x03Msg\\x18\\x02 \\x01(\\x0b\\x32\\x12.LicenseRequestRaw\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"}\\n\\x0bMessageType\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xa5\\x02\\n\\rSignedLicense\\x12(\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32\\x1a.SignedLicense.MessageType\\x12\\x15\\n\\x03Msg\\x18\\x02 \\x01(\\x0b\\x32\\x08.License\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"}\\n\\x0bMessageType\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xcb\\x02\\n\\x18SignedServiceCertificate\\x12\\x33\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32%.SignedServiceCertificate.MessageType\\x12%\\n\\x03Msg\\x18\\x02 \\x01(\\x0b\\x32\\x18.SignedDeviceCertificate\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"}\\n\\x0bMessageType\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xb5\\x01\\n\\nFileHashes\\x12\\x0e\\n\\x06signer\\x18\\x01 \\x01(\\x0c\\x12)\\n\\nsignatures\\x18\\x02 \\x03(\\x0b\\x32\\x15.FileHashes.Signature\\x1al\\n\\tSignature\\x12\\x10\\n\\x08\\x66ilename\\x18\\x01 \\x01(\\t\\x12\\x14\\n\\x0ctest_signing\\x18\\x02 \\x01(\\x08\\x12\\x12\\n\\nSHA512Hash\\x18\\x03 \\x01(\\x0c\\x12\\x10\\n\\x08main_exe\\x18\\x04 \\x01(\\x08\\x12\\x11\\n\\tsignature\\x18\\x05 \\x01(\\x0c*1\\n\\x0bLicenseType\\x12\\x08\\n\\x04ZERO\\x10\\x00\\x12\\x0b\\n\\x07\\x44\\x45\\x46\\x41ULT\\x10\\x01\\x12\\x0b\\n\\x07OFFLINE\\x10\\x02*\\x1e\\n\\x0fProtocolVersion\\x12\\x0b\\n\\x07\\x43URRENT\\x10\\x15')\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'wv_proto2_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n  DESCRIPTOR._options = None\n  _LICENSETYPE._serialized_start=8339\n  _LICENSETYPE._serialized_end=8388\n  _PROTOCOLVERSION._serialized_start=8390\n  _PROTOCOLVERSION._serialized_end=8420\n  _CLIENTIDENTIFICATION._serialized_start=20",
        "detail": "modules.cdm.protos.wv_proto2_pb2",
        "documentation": {}
    },
    {
        "label": "_sym_db",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_sym_db = _symbol_database.Default()\nDESCRIPTOR = _descriptor.FileDescriptor(\n  name='wv_proto3.proto',\n  package='',\n  syntax='proto3',\n  serialized_pb=_b('\\n\\x0fwv_proto3.proto\\\"\\xc5\\x05\\n\\x14\\x43lientIdentification\\x12-\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32\\x1f.ClientIdentification.TokenType\\x12\\'\\n\\x05Token\\x18\\x02 \\x01(\\x0b\\x32\\x18.SignedDeviceCertificate\\x12\\x33\\n\\nClientInfo\\x18\\x03 \\x03(\\x0b\\x32\\x1f.ClientIdentification.NameValue\\x12\\x1b\\n\\x13ProviderClientToken\\x18\\x04 \\x01(\\x0c\\x12\\x16\\n\\x0eLicenseCounter\\x18\\x05 \\x01(\\r\\x12\\x45\\n\\x13_ClientCapabilities\\x18\\x06 \\x01(\\x0b\\x32(.ClientIdentification.ClientCapabilities\\x1a(\\n\\tNameValue\\x12\\x0c\\n\\x04Name\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05Value\\x18\\x02 \\x01(\\t\\x1a\\xa4\\x02\\n\\x12\\x43lientCapabilities\\x12\\x13\\n\\x0b\\x43lientToken\\x18\\x01 \\x01(\\r\\x12\\x14\\n\\x0cSessionToken\\x18\\x02 \\x01(\\r\\x12\\\"\\n\\x1aVideoResolutionConstraints\\x18\\x03 \\x01(\\r\\x12L\\n\\x0eMaxHdcpVersion\\x18\\x04 \\x01(\\x0e\\x32\\x34.ClientIdentification.ClientCapabilities.HdcpVersion\\x12\\x1b\\n\\x13OemCryptoApiVersion\\x18\\x05 \\x01(\\r\\\"T\\n\\x0bHdcpVersion\\x12\\r\\n\\tHDCP_NONE\\x10\\x00\\x12\\x0b\\n\\x07HDCP_V1\\x10\\x01\\x12\\x0b\\n\\x07HDCP_V2\\x10\\x02\\x12\\r\\n\\tHDCP_V2_1\\x10\\x03\\x12\\r\\n\\tHDCP_V2_2\\x10\\x04\\\"S\\n\\tTokenType\\x12\\n\\n\\x06KEYBOX\\x10\\x00\\x12\\x16\\n\\x12\\x44\\x45VICE_CERTIFICATE\\x10\\x01\\x12\\\"\\n\\x1eREMOTE_ATTESTATION_CERTIFICATE\\x10\\x02\\\"\\x9b\\x02\\n\\x11\\x44\\x65viceCertificate\\x12\\x30\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32\\\".DeviceCertificate.CertificateType\\x12\\x14\\n\\x0cSerialNumber\\x18\\x02 \\x01(\\x0c\\x12\\x1b\\n\\x13\\x43reationTimeSeconds\\x18\\x03 \\x01(\\r\\x12\\x11\\n\\tPublicKey\\x18\\x04 \\x01(\\x0c\\x12\\x10\\n\\x08SystemId\\x18\\x05 \\x01(\\r\\x12\\x1c\\n\\x14TestDeviceDeprecated\\x18\\x06 \\x01(\\r\\x12\\x11\\n\\tServiceId\\x18\\x07 \\x01(\\x0c\\\"K\\n\\x0f\\x43\\x65rtificateType\\x12\\x08\\n\\x04ROOT\\x10\\x00\\x12\\x10\\n\\x0cINTERMEDIATE\\x10\\x01\\x12\\x0f\\n\\x0bUSER_DEVICE\\x10\\x02\\x12\\x0b\\n\\x07SERVICE\\x10\\x03\\\"\\xc4\\x01\\n\\x17\\x44\\x65viceCertificateStatus\\x12\\x14\\n\\x0cSerialNumber\\x18\\x01 \\x01(\\x0c\\x12:\\n\\x06Status\\x18\\x02 \\x01(\\x0e\\x32*.DeviceCertificateStatus.CertificateStatus\\x12*\\n\\nDeviceInfo\\x18\\x04 \\x01(\\x0b\\x32\\x16.ProvisionedDeviceInfo\\\"+\\n\\x11\\x43\\x65rtificateStatus\\x12\\t\\n\\x05VALID\\x10\\x00\\x12\\x0b\\n\\x07REVOKED\\x10\\x01\\\"o\\n\\x1b\\x44\\x65viceCertificateStatusList\\x12\\x1b\\n\\x13\\x43reationTimeSeconds\\x18\\x01 \\x01(\\r\\x12\\x33\\n\\x11\\x43\\x65rtificateStatus\\x18\\x02 \\x03(\\x0b\\x32\\x18.DeviceCertificateStatus\\\"\\xaf\\x01\\n\\x1d\\x45ncryptedClientIdentification\\x12\\x11\\n\\tServiceId\\x18\\x01 \\x01(\\t\\x12&\\n\\x1eServiceCertificateSerialNumber\\x18\\x02 \\x01(\\x0c\\x12\\x19\\n\\x11\\x45ncryptedClientId\\x18\\x03 \\x01(\\x0c\\x12\\x1b\\n\\x13\\x45ncryptedClientIdIv\\x18\\x04 \\x01(\\x0c\\x12\\x1b\\n\\x13\\x45ncryptedPrivacyKey\\x18\\x05 \\x01(\\x0c\\\"\\x9c\\x01\\n\\x15LicenseIdentification\\x12\\x11\\n\\tRequestId\\x18\\x01 \\x01(\\x0c\\x12\\x11\\n\\tSessionId\\x18\\x02 \\x01(\\x0c\\x12\\x12\\n\\nPurchaseId\\x18\\x03 \\x01(\\x0c\\x12\\x1a\\n\\x04Type\\x18\\x04 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x0f\\n\\x07Version\\x18\\x05 \\x01(\\r\\x12\\x1c\\n\\x14ProviderSessionToken\\x18\\x06 \\x01(\\x0c\\\"\\xfa\\x0e\\n\\x07License\\x12\\\"\\n\\x02Id\\x18\\x01 \\x01(\\x0b\\x32\\x16.LicenseIdentification\\x12 \\n\\x07_Policy\\x18\\x02 \\x01(\\x0b\\x32\\x0f.License.Policy\\x12\\\"\\n\\x03Key\\x18\\x03 \\x03(\\x0b\\x32\\x15.License.KeyContainer\\x12\\x18\\n\\x10LicenseStartTime\\x18\\x04 \\x01(\\r\\x12!\\n\\x19RemoteAttestationVerified\\x18\\x05 \\x01(\\r\\x12\\x1b\\n\\x13ProviderClientToken\\x18\\x06 \\x01(\\x0c\\x12\\x18\\n\\x10ProtectionScheme\\x18\\x07 \\x01(\\r\\x12\\x1c\\n\\x14UnknownHdcpDataField\\x18\\x08 \\x01(\\x0c\\x1a\\xd4\\x02\\n\\x06Policy\\x12\\x0f\\n\\x07\\x43\\x61nPlay\\x18\\x01 \\x01(\\r\\x12\\x12\\n\\nCanPersist\\x18\\x02 \\x01(\\r\\x12\\x10\\n\\x08\\x43\\x61nRenew\\x18\\x03 \\x01(\\r\\x12\\x1d\\n\\x15RentalDurationSeconds\\x18\\x04 \\x01(\\r\\x12\\x1f\\n\\x17PlaybackDurationSeconds\\x18\\x05 \\x01(\\r\\x12\\x1e\\n\\x16LicenseDurationSeconds\\x18\\x06 \\x01(\\r\\x12&\\n\\x1eRenewalRecoveryDurationSeconds\\x18\\x07 \\x01(\\r\\x12\\x18\\n\\x10RenewalServerUrl\\x18\\x08 \\x01(\\t\\x12\\x1b\\n\\x13RenewalDelaySeconds\\x18\\t \\x01(\\r\\x12#\\n\\x1bRenewalRetryIntervalSeconds\\x18\\n \\x01(\\r\\x12\\x16\\n\\x0eRenewWithUsage\\x18\\x0b \\x01(\\r\\x12\\x17\\n\\x0fUnknownPolicy12\\x18\\x0c \\x01(\\r\\x1a\\x9b\\n\\n\\x0cKeyContainer\\x12\\n\\n\\x02Id\\x18\\x01 \\x01(\\x0c\\x12\\n\\n\\x02Iv\\x18\\x02 \\x01(\\x0c\\x12\\x0b\\n\\x03Key\\x18\\x03 \\x01(\\x0c\\x12+\\n\\x04Type\\x18\\x04 \\x01(\\x0e\\x32\\x1d.License.KeyContainer.KeyType\\x12\\x32\\n\\x05Level\\x18\\x05 \\x01(\\x0e\\x32#.License.KeyContainer.SecurityLevel\\x12\\x42\\n\\x12RequiredProtection\\x18\\x06 \\x01(\\x0b\\x32&.License.KeyContainer.OutputProtection\\x12\\x43\\n\\x13RequestedProtection\\x18\\x07 \\x01(\\x0b\\x32&.License.KeyContainer.OutputProtection\\x12\\x35\\n\\x0b_KeyControl\\x18\\x08 \\x01(\\x0b\\x32 .License.KeyContainer.KeyControl\\x12[\\n\\x1e_OperatorSessionKeyPermissions\\x18\\t \\x01(\\x0b\\x32\\x33.License.KeyContainer.OperatorSessionKeyPermissions\\x12S\\n\\x1aVideoResolutionConstraints\\x18\\n \\x03(\\x0b\\x32/.License.KeyContainer.VideoResolutionConstraint\\x1a\\xdb\\x01\\n\\x10OutputProtection\\x12\\x42\\n\\x04Hdcp\\x18\\x01 \\x01(\\x0e\\x32\\x34.ClientIdentification.ClientCapabilities.HdcpVersion\\x12>\\n\\tCgmsFlags\\x18\\x02 \\x01(\\x0e\\x32+.License.KeyContainer.OutputProtection.CGMS\\\"C\\n\\x04\\x43GMS\\x12\\r\\n\\tCOPY_FREE\\x10\\x00\\x12\\r\\n\\tCOPY_ONCE\\x10\\x02\\x12\\x0e\\n\\nCOPY_NEVER\\x10\\x03\\x12\\r\\n\\tCGMS_NONE\\x10*\\x1a\\x31\\n\\nKeyControl\\x12\\x17\\n\\x0fKeyControlBlock\\x18\\x01 \\x01(\\x0c\\x12\\n\\n\\x02Iv\\x18\\x02 \\x01(\\x0c\\x1a|\\n\\x1dOperatorSessionKeyPermissions\\x12\\x14\\n\\x0c\\x41llowEncrypt\\x18\\x01 \\x01(\\r\\x12\\x14\\n\\x0c\\x41llowDecrypt\\x18\\x02 \\x01(\\r\\x12\\x11\\n\\tAllowSign\\x18\\x03 \\x01(\\r\\x12\\x1c\\n\\x14\\x41llowSignatureVerify\\x18\\x04 \\x01(\\r\\x1a\\x99\\x01\\n\\x19VideoResolutionConstraint\\x12\\x1b\\n\\x13MinResolutionPixels\\x18\\x01 \\x01(\\r\\x12\\x1b\\n\\x13MaxResolutionPixels\\x18\\x02 \\x01(\\r\\x12\\x42\\n\\x12RequiredProtection\\x18\\x03 \\x01(\\x0b\\x32&.License.KeyContainer.OutputProtection\\\"Z\\n\\x07KeyType\\x12\\x0e\\n\\n_NOKEYTYPE\\x10\\x00\\x12\\x0b\\n\\x07SIGNING\\x10\\x01\\x12\\x0b\\n\\x07\\x43ONTENT\\x10\\x02\\x12\\x0f\\n\\x0bKEY_CONTROL\\x10\\x03\\x12\\x14\\n\\x10OPERATOR_SESSION\\x10\\x04\\\"\\x8b\\x01\\n\\rSecurityLevel\\x12\\x0f\\n\\x0b_NOSECLEVEL\\x10\\x00\\x12\\x14\\n\\x10SW_SECURE_CRYPTO\\x10\\x01\\x12\\x14\\n\\x10SW_SECURE_DECODE\\x10\\x02\\x12\\x14\\n\\x10HW_SECURE_CRYPTO\\x10\\x03\\x12\\x14\\n\\x10HW_SECURE_DECODE\\x10\\x04\\x12\\x11\\n\\rHW_SECURE_ALL\\x10\\x05\\\"\\xac\\x01\\n\\x0cLicenseError\\x12&\\n\\tErrorCode\\x18\\x01 \\x01(\\x0e\\x32\\x13.LicenseError.Error\\\"t\\n\\x05\\x45rror\\x12\\x12\\n\\x0e\\x44UMMY_NO_ERROR\\x10\\x00\\x12\\x1e\\n\\x1aINVALID_DEVICE_CERTIFICATE\\x10\\x01\\x12\\x1e\\n\\x1aREVOKED_DEVICE_CERTIFICATE\\x10\\x02\\x12\\x17\\n\\x13SERVICE_UNAVAILABLE\\x10\\x03\\\"\\xc0\\x07\\n\\x0eLicenseRequest\\x12\\'\\n\\x08\\x43lientId\\x18\\x01 \\x01(\\x0b\\x32\\x15.ClientIdentification\\x12\\x38\\n\\tContentId\\x18\\x02 \\x01(\\x0b\\x32%.LicenseRequest.ContentIdentification\\x12)\\n\\x04Type\\x18\\x03 \\x01(\\x0e\\x32\\x1b.LicenseRequest.RequestType\\x12\\x13\\n\\x0bRequestTime\\x18\\x04 \\x01(\\r\\x12!\\n\\x19KeyControlNonceDeprecated\\x18\\x05 \\x01(\\x0c\\x12)\\n\\x0fProtocolVersion\\x18\\x06 \\x01(\\x0e\\x32\\x10.ProtocolVersion\\x12\\x17\\n\\x0fKeyControlNonce\\x18\\x07 \\x01(\\r\\x12\\x39\\n\\x11\\x45ncryptedClientId\\x18\\x08 \\x01(\\x0b\\x32\\x1e.EncryptedClientIdentification\\x1a\\xa2\\x04\\n\\x15\\x43ontentIdentification\\x12:\\n\\x06\\x43\\x65ncId\\x18\\x01 \\x01(\\x0b\\x32*.LicenseRequest.ContentIdentification.CENC\\x12:\\n\\x06WebmId\\x18\\x02 \\x01(\\x0b\\x32*.LicenseRequest.ContentIdentification.WebM\\x12\\x46\\n\\x07License\\x18\\x03 \\x01(\\x0b\\x32\\x35.LicenseRequest.ContentIdentification.ExistingLicense\\x1a_\\n\\x04\\x43\\x45NC\\x12!\\n\\x04Pssh\\x18\\x01 \\x01(\\x0b\\x32\\x13.WidevineCencHeader\\x12!\\n\\x0bLicenseType\\x18\\x02 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x11\\n\\tRequestId\\x18\\x03 \\x01(\\x0c\\x1aL\\n\\x04WebM\\x12\\x0e\\n\\x06Header\\x18\\x01 \\x01(\\x0c\\x12!\\n\\x0bLicenseType\\x18\\x02 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x11\\n\\tRequestId\\x18\\x03 \\x01(\\x0c\\x1a\\x99\\x01\\n\\x0f\\x45xistingLicense\\x12)\\n\\tLicenseId\\x18\\x01 \\x01(\\x0b\\x32\\x16.LicenseIdentification\\x12\\x1b\\n\\x13SecondsSinceStarted\\x18\\x02 \\x01(\\r\\x12\\x1e\\n\\x16SecondsSinceLastPlayed\\x18\\x03 \\x01(\\r\\x12\\x1e\\n\\x16SessionUsageTableEntry\\x18\\x04 \\x01(\\x0c\\\"D\\n\\x0bRequestType\\x12\\x12\\n\\x0e\\x44UMMY_REQ_TYPE\\x10\\x00\\x12\\x07\\n\\x03NEW\\x10\\x01\\x12\\x0b\\n\\x07RENEWAL\\x10\\x02\\x12\\x0b\\n\\x07RELEASE\\x10\\x03\\\"\\xa6\\x02\\n\\x15ProvisionedDeviceInfo\\x12\\x10\\n\\x08SystemId\\x18\\x01 \\x01(\\r\\x12\\x0b\\n\\x03Soc\\x18\\x02 \\x01(\\t\\x12\\x14\\n\\x0cManufacturer\\x18\\x03 \\x01(\\t\\x12\\r\\n\\x05Model\\x18\\x04 \\x01(\\t\\x12\\x12\\n\\nDeviceType\\x18\\x05 \\x01(\\t\\x12\\x11\\n\\tModelYear\\x18\\x06 \\x01(\\r\\x12=\\n\\rSecurityLevel\\x18\\x07 \\x01(\\x0e\\x32&.ProvisionedDeviceInfo.WvSecurityLevel\\x12\\x12\\n\\nTestDevice\\x18\\x08 \\x01(\\r\\\"O\\n\\x0fWvSecurityLevel\\x12\\x15\\n\\x11LEVEL_UNSPECIFIED\\x10\\x00\\x12\\x0b\\n\\x07LEVEL_1\\x10\\x01\\x12\\x0b\\n\\x07LEVEL_2\\x10\\x02\\x12\\x0b\\n\\x07LEVEL_3\\x10\\x03\\\"\\x15\\n\\x13ProvisioningOptions\\\"\\x15\\n\\x13ProvisioningRequest\\\"\\x16\\n\\x14ProvisioningResponse\\\"i\\n\\x11RemoteAttestation\\x12\\x33\\n\\x0b\\x43\\x65rtificate\\x18\\x01 \\x01(\\x0b\\x32\\x1e.EncryptedClientIdentification\\x12\\x0c\\n\\x04Salt\\x18\\x02 \\x01(\\t\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\t\\\"\\r\\n\\x0bSessionInit\\\"\\x0e\\n\\x0cSessionState\\\"\\x1d\\n\\x1bSignedCertificateStatusList\\\"\\x86\\x01\\n\\x17SignedDeviceCertificate\\x12.\\n\\x12_DeviceCertificate\\x18\\x01 \\x01(\\x0b\\x32\\x12.DeviceCertificate\\x12\\x11\\n\\tSignature\\x18\\x02 \\x01(\\x0c\\x12(\\n\\x06Signer\\x18\\x03 \\x01(\\x0b\\x32\\x18.SignedDeviceCertificate\\\"\\x1b\\n\\x19SignedProvisioningMessage\\\"\\xb0\\x02\\n\\rSignedMessage\\x12(\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32\\x1a.SignedMessage.MessageType\\x12\\x0b\\n\\x03Msg\\x18\\x02 \\x01(\\x0c\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"\\x91\\x01\\n\\x0bMessageType\\x12\\x12\\n\\x0e\\x44UMMY_MSG_TYPE\\x10\\x00\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xc5\\x02\\n\\x12WidevineCencHeader\\x12\\x30\\n\\talgorithm\\x18\\x01 \\x01(\\x0e\\x32\\x1d.WidevineCencHeader.Algorithm\\x12\\x0e\\n\\x06key_id\\x18\\x02 \\x03(\\x0c\\x12\\x10\\n\\x08provider\\x18\\x03 \\x01(\\t\\x12\\x12\\n\\ncontent_id\\x18\\x04 \\x01(\\x0c\\x12\\x1d\\n\\x15track_type_deprecated\\x18\\x05 \\x01(\\t\\x12\\x0e\\n\\x06policy\\x18\\x06 \\x01(\\t\\x12\\x1b\\n\\x13\\x63rypto_period_index\\x18\\x07 \\x01(\\r\\x12\\x17\\n\\x0fgrouped_license\\x18\\x08 \\x01(\\x0c\\x12\\x19\\n\\x11protection_scheme\\x18\\t \\x01(\\r\\x12\\x1d\\n\\x15\\x63rypto_period_seconds\\x18\\n \\x01(\\r\\\"(\\n\\tAlgorithm\\x12\\x0f\\n\\x0bUNENCRYPTED\\x10\\x00\\x12\\n\\n\\x06\\x41\\x45SCTR\\x10\\x01\\\"\\xcf\\x02\\n\\x14SignedLicenseRequest\\x12/\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32!.SignedLicenseRequest.MessageType\\x12\\x1c\\n\\x03Msg\\x18\\x02 \\x01(\\x0b\\x32\\x0f.LicenseRequest\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"\\x91\\x01\\n\\x0bMessageType\\x12\\x12\\n\\x0e\\x44UMMY_MSG_TYPE\\x10\\x00\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xba\\x02\\n\\rSignedLicense\\x12(\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32\\x1a.SignedLicense.MessageType\\x12\\x15\\n\\x03Msg\\x18\\x02 \\x01(\\x0b\\x32\\x08.License\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"\\x91\\x01\\n\\x0bMessageType\\x12\\x12\\n\\x0e\\x44UMMY_MSG_TYPE\\x10\\x00\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05*$\\n\\x0bLicenseType\\x12\\x08\\n\\x04ZERO\\x10\\x00\\x12\\x0b\\n\\x07\\x44\\x45\\x46\\x41ULT\\x10\\x01*)\\n\\x0fProtocolVersion\\x12\\t\\n\\x05\\x44UMMY\\x10\\x00\\x12\\x0b\\n\\x07\\x43URRENT\\x10\\x15\\x62\\x06proto3')\n)\n_LICENSETYPE = _descriptor.EnumDescriptor(\n  name='LicenseType',\n  full_name='LicenseType',",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR = _descriptor.FileDescriptor(\n  name='wv_proto3.proto',\n  package='',\n  syntax='proto3',\n  serialized_pb=_b('\\n\\x0fwv_proto3.proto\\\"\\xc5\\x05\\n\\x14\\x43lientIdentification\\x12-\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32\\x1f.ClientIdentification.TokenType\\x12\\'\\n\\x05Token\\x18\\x02 \\x01(\\x0b\\x32\\x18.SignedDeviceCertificate\\x12\\x33\\n\\nClientInfo\\x18\\x03 \\x03(\\x0b\\x32\\x1f.ClientIdentification.NameValue\\x12\\x1b\\n\\x13ProviderClientToken\\x18\\x04 \\x01(\\x0c\\x12\\x16\\n\\x0eLicenseCounter\\x18\\x05 \\x01(\\r\\x12\\x45\\n\\x13_ClientCapabilities\\x18\\x06 \\x01(\\x0b\\x32(.ClientIdentification.ClientCapabilities\\x1a(\\n\\tNameValue\\x12\\x0c\\n\\x04Name\\x18\\x01 \\x01(\\t\\x12\\r\\n\\x05Value\\x18\\x02 \\x01(\\t\\x1a\\xa4\\x02\\n\\x12\\x43lientCapabilities\\x12\\x13\\n\\x0b\\x43lientToken\\x18\\x01 \\x01(\\r\\x12\\x14\\n\\x0cSessionToken\\x18\\x02 \\x01(\\r\\x12\\\"\\n\\x1aVideoResolutionConstraints\\x18\\x03 \\x01(\\r\\x12L\\n\\x0eMaxHdcpVersion\\x18\\x04 \\x01(\\x0e\\x32\\x34.ClientIdentification.ClientCapabilities.HdcpVersion\\x12\\x1b\\n\\x13OemCryptoApiVersion\\x18\\x05 \\x01(\\r\\\"T\\n\\x0bHdcpVersion\\x12\\r\\n\\tHDCP_NONE\\x10\\x00\\x12\\x0b\\n\\x07HDCP_V1\\x10\\x01\\x12\\x0b\\n\\x07HDCP_V2\\x10\\x02\\x12\\r\\n\\tHDCP_V2_1\\x10\\x03\\x12\\r\\n\\tHDCP_V2_2\\x10\\x04\\\"S\\n\\tTokenType\\x12\\n\\n\\x06KEYBOX\\x10\\x00\\x12\\x16\\n\\x12\\x44\\x45VICE_CERTIFICATE\\x10\\x01\\x12\\\"\\n\\x1eREMOTE_ATTESTATION_CERTIFICATE\\x10\\x02\\\"\\x9b\\x02\\n\\x11\\x44\\x65viceCertificate\\x12\\x30\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32\\\".DeviceCertificate.CertificateType\\x12\\x14\\n\\x0cSerialNumber\\x18\\x02 \\x01(\\x0c\\x12\\x1b\\n\\x13\\x43reationTimeSeconds\\x18\\x03 \\x01(\\r\\x12\\x11\\n\\tPublicKey\\x18\\x04 \\x01(\\x0c\\x12\\x10\\n\\x08SystemId\\x18\\x05 \\x01(\\r\\x12\\x1c\\n\\x14TestDeviceDeprecated\\x18\\x06 \\x01(\\r\\x12\\x11\\n\\tServiceId\\x18\\x07 \\x01(\\x0c\\\"K\\n\\x0f\\x43\\x65rtificateType\\x12\\x08\\n\\x04ROOT\\x10\\x00\\x12\\x10\\n\\x0cINTERMEDIATE\\x10\\x01\\x12\\x0f\\n\\x0bUSER_DEVICE\\x10\\x02\\x12\\x0b\\n\\x07SERVICE\\x10\\x03\\\"\\xc4\\x01\\n\\x17\\x44\\x65viceCertificateStatus\\x12\\x14\\n\\x0cSerialNumber\\x18\\x01 \\x01(\\x0c\\x12:\\n\\x06Status\\x18\\x02 \\x01(\\x0e\\x32*.DeviceCertificateStatus.CertificateStatus\\x12*\\n\\nDeviceInfo\\x18\\x04 \\x01(\\x0b\\x32\\x16.ProvisionedDeviceInfo\\\"+\\n\\x11\\x43\\x65rtificateStatus\\x12\\t\\n\\x05VALID\\x10\\x00\\x12\\x0b\\n\\x07REVOKED\\x10\\x01\\\"o\\n\\x1b\\x44\\x65viceCertificateStatusList\\x12\\x1b\\n\\x13\\x43reationTimeSeconds\\x18\\x01 \\x01(\\r\\x12\\x33\\n\\x11\\x43\\x65rtificateStatus\\x18\\x02 \\x03(\\x0b\\x32\\x18.DeviceCertificateStatus\\\"\\xaf\\x01\\n\\x1d\\x45ncryptedClientIdentification\\x12\\x11\\n\\tServiceId\\x18\\x01 \\x01(\\t\\x12&\\n\\x1eServiceCertificateSerialNumber\\x18\\x02 \\x01(\\x0c\\x12\\x19\\n\\x11\\x45ncryptedClientId\\x18\\x03 \\x01(\\x0c\\x12\\x1b\\n\\x13\\x45ncryptedClientIdIv\\x18\\x04 \\x01(\\x0c\\x12\\x1b\\n\\x13\\x45ncryptedPrivacyKey\\x18\\x05 \\x01(\\x0c\\\"\\x9c\\x01\\n\\x15LicenseIdentification\\x12\\x11\\n\\tRequestId\\x18\\x01 \\x01(\\x0c\\x12\\x11\\n\\tSessionId\\x18\\x02 \\x01(\\x0c\\x12\\x12\\n\\nPurchaseId\\x18\\x03 \\x01(\\x0c\\x12\\x1a\\n\\x04Type\\x18\\x04 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x0f\\n\\x07Version\\x18\\x05 \\x01(\\r\\x12\\x1c\\n\\x14ProviderSessionToken\\x18\\x06 \\x01(\\x0c\\\"\\xfa\\x0e\\n\\x07License\\x12\\\"\\n\\x02Id\\x18\\x01 \\x01(\\x0b\\x32\\x16.LicenseIdentification\\x12 \\n\\x07_Policy\\x18\\x02 \\x01(\\x0b\\x32\\x0f.License.Policy\\x12\\\"\\n\\x03Key\\x18\\x03 \\x03(\\x0b\\x32\\x15.License.KeyContainer\\x12\\x18\\n\\x10LicenseStartTime\\x18\\x04 \\x01(\\r\\x12!\\n\\x19RemoteAttestationVerified\\x18\\x05 \\x01(\\r\\x12\\x1b\\n\\x13ProviderClientToken\\x18\\x06 \\x01(\\x0c\\x12\\x18\\n\\x10ProtectionScheme\\x18\\x07 \\x01(\\r\\x12\\x1c\\n\\x14UnknownHdcpDataField\\x18\\x08 \\x01(\\x0c\\x1a\\xd4\\x02\\n\\x06Policy\\x12\\x0f\\n\\x07\\x43\\x61nPlay\\x18\\x01 \\x01(\\r\\x12\\x12\\n\\nCanPersist\\x18\\x02 \\x01(\\r\\x12\\x10\\n\\x08\\x43\\x61nRenew\\x18\\x03 \\x01(\\r\\x12\\x1d\\n\\x15RentalDurationSeconds\\x18\\x04 \\x01(\\r\\x12\\x1f\\n\\x17PlaybackDurationSeconds\\x18\\x05 \\x01(\\r\\x12\\x1e\\n\\x16LicenseDurationSeconds\\x18\\x06 \\x01(\\r\\x12&\\n\\x1eRenewalRecoveryDurationSeconds\\x18\\x07 \\x01(\\r\\x12\\x18\\n\\x10RenewalServerUrl\\x18\\x08 \\x01(\\t\\x12\\x1b\\n\\x13RenewalDelaySeconds\\x18\\t \\x01(\\r\\x12#\\n\\x1bRenewalRetryIntervalSeconds\\x18\\n \\x01(\\r\\x12\\x16\\n\\x0eRenewWithUsage\\x18\\x0b \\x01(\\r\\x12\\x17\\n\\x0fUnknownPolicy12\\x18\\x0c \\x01(\\r\\x1a\\x9b\\n\\n\\x0cKeyContainer\\x12\\n\\n\\x02Id\\x18\\x01 \\x01(\\x0c\\x12\\n\\n\\x02Iv\\x18\\x02 \\x01(\\x0c\\x12\\x0b\\n\\x03Key\\x18\\x03 \\x01(\\x0c\\x12+\\n\\x04Type\\x18\\x04 \\x01(\\x0e\\x32\\x1d.License.KeyContainer.KeyType\\x12\\x32\\n\\x05Level\\x18\\x05 \\x01(\\x0e\\x32#.License.KeyContainer.SecurityLevel\\x12\\x42\\n\\x12RequiredProtection\\x18\\x06 \\x01(\\x0b\\x32&.License.KeyContainer.OutputProtection\\x12\\x43\\n\\x13RequestedProtection\\x18\\x07 \\x01(\\x0b\\x32&.License.KeyContainer.OutputProtection\\x12\\x35\\n\\x0b_KeyControl\\x18\\x08 \\x01(\\x0b\\x32 .License.KeyContainer.KeyControl\\x12[\\n\\x1e_OperatorSessionKeyPermissions\\x18\\t \\x01(\\x0b\\x32\\x33.License.KeyContainer.OperatorSessionKeyPermissions\\x12S\\n\\x1aVideoResolutionConstraints\\x18\\n \\x03(\\x0b\\x32/.License.KeyContainer.VideoResolutionConstraint\\x1a\\xdb\\x01\\n\\x10OutputProtection\\x12\\x42\\n\\x04Hdcp\\x18\\x01 \\x01(\\x0e\\x32\\x34.ClientIdentification.ClientCapabilities.HdcpVersion\\x12>\\n\\tCgmsFlags\\x18\\x02 \\x01(\\x0e\\x32+.License.KeyContainer.OutputProtection.CGMS\\\"C\\n\\x04\\x43GMS\\x12\\r\\n\\tCOPY_FREE\\x10\\x00\\x12\\r\\n\\tCOPY_ONCE\\x10\\x02\\x12\\x0e\\n\\nCOPY_NEVER\\x10\\x03\\x12\\r\\n\\tCGMS_NONE\\x10*\\x1a\\x31\\n\\nKeyControl\\x12\\x17\\n\\x0fKeyControlBlock\\x18\\x01 \\x01(\\x0c\\x12\\n\\n\\x02Iv\\x18\\x02 \\x01(\\x0c\\x1a|\\n\\x1dOperatorSessionKeyPermissions\\x12\\x14\\n\\x0c\\x41llowEncrypt\\x18\\x01 \\x01(\\r\\x12\\x14\\n\\x0c\\x41llowDecrypt\\x18\\x02 \\x01(\\r\\x12\\x11\\n\\tAllowSign\\x18\\x03 \\x01(\\r\\x12\\x1c\\n\\x14\\x41llowSignatureVerify\\x18\\x04 \\x01(\\r\\x1a\\x99\\x01\\n\\x19VideoResolutionConstraint\\x12\\x1b\\n\\x13MinResolutionPixels\\x18\\x01 \\x01(\\r\\x12\\x1b\\n\\x13MaxResolutionPixels\\x18\\x02 \\x01(\\r\\x12\\x42\\n\\x12RequiredProtection\\x18\\x03 \\x01(\\x0b\\x32&.License.KeyContainer.OutputProtection\\\"Z\\n\\x07KeyType\\x12\\x0e\\n\\n_NOKEYTYPE\\x10\\x00\\x12\\x0b\\n\\x07SIGNING\\x10\\x01\\x12\\x0b\\n\\x07\\x43ONTENT\\x10\\x02\\x12\\x0f\\n\\x0bKEY_CONTROL\\x10\\x03\\x12\\x14\\n\\x10OPERATOR_SESSION\\x10\\x04\\\"\\x8b\\x01\\n\\rSecurityLevel\\x12\\x0f\\n\\x0b_NOSECLEVEL\\x10\\x00\\x12\\x14\\n\\x10SW_SECURE_CRYPTO\\x10\\x01\\x12\\x14\\n\\x10SW_SECURE_DECODE\\x10\\x02\\x12\\x14\\n\\x10HW_SECURE_CRYPTO\\x10\\x03\\x12\\x14\\n\\x10HW_SECURE_DECODE\\x10\\x04\\x12\\x11\\n\\rHW_SECURE_ALL\\x10\\x05\\\"\\xac\\x01\\n\\x0cLicenseError\\x12&\\n\\tErrorCode\\x18\\x01 \\x01(\\x0e\\x32\\x13.LicenseError.Error\\\"t\\n\\x05\\x45rror\\x12\\x12\\n\\x0e\\x44UMMY_NO_ERROR\\x10\\x00\\x12\\x1e\\n\\x1aINVALID_DEVICE_CERTIFICATE\\x10\\x01\\x12\\x1e\\n\\x1aREVOKED_DEVICE_CERTIFICATE\\x10\\x02\\x12\\x17\\n\\x13SERVICE_UNAVAILABLE\\x10\\x03\\\"\\xc0\\x07\\n\\x0eLicenseRequest\\x12\\'\\n\\x08\\x43lientId\\x18\\x01 \\x01(\\x0b\\x32\\x15.ClientIdentification\\x12\\x38\\n\\tContentId\\x18\\x02 \\x01(\\x0b\\x32%.LicenseRequest.ContentIdentification\\x12)\\n\\x04Type\\x18\\x03 \\x01(\\x0e\\x32\\x1b.LicenseRequest.RequestType\\x12\\x13\\n\\x0bRequestTime\\x18\\x04 \\x01(\\r\\x12!\\n\\x19KeyControlNonceDeprecated\\x18\\x05 \\x01(\\x0c\\x12)\\n\\x0fProtocolVersion\\x18\\x06 \\x01(\\x0e\\x32\\x10.ProtocolVersion\\x12\\x17\\n\\x0fKeyControlNonce\\x18\\x07 \\x01(\\r\\x12\\x39\\n\\x11\\x45ncryptedClientId\\x18\\x08 \\x01(\\x0b\\x32\\x1e.EncryptedClientIdentification\\x1a\\xa2\\x04\\n\\x15\\x43ontentIdentification\\x12:\\n\\x06\\x43\\x65ncId\\x18\\x01 \\x01(\\x0b\\x32*.LicenseRequest.ContentIdentification.CENC\\x12:\\n\\x06WebmId\\x18\\x02 \\x01(\\x0b\\x32*.LicenseRequest.ContentIdentification.WebM\\x12\\x46\\n\\x07License\\x18\\x03 \\x01(\\x0b\\x32\\x35.LicenseRequest.ContentIdentification.ExistingLicense\\x1a_\\n\\x04\\x43\\x45NC\\x12!\\n\\x04Pssh\\x18\\x01 \\x01(\\x0b\\x32\\x13.WidevineCencHeader\\x12!\\n\\x0bLicenseType\\x18\\x02 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x11\\n\\tRequestId\\x18\\x03 \\x01(\\x0c\\x1aL\\n\\x04WebM\\x12\\x0e\\n\\x06Header\\x18\\x01 \\x01(\\x0c\\x12!\\n\\x0bLicenseType\\x18\\x02 \\x01(\\x0e\\x32\\x0c.LicenseType\\x12\\x11\\n\\tRequestId\\x18\\x03 \\x01(\\x0c\\x1a\\x99\\x01\\n\\x0f\\x45xistingLicense\\x12)\\n\\tLicenseId\\x18\\x01 \\x01(\\x0b\\x32\\x16.LicenseIdentification\\x12\\x1b\\n\\x13SecondsSinceStarted\\x18\\x02 \\x01(\\r\\x12\\x1e\\n\\x16SecondsSinceLastPlayed\\x18\\x03 \\x01(\\r\\x12\\x1e\\n\\x16SessionUsageTableEntry\\x18\\x04 \\x01(\\x0c\\\"D\\n\\x0bRequestType\\x12\\x12\\n\\x0e\\x44UMMY_REQ_TYPE\\x10\\x00\\x12\\x07\\n\\x03NEW\\x10\\x01\\x12\\x0b\\n\\x07RENEWAL\\x10\\x02\\x12\\x0b\\n\\x07RELEASE\\x10\\x03\\\"\\xa6\\x02\\n\\x15ProvisionedDeviceInfo\\x12\\x10\\n\\x08SystemId\\x18\\x01 \\x01(\\r\\x12\\x0b\\n\\x03Soc\\x18\\x02 \\x01(\\t\\x12\\x14\\n\\x0cManufacturer\\x18\\x03 \\x01(\\t\\x12\\r\\n\\x05Model\\x18\\x04 \\x01(\\t\\x12\\x12\\n\\nDeviceType\\x18\\x05 \\x01(\\t\\x12\\x11\\n\\tModelYear\\x18\\x06 \\x01(\\r\\x12=\\n\\rSecurityLevel\\x18\\x07 \\x01(\\x0e\\x32&.ProvisionedDeviceInfo.WvSecurityLevel\\x12\\x12\\n\\nTestDevice\\x18\\x08 \\x01(\\r\\\"O\\n\\x0fWvSecurityLevel\\x12\\x15\\n\\x11LEVEL_UNSPECIFIED\\x10\\x00\\x12\\x0b\\n\\x07LEVEL_1\\x10\\x01\\x12\\x0b\\n\\x07LEVEL_2\\x10\\x02\\x12\\x0b\\n\\x07LEVEL_3\\x10\\x03\\\"\\x15\\n\\x13ProvisioningOptions\\\"\\x15\\n\\x13ProvisioningRequest\\\"\\x16\\n\\x14ProvisioningResponse\\\"i\\n\\x11RemoteAttestation\\x12\\x33\\n\\x0b\\x43\\x65rtificate\\x18\\x01 \\x01(\\x0b\\x32\\x1e.EncryptedClientIdentification\\x12\\x0c\\n\\x04Salt\\x18\\x02 \\x01(\\t\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\t\\\"\\r\\n\\x0bSessionInit\\\"\\x0e\\n\\x0cSessionState\\\"\\x1d\\n\\x1bSignedCertificateStatusList\\\"\\x86\\x01\\n\\x17SignedDeviceCertificate\\x12.\\n\\x12_DeviceCertificate\\x18\\x01 \\x01(\\x0b\\x32\\x12.DeviceCertificate\\x12\\x11\\n\\tSignature\\x18\\x02 \\x01(\\x0c\\x12(\\n\\x06Signer\\x18\\x03 \\x01(\\x0b\\x32\\x18.SignedDeviceCertificate\\\"\\x1b\\n\\x19SignedProvisioningMessage\\\"\\xb0\\x02\\n\\rSignedMessage\\x12(\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32\\x1a.SignedMessage.MessageType\\x12\\x0b\\n\\x03Msg\\x18\\x02 \\x01(\\x0c\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"\\x91\\x01\\n\\x0bMessageType\\x12\\x12\\n\\x0e\\x44UMMY_MSG_TYPE\\x10\\x00\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xc5\\x02\\n\\x12WidevineCencHeader\\x12\\x30\\n\\talgorithm\\x18\\x01 \\x01(\\x0e\\x32\\x1d.WidevineCencHeader.Algorithm\\x12\\x0e\\n\\x06key_id\\x18\\x02 \\x03(\\x0c\\x12\\x10\\n\\x08provider\\x18\\x03 \\x01(\\t\\x12\\x12\\n\\ncontent_id\\x18\\x04 \\x01(\\x0c\\x12\\x1d\\n\\x15track_type_deprecated\\x18\\x05 \\x01(\\t\\x12\\x0e\\n\\x06policy\\x18\\x06 \\x01(\\t\\x12\\x1b\\n\\x13\\x63rypto_period_index\\x18\\x07 \\x01(\\r\\x12\\x17\\n\\x0fgrouped_license\\x18\\x08 \\x01(\\x0c\\x12\\x19\\n\\x11protection_scheme\\x18\\t \\x01(\\r\\x12\\x1d\\n\\x15\\x63rypto_period_seconds\\x18\\n \\x01(\\r\\\"(\\n\\tAlgorithm\\x12\\x0f\\n\\x0bUNENCRYPTED\\x10\\x00\\x12\\n\\n\\x06\\x41\\x45SCTR\\x10\\x01\\\"\\xcf\\x02\\n\\x14SignedLicenseRequest\\x12/\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32!.SignedLicenseRequest.MessageType\\x12\\x1c\\n\\x03Msg\\x18\\x02 \\x01(\\x0b\\x32\\x0f.LicenseRequest\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"\\x91\\x01\\n\\x0bMessageType\\x12\\x12\\n\\x0e\\x44UMMY_MSG_TYPE\\x10\\x00\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05\\\"\\xba\\x02\\n\\rSignedLicense\\x12(\\n\\x04Type\\x18\\x01 \\x01(\\x0e\\x32\\x1a.SignedLicense.MessageType\\x12\\x15\\n\\x03Msg\\x18\\x02 \\x01(\\x0b\\x32\\x08.License\\x12\\x11\\n\\tSignature\\x18\\x03 \\x01(\\x0c\\x12\\x12\\n\\nSessionKey\\x18\\x04 \\x01(\\x0c\\x12-\\n\\x11RemoteAttestation\\x18\\x05 \\x01(\\x0b\\x32\\x12.RemoteAttestation\\\"\\x91\\x01\\n\\x0bMessageType\\x12\\x12\\n\\x0e\\x44UMMY_MSG_TYPE\\x10\\x00\\x12\\x13\\n\\x0fLICENSE_REQUEST\\x10\\x01\\x12\\x0b\\n\\x07LICENSE\\x10\\x02\\x12\\x12\\n\\x0e\\x45RROR_RESPONSE\\x10\\x03\\x12\\x1f\\n\\x1bSERVICE_CERTIFICATE_REQUEST\\x10\\x04\\x12\\x17\\n\\x13SERVICE_CERTIFICATE\\x10\\x05*$\\n\\x0bLicenseType\\x12\\x08\\n\\x04ZERO\\x10\\x00\\x12\\x0b\\n\\x07\\x44\\x45\\x46\\x41ULT\\x10\\x01*)\\n\\x0fProtocolVersion\\x12\\t\\n\\x05\\x44UMMY\\x10\\x00\\x12\\x0b\\n\\x07\\x43URRENT\\x10\\x15\\x62\\x06proto3')\n)\n_LICENSETYPE = _descriptor.EnumDescriptor(\n  name='LicenseType',\n  full_name='LicenseType',\n  filename=None,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSETYPE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSETYPE = _descriptor.EnumDescriptor(\n  name='LicenseType',\n  full_name='LicenseType',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='ZERO', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "LicenseType",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "LicenseType = enum_type_wrapper.EnumTypeWrapper(_LICENSETYPE)\n_PROTOCOLVERSION = _descriptor.EnumDescriptor(\n  name='ProtocolVersion',\n  full_name='ProtocolVersion',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='DUMMY', index=0, number=0,\n      options=None,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_PROTOCOLVERSION",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_PROTOCOLVERSION = _descriptor.EnumDescriptor(\n  name='ProtocolVersion',\n  full_name='ProtocolVersion',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='DUMMY', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "ProtocolVersion",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "ProtocolVersion = enum_type_wrapper.EnumTypeWrapper(_PROTOCOLVERSION)\nZERO = 0\nDEFAULT = 1\nDUMMY = 0\nCURRENT = 21\n_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION = _descriptor.EnumDescriptor(\n  name='HdcpVersion',\n  full_name='ClientIdentification.ClientCapabilities.HdcpVersion',\n  filename=None,\n  file=DESCRIPTOR,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "ZERO",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "ZERO = 0\nDEFAULT = 1\nDUMMY = 0\nCURRENT = 21\n_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION = _descriptor.EnumDescriptor(\n  name='HdcpVersion',\n  full_name='ClientIdentification.ClientCapabilities.HdcpVersion',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DEFAULT",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DEFAULT = 1\nDUMMY = 0\nCURRENT = 21\n_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION = _descriptor.EnumDescriptor(\n  name='HdcpVersion',\n  full_name='ClientIdentification.ClientCapabilities.HdcpVersion',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DUMMY",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DUMMY = 0\nCURRENT = 21\n_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION = _descriptor.EnumDescriptor(\n  name='HdcpVersion',\n  full_name='ClientIdentification.ClientCapabilities.HdcpVersion',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='HDCP_NONE', index=0, number=0,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "CURRENT",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "CURRENT = 21\n_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION = _descriptor.EnumDescriptor(\n  name='HdcpVersion',\n  full_name='ClientIdentification.ClientCapabilities.HdcpVersion',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='HDCP_NONE', index=0, number=0,\n      options=None,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION = _descriptor.EnumDescriptor(\n  name='HdcpVersion',\n  full_name='ClientIdentification.ClientCapabilities.HdcpVersion',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='HDCP_NONE', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION_TOKENTYPE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION_TOKENTYPE = _descriptor.EnumDescriptor(\n  name='TokenType',\n  full_name='ClientIdentification.TokenType',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='KEYBOX', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_DEVICECERTIFICATE_CERTIFICATETYPE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_DEVICECERTIFICATE_CERTIFICATETYPE = _descriptor.EnumDescriptor(\n  name='CertificateType',\n  full_name='DeviceCertificate.CertificateType',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='ROOT', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS = _descriptor.EnumDescriptor(\n  name='CertificateStatus',\n  full_name='DeviceCertificateStatus.CertificateStatus',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='VALID', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS = _descriptor.EnumDescriptor(\n  name='CGMS',\n  full_name='License.KeyContainer.OutputProtection.CGMS',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='COPY_FREE', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_KEYTYPE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_KEYTYPE = _descriptor.EnumDescriptor(\n  name='KeyType',\n  full_name='License.KeyContainer.KeyType',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='_NOKEYTYPE', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_SECURITYLEVEL",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_SECURITYLEVEL = _descriptor.EnumDescriptor(\n  name='SecurityLevel',\n  full_name='License.KeyContainer.SecurityLevel',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='_NOSECLEVEL', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEERROR_ERROR",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEERROR_ERROR = _descriptor.EnumDescriptor(\n  name='Error',\n  full_name='LicenseError.Error',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='DUMMY_NO_ERROR', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_REQUESTTYPE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_REQUESTTYPE = _descriptor.EnumDescriptor(\n  name='RequestType',\n  full_name='LicenseRequest.RequestType',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='DUMMY_REQ_TYPE', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL = _descriptor.EnumDescriptor(\n  name='WvSecurityLevel',\n  full_name='ProvisionedDeviceInfo.WvSecurityLevel',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='LEVEL_UNSPECIFIED', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDMESSAGE_MESSAGETYPE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDMESSAGE_MESSAGETYPE = _descriptor.EnumDescriptor(\n  name='MessageType',\n  full_name='SignedMessage.MessageType',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='DUMMY_MSG_TYPE', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_WIDEVINECENCHEADER_ALGORITHM",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_WIDEVINECENCHEADER_ALGORITHM = _descriptor.EnumDescriptor(\n  name='Algorithm',\n  full_name='WidevineCencHeader.Algorithm',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='UNENCRYPTED', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDLICENSEREQUEST_MESSAGETYPE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDLICENSEREQUEST_MESSAGETYPE = _descriptor.EnumDescriptor(\n  name='MessageType',\n  full_name='SignedLicenseRequest.MessageType',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='DUMMY_MSG_TYPE', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDLICENSE_MESSAGETYPE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDLICENSE_MESSAGETYPE = _descriptor.EnumDescriptor(\n  name='MessageType',\n  full_name='SignedLicense.MessageType',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='DUMMY_MSG_TYPE', index=0, number=0,\n      options=None,\n      type=None),",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION_NAMEVALUE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION_NAMEVALUE = _descriptor.Descriptor(\n  name='NameValue',\n  full_name='ClientIdentification.NameValue',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='Name', full_name='ClientIdentification.NameValue.Name', index=0,\n      number=1, type=9, cpp_type=9, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION_CLIENTCAPABILITIES",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION_CLIENTCAPABILITIES = _descriptor.Descriptor(\n  name='ClientCapabilities',\n  full_name='ClientIdentification.ClientCapabilities',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='ClientToken', full_name='ClientIdentification.ClientCapabilities.ClientToken', index=0,\n      number=1, type=13, cpp_type=3, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION = _descriptor.Descriptor(\n  name='ClientIdentification',\n  full_name='ClientIdentification',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='Type', full_name='ClientIdentification.Type', index=0,\n      number=1, type=14, cpp_type=8, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_DEVICECERTIFICATE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_DEVICECERTIFICATE = _descriptor.Descriptor(\n  name='DeviceCertificate',\n  full_name='DeviceCertificate',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='Type', full_name='DeviceCertificate.Type', index=0,\n      number=1, type=14, cpp_type=8, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_DEVICECERTIFICATESTATUS",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_DEVICECERTIFICATESTATUS = _descriptor.Descriptor(\n  name='DeviceCertificateStatus',\n  full_name='DeviceCertificateStatus',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='SerialNumber', full_name='DeviceCertificateStatus.SerialNumber', index=0,\n      number=1, type=12, cpp_type=9, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_DEVICECERTIFICATESTATUSLIST",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_DEVICECERTIFICATESTATUSLIST = _descriptor.Descriptor(\n  name='DeviceCertificateStatusList',\n  full_name='DeviceCertificateStatusList',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='CreationTimeSeconds', full_name='DeviceCertificateStatusList.CreationTimeSeconds', index=0,\n      number=1, type=13, cpp_type=3, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_ENCRYPTEDCLIENTIDENTIFICATION",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_ENCRYPTEDCLIENTIDENTIFICATION = _descriptor.Descriptor(\n  name='EncryptedClientIdentification',\n  full_name='EncryptedClientIdentification',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='ServiceId', full_name='EncryptedClientIdentification.ServiceId', index=0,\n      number=1, type=9, cpp_type=9, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEIDENTIFICATION",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEIDENTIFICATION = _descriptor.Descriptor(\n  name='LicenseIdentification',\n  full_name='LicenseIdentification',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='RequestId', full_name='LicenseIdentification.RequestId', index=0,\n      number=1, type=12, cpp_type=9, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_POLICY",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_POLICY = _descriptor.Descriptor(\n  name='Policy',\n  full_name='License.Policy',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='CanPlay', full_name='License.Policy.CanPlay', index=0,\n      number=1, type=13, cpp_type=3, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_OUTPUTPROTECTION",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_OUTPUTPROTECTION = _descriptor.Descriptor(\n  name='OutputProtection',\n  full_name='License.KeyContainer.OutputProtection',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='Hdcp', full_name='License.KeyContainer.OutputProtection.Hdcp', index=0,\n      number=1, type=14, cpp_type=8, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_KEYCONTROL",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_KEYCONTROL = _descriptor.Descriptor(\n  name='KeyControl',\n  full_name='License.KeyContainer.KeyControl',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='KeyControlBlock', full_name='License.KeyContainer.KeyControl.KeyControlBlock', index=0,\n      number=1, type=12, cpp_type=9, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS = _descriptor.Descriptor(\n  name='OperatorSessionKeyPermissions',\n  full_name='License.KeyContainer.OperatorSessionKeyPermissions',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='AllowEncrypt', full_name='License.KeyContainer.OperatorSessionKeyPermissions.AllowEncrypt', index=0,\n      number=1, type=13, cpp_type=3, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT = _descriptor.Descriptor(\n  name='VideoResolutionConstraint',\n  full_name='License.KeyContainer.VideoResolutionConstraint',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='MinResolutionPixels', full_name='License.KeyContainer.VideoResolutionConstraint.MinResolutionPixels', index=0,\n      number=1, type=13, cpp_type=3, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER = _descriptor.Descriptor(\n  name='KeyContainer',\n  full_name='License.KeyContainer',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='Id', full_name='License.KeyContainer.Id', index=0,\n      number=1, type=12, cpp_type=9, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE = _descriptor.Descriptor(\n  name='License',\n  full_name='License',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='Id', full_name='License.Id', index=0,\n      number=1, type=11, cpp_type=10, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEERROR",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEERROR = _descriptor.Descriptor(\n  name='LicenseError',\n  full_name='LicenseError',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='ErrorCode', full_name='LicenseError.ErrorCode', index=0,\n      number=1, type=14, cpp_type=8, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC = _descriptor.Descriptor(\n  name='CENC',\n  full_name='LicenseRequest.ContentIdentification.CENC',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='Pssh', full_name='LicenseRequest.ContentIdentification.CENC.Pssh', index=0,\n      number=1, type=11, cpp_type=10, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM = _descriptor.Descriptor(\n  name='WebM',\n  full_name='LicenseRequest.ContentIdentification.WebM',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='Header', full_name='LicenseRequest.ContentIdentification.WebM.Header', index=0,\n      number=1, type=12, cpp_type=9, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE = _descriptor.Descriptor(\n  name='ExistingLicense',\n  full_name='LicenseRequest.ContentIdentification.ExistingLicense',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='LicenseId', full_name='LicenseRequest.ContentIdentification.ExistingLicense.LicenseId', index=0,\n      number=1, type=11, cpp_type=10, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION = _descriptor.Descriptor(\n  name='ContentIdentification',\n  full_name='LicenseRequest.ContentIdentification',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='CencId', full_name='LicenseRequest.ContentIdentification.CencId', index=0,\n      number=1, type=11, cpp_type=10, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST = _descriptor.Descriptor(\n  name='LicenseRequest',\n  full_name='LicenseRequest',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='ClientId', full_name='LicenseRequest.ClientId', index=0,\n      number=1, type=11, cpp_type=10, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_PROVISIONEDDEVICEINFO",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_PROVISIONEDDEVICEINFO = _descriptor.Descriptor(\n  name='ProvisionedDeviceInfo',\n  full_name='ProvisionedDeviceInfo',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='SystemId', full_name='ProvisionedDeviceInfo.SystemId', index=0,\n      number=1, type=13, cpp_type=3, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_PROVISIONINGOPTIONS",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_PROVISIONINGOPTIONS = _descriptor.Descriptor(\n  name='ProvisioningOptions',\n  full_name='ProvisioningOptions',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n  ],\n  extensions=[\n  ],",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_PROVISIONINGREQUEST",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_PROVISIONINGREQUEST = _descriptor.Descriptor(\n  name='ProvisioningRequest',\n  full_name='ProvisioningRequest',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n  ],\n  extensions=[\n  ],",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_PROVISIONINGRESPONSE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_PROVISIONINGRESPONSE = _descriptor.Descriptor(\n  name='ProvisioningResponse',\n  full_name='ProvisioningResponse',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n  ],\n  extensions=[\n  ],",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_REMOTEATTESTATION",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_REMOTEATTESTATION = _descriptor.Descriptor(\n  name='RemoteAttestation',\n  full_name='RemoteAttestation',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='Certificate', full_name='RemoteAttestation.Certificate', index=0,\n      number=1, type=11, cpp_type=10, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SESSIONINIT",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SESSIONINIT = _descriptor.Descriptor(\n  name='SessionInit',\n  full_name='SessionInit',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n  ],\n  extensions=[\n  ],",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SESSIONSTATE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SESSIONSTATE = _descriptor.Descriptor(\n  name='SessionState',\n  full_name='SessionState',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n  ],\n  extensions=[\n  ],",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDCERTIFICATESTATUSLIST",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDCERTIFICATESTATUSLIST = _descriptor.Descriptor(\n  name='SignedCertificateStatusList',\n  full_name='SignedCertificateStatusList',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n  ],\n  extensions=[\n  ],",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDDEVICECERTIFICATE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDDEVICECERTIFICATE = _descriptor.Descriptor(\n  name='SignedDeviceCertificate',\n  full_name='SignedDeviceCertificate',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='_DeviceCertificate', full_name='SignedDeviceCertificate._DeviceCertificate', index=0,\n      number=1, type=11, cpp_type=10, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDPROVISIONINGMESSAGE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDPROVISIONINGMESSAGE = _descriptor.Descriptor(\n  name='SignedProvisioningMessage',\n  full_name='SignedProvisioningMessage',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n  ],\n  extensions=[\n  ],",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDMESSAGE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDMESSAGE = _descriptor.Descriptor(\n  name='SignedMessage',\n  full_name='SignedMessage',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='Type', full_name='SignedMessage.Type', index=0,\n      number=1, type=14, cpp_type=8, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_WIDEVINECENCHEADER",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_WIDEVINECENCHEADER = _descriptor.Descriptor(\n  name='WidevineCencHeader',\n  full_name='WidevineCencHeader',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='algorithm', full_name='WidevineCencHeader.algorithm', index=0,\n      number=1, type=14, cpp_type=8, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDLICENSEREQUEST",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDLICENSEREQUEST = _descriptor.Descriptor(\n  name='SignedLicenseRequest',\n  full_name='SignedLicenseRequest',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='Type', full_name='SignedLicenseRequest.Type', index=0,\n      number=1, type=14, cpp_type=8, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDLICENSE",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDLICENSE = _descriptor.Descriptor(\n  name='SignedLicense',\n  full_name='SignedLicense',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name='Type', full_name='SignedLicense.Type', index=0,\n      number=1, type=14, cpp_type=8, label=1,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION_NAMEVALUE.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION_NAMEVALUE.containing_type = _CLIENTIDENTIFICATION\n_CLIENTIDENTIFICATION_CLIENTCAPABILITIES.fields_by_name['MaxHdcpVersion'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION\n_CLIENTIDENTIFICATION_CLIENTCAPABILITIES.containing_type = _CLIENTIDENTIFICATION\n_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION.containing_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES\n_CLIENTIDENTIFICATION.fields_by_name['Type'].enum_type = _CLIENTIDENTIFICATION_TOKENTYPE\n_CLIENTIDENTIFICATION.fields_by_name['Token'].message_type = _SIGNEDDEVICECERTIFICATE\n_CLIENTIDENTIFICATION.fields_by_name['ClientInfo'].message_type = _CLIENTIDENTIFICATION_NAMEVALUE\n_CLIENTIDENTIFICATION.fields_by_name['_ClientCapabilities'].message_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES\n_CLIENTIDENTIFICATION_TOKENTYPE.containing_type = _CLIENTIDENTIFICATION\n_DEVICECERTIFICATE.fields_by_name['Type'].enum_type = _DEVICECERTIFICATE_CERTIFICATETYPE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION_CLIENTCAPABILITIES.fields_by_name['MaxHdcpVersion'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION_CLIENTCAPABILITIES.fields_by_name['MaxHdcpVersion'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION\n_CLIENTIDENTIFICATION_CLIENTCAPABILITIES.containing_type = _CLIENTIDENTIFICATION\n_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION.containing_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES\n_CLIENTIDENTIFICATION.fields_by_name['Type'].enum_type = _CLIENTIDENTIFICATION_TOKENTYPE\n_CLIENTIDENTIFICATION.fields_by_name['Token'].message_type = _SIGNEDDEVICECERTIFICATE\n_CLIENTIDENTIFICATION.fields_by_name['ClientInfo'].message_type = _CLIENTIDENTIFICATION_NAMEVALUE\n_CLIENTIDENTIFICATION.fields_by_name['_ClientCapabilities'].message_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES\n_CLIENTIDENTIFICATION_TOKENTYPE.containing_type = _CLIENTIDENTIFICATION\n_DEVICECERTIFICATE.fields_by_name['Type'].enum_type = _DEVICECERTIFICATE_CERTIFICATETYPE\n_DEVICECERTIFICATE_CERTIFICATETYPE.containing_type = _DEVICECERTIFICATE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION_CLIENTCAPABILITIES.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION_CLIENTCAPABILITIES.containing_type = _CLIENTIDENTIFICATION\n_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION.containing_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES\n_CLIENTIDENTIFICATION.fields_by_name['Type'].enum_type = _CLIENTIDENTIFICATION_TOKENTYPE\n_CLIENTIDENTIFICATION.fields_by_name['Token'].message_type = _SIGNEDDEVICECERTIFICATE\n_CLIENTIDENTIFICATION.fields_by_name['ClientInfo'].message_type = _CLIENTIDENTIFICATION_NAMEVALUE\n_CLIENTIDENTIFICATION.fields_by_name['_ClientCapabilities'].message_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES\n_CLIENTIDENTIFICATION_TOKENTYPE.containing_type = _CLIENTIDENTIFICATION\n_DEVICECERTIFICATE.fields_by_name['Type'].enum_type = _DEVICECERTIFICATE_CERTIFICATETYPE\n_DEVICECERTIFICATE_CERTIFICATETYPE.containing_type = _DEVICECERTIFICATE\n_DEVICECERTIFICATESTATUS.fields_by_name['Status'].enum_type = _DEVICECERTIFICATESTATUS_CERTIFICATESTATUS",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION.containing_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES\n_CLIENTIDENTIFICATION.fields_by_name['Type'].enum_type = _CLIENTIDENTIFICATION_TOKENTYPE\n_CLIENTIDENTIFICATION.fields_by_name['Token'].message_type = _SIGNEDDEVICECERTIFICATE\n_CLIENTIDENTIFICATION.fields_by_name['ClientInfo'].message_type = _CLIENTIDENTIFICATION_NAMEVALUE\n_CLIENTIDENTIFICATION.fields_by_name['_ClientCapabilities'].message_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES\n_CLIENTIDENTIFICATION_TOKENTYPE.containing_type = _CLIENTIDENTIFICATION\n_DEVICECERTIFICATE.fields_by_name['Type'].enum_type = _DEVICECERTIFICATE_CERTIFICATETYPE\n_DEVICECERTIFICATE_CERTIFICATETYPE.containing_type = _DEVICECERTIFICATE\n_DEVICECERTIFICATESTATUS.fields_by_name['Status'].enum_type = _DEVICECERTIFICATESTATUS_CERTIFICATESTATUS\n_DEVICECERTIFICATESTATUS.fields_by_name['DeviceInfo'].message_type = _PROVISIONEDDEVICEINFO",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION.fields_by_name['Type'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION.fields_by_name['Type'].enum_type = _CLIENTIDENTIFICATION_TOKENTYPE\n_CLIENTIDENTIFICATION.fields_by_name['Token'].message_type = _SIGNEDDEVICECERTIFICATE\n_CLIENTIDENTIFICATION.fields_by_name['ClientInfo'].message_type = _CLIENTIDENTIFICATION_NAMEVALUE\n_CLIENTIDENTIFICATION.fields_by_name['_ClientCapabilities'].message_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES\n_CLIENTIDENTIFICATION_TOKENTYPE.containing_type = _CLIENTIDENTIFICATION\n_DEVICECERTIFICATE.fields_by_name['Type'].enum_type = _DEVICECERTIFICATE_CERTIFICATETYPE\n_DEVICECERTIFICATE_CERTIFICATETYPE.containing_type = _DEVICECERTIFICATE\n_DEVICECERTIFICATESTATUS.fields_by_name['Status'].enum_type = _DEVICECERTIFICATESTATUS_CERTIFICATESTATUS\n_DEVICECERTIFICATESTATUS.fields_by_name['DeviceInfo'].message_type = _PROVISIONEDDEVICEINFO\n_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS.containing_type = _DEVICECERTIFICATESTATUS",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION.fields_by_name['Token'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION.fields_by_name['Token'].message_type = _SIGNEDDEVICECERTIFICATE\n_CLIENTIDENTIFICATION.fields_by_name['ClientInfo'].message_type = _CLIENTIDENTIFICATION_NAMEVALUE\n_CLIENTIDENTIFICATION.fields_by_name['_ClientCapabilities'].message_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES\n_CLIENTIDENTIFICATION_TOKENTYPE.containing_type = _CLIENTIDENTIFICATION\n_DEVICECERTIFICATE.fields_by_name['Type'].enum_type = _DEVICECERTIFICATE_CERTIFICATETYPE\n_DEVICECERTIFICATE_CERTIFICATETYPE.containing_type = _DEVICECERTIFICATE\n_DEVICECERTIFICATESTATUS.fields_by_name['Status'].enum_type = _DEVICECERTIFICATESTATUS_CERTIFICATESTATUS\n_DEVICECERTIFICATESTATUS.fields_by_name['DeviceInfo'].message_type = _PROVISIONEDDEVICEINFO\n_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS.containing_type = _DEVICECERTIFICATESTATUS\n_DEVICECERTIFICATESTATUSLIST.fields_by_name['CertificateStatus'].message_type = _DEVICECERTIFICATESTATUS",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION.fields_by_name['ClientInfo'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION.fields_by_name['ClientInfo'].message_type = _CLIENTIDENTIFICATION_NAMEVALUE\n_CLIENTIDENTIFICATION.fields_by_name['_ClientCapabilities'].message_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES\n_CLIENTIDENTIFICATION_TOKENTYPE.containing_type = _CLIENTIDENTIFICATION\n_DEVICECERTIFICATE.fields_by_name['Type'].enum_type = _DEVICECERTIFICATE_CERTIFICATETYPE\n_DEVICECERTIFICATE_CERTIFICATETYPE.containing_type = _DEVICECERTIFICATE\n_DEVICECERTIFICATESTATUS.fields_by_name['Status'].enum_type = _DEVICECERTIFICATESTATUS_CERTIFICATESTATUS\n_DEVICECERTIFICATESTATUS.fields_by_name['DeviceInfo'].message_type = _PROVISIONEDDEVICEINFO\n_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS.containing_type = _DEVICECERTIFICATESTATUS\n_DEVICECERTIFICATESTATUSLIST.fields_by_name['CertificateStatus'].message_type = _DEVICECERTIFICATESTATUS\n_LICENSEIDENTIFICATION.fields_by_name['Type'].enum_type = _LICENSETYPE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION.fields_by_name['_ClientCapabilities'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION.fields_by_name['_ClientCapabilities'].message_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES\n_CLIENTIDENTIFICATION_TOKENTYPE.containing_type = _CLIENTIDENTIFICATION\n_DEVICECERTIFICATE.fields_by_name['Type'].enum_type = _DEVICECERTIFICATE_CERTIFICATETYPE\n_DEVICECERTIFICATE_CERTIFICATETYPE.containing_type = _DEVICECERTIFICATE\n_DEVICECERTIFICATESTATUS.fields_by_name['Status'].enum_type = _DEVICECERTIFICATESTATUS_CERTIFICATESTATUS\n_DEVICECERTIFICATESTATUS.fields_by_name['DeviceInfo'].message_type = _PROVISIONEDDEVICEINFO\n_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS.containing_type = _DEVICECERTIFICATESTATUS\n_DEVICECERTIFICATESTATUSLIST.fields_by_name['CertificateStatus'].message_type = _DEVICECERTIFICATESTATUS\n_LICENSEIDENTIFICATION.fields_by_name['Type'].enum_type = _LICENSETYPE\n_LICENSE_POLICY.containing_type = _LICENSE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_CLIENTIDENTIFICATION_TOKENTYPE.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_CLIENTIDENTIFICATION_TOKENTYPE.containing_type = _CLIENTIDENTIFICATION\n_DEVICECERTIFICATE.fields_by_name['Type'].enum_type = _DEVICECERTIFICATE_CERTIFICATETYPE\n_DEVICECERTIFICATE_CERTIFICATETYPE.containing_type = _DEVICECERTIFICATE\n_DEVICECERTIFICATESTATUS.fields_by_name['Status'].enum_type = _DEVICECERTIFICATESTATUS_CERTIFICATESTATUS\n_DEVICECERTIFICATESTATUS.fields_by_name['DeviceInfo'].message_type = _PROVISIONEDDEVICEINFO\n_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS.containing_type = _DEVICECERTIFICATESTATUS\n_DEVICECERTIFICATESTATUSLIST.fields_by_name['CertificateStatus'].message_type = _DEVICECERTIFICATESTATUS\n_LICENSEIDENTIFICATION.fields_by_name['Type'].enum_type = _LICENSETYPE\n_LICENSE_POLICY.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['Hdcp'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_DEVICECERTIFICATE.fields_by_name['Type'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_DEVICECERTIFICATE.fields_by_name['Type'].enum_type = _DEVICECERTIFICATE_CERTIFICATETYPE\n_DEVICECERTIFICATE_CERTIFICATETYPE.containing_type = _DEVICECERTIFICATE\n_DEVICECERTIFICATESTATUS.fields_by_name['Status'].enum_type = _DEVICECERTIFICATESTATUS_CERTIFICATESTATUS\n_DEVICECERTIFICATESTATUS.fields_by_name['DeviceInfo'].message_type = _PROVISIONEDDEVICEINFO\n_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS.containing_type = _DEVICECERTIFICATESTATUS\n_DEVICECERTIFICATESTATUSLIST.fields_by_name['CertificateStatus'].message_type = _DEVICECERTIFICATESTATUS\n_LICENSEIDENTIFICATION.fields_by_name['Type'].enum_type = _LICENSETYPE\n_LICENSE_POLICY.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['Hdcp'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['CgmsFlags'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_DEVICECERTIFICATE_CERTIFICATETYPE.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_DEVICECERTIFICATE_CERTIFICATETYPE.containing_type = _DEVICECERTIFICATE\n_DEVICECERTIFICATESTATUS.fields_by_name['Status'].enum_type = _DEVICECERTIFICATESTATUS_CERTIFICATESTATUS\n_DEVICECERTIFICATESTATUS.fields_by_name['DeviceInfo'].message_type = _PROVISIONEDDEVICEINFO\n_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS.containing_type = _DEVICECERTIFICATESTATUS\n_DEVICECERTIFICATESTATUSLIST.fields_by_name['CertificateStatus'].message_type = _DEVICECERTIFICATESTATUS\n_LICENSEIDENTIFICATION.fields_by_name['Type'].enum_type = _LICENSETYPE\n_LICENSE_POLICY.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['Hdcp'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['CgmsFlags'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.containing_type = _LICENSE_KEYCONTAINER",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_DEVICECERTIFICATESTATUS.fields_by_name['Status'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_DEVICECERTIFICATESTATUS.fields_by_name['Status'].enum_type = _DEVICECERTIFICATESTATUS_CERTIFICATESTATUS\n_DEVICECERTIFICATESTATUS.fields_by_name['DeviceInfo'].message_type = _PROVISIONEDDEVICEINFO\n_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS.containing_type = _DEVICECERTIFICATESTATUS\n_DEVICECERTIFICATESTATUSLIST.fields_by_name['CertificateStatus'].message_type = _DEVICECERTIFICATESTATUS\n_LICENSEIDENTIFICATION.fields_by_name['Type'].enum_type = _LICENSETYPE\n_LICENSE_POLICY.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['Hdcp'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['CgmsFlags'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_DEVICECERTIFICATESTATUS.fields_by_name['DeviceInfo'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_DEVICECERTIFICATESTATUS.fields_by_name['DeviceInfo'].message_type = _PROVISIONEDDEVICEINFO\n_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS.containing_type = _DEVICECERTIFICATESTATUS\n_DEVICECERTIFICATESTATUSLIST.fields_by_name['CertificateStatus'].message_type = _DEVICECERTIFICATESTATUS\n_LICENSEIDENTIFICATION.fields_by_name['Type'].enum_type = _LICENSETYPE\n_LICENSE_POLICY.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['Hdcp'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['CgmsFlags'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_KEYCONTROL.containing_type = _LICENSE_KEYCONTAINER",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_DEVICECERTIFICATESTATUS_CERTIFICATESTATUS.containing_type = _DEVICECERTIFICATESTATUS\n_DEVICECERTIFICATESTATUSLIST.fields_by_name['CertificateStatus'].message_type = _DEVICECERTIFICATESTATUS\n_LICENSEIDENTIFICATION.fields_by_name['Type'].enum_type = _LICENSETYPE\n_LICENSE_POLICY.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['Hdcp'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['CgmsFlags'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_KEYCONTROL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS.containing_type = _LICENSE_KEYCONTAINER",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_DEVICECERTIFICATESTATUSLIST.fields_by_name['CertificateStatus'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_DEVICECERTIFICATESTATUSLIST.fields_by_name['CertificateStatus'].message_type = _DEVICECERTIFICATESTATUS\n_LICENSEIDENTIFICATION.fields_by_name['Type'].enum_type = _LICENSETYPE\n_LICENSE_POLICY.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['Hdcp'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['CgmsFlags'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_KEYCONTROL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEIDENTIFICATION.fields_by_name['Type'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEIDENTIFICATION.fields_by_name['Type'].enum_type = _LICENSETYPE\n_LICENSE_POLICY.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['Hdcp'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['CgmsFlags'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_KEYCONTROL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.containing_type = _LICENSE_KEYCONTAINER",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_POLICY.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_POLICY.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['Hdcp'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['CgmsFlags'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_KEYCONTROL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER.fields_by_name['Type'].enum_type = _LICENSE_KEYCONTAINER_KEYTYPE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['Hdcp'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['Hdcp'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['CgmsFlags'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_KEYCONTROL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER.fields_by_name['Type'].enum_type = _LICENSE_KEYCONTAINER_KEYTYPE\n_LICENSE_KEYCONTAINER.fields_by_name['Level'].enum_type = _LICENSE_KEYCONTAINER_SECURITYLEVEL",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['CgmsFlags'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['CgmsFlags'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_KEYCONTROL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER.fields_by_name['Type'].enum_type = _LICENSE_KEYCONTAINER_KEYTYPE\n_LICENSE_KEYCONTAINER.fields_by_name['Level'].enum_type = _LICENSE_KEYCONTAINER_SECURITYLEVEL\n_LICENSE_KEYCONTAINER.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_KEYCONTROL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER.fields_by_name['Type'].enum_type = _LICENSE_KEYCONTAINER_KEYTYPE\n_LICENSE_KEYCONTAINER.fields_by_name['Level'].enum_type = _LICENSE_KEYCONTAINER_SECURITYLEVEL\n_LICENSE_KEYCONTAINER.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['RequestedProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_KEYCONTROL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER.fields_by_name['Type'].enum_type = _LICENSE_KEYCONTAINER_KEYTYPE\n_LICENSE_KEYCONTAINER.fields_by_name['Level'].enum_type = _LICENSE_KEYCONTAINER_SECURITYLEVEL\n_LICENSE_KEYCONTAINER.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['RequestedProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['_KeyControl'].message_type = _LICENSE_KEYCONTAINER_KEYCONTROL",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_KEYCONTROL.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_KEYCONTROL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER.fields_by_name['Type'].enum_type = _LICENSE_KEYCONTAINER_KEYTYPE\n_LICENSE_KEYCONTAINER.fields_by_name['Level'].enum_type = _LICENSE_KEYCONTAINER_SECURITYLEVEL\n_LICENSE_KEYCONTAINER.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['RequestedProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['_KeyControl'].message_type = _LICENSE_KEYCONTAINER_KEYCONTROL\n_LICENSE_KEYCONTAINER.fields_by_name['_OperatorSessionKeyPermissions'].message_type = _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER.fields_by_name['Type'].enum_type = _LICENSE_KEYCONTAINER_KEYTYPE\n_LICENSE_KEYCONTAINER.fields_by_name['Level'].enum_type = _LICENSE_KEYCONTAINER_SECURITYLEVEL\n_LICENSE_KEYCONTAINER.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['RequestedProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['_KeyControl'].message_type = _LICENSE_KEYCONTAINER_KEYCONTROL\n_LICENSE_KEYCONTAINER.fields_by_name['_OperatorSessionKeyPermissions'].message_type = _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS\n_LICENSE_KEYCONTAINER.fields_by_name['VideoResolutionConstraints'].message_type = _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.fields_by_name['RequiredProtection'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER.fields_by_name['Type'].enum_type = _LICENSE_KEYCONTAINER_KEYTYPE\n_LICENSE_KEYCONTAINER.fields_by_name['Level'].enum_type = _LICENSE_KEYCONTAINER_SECURITYLEVEL\n_LICENSE_KEYCONTAINER.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['RequestedProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['_KeyControl'].message_type = _LICENSE_KEYCONTAINER_KEYCONTROL\n_LICENSE_KEYCONTAINER.fields_by_name['_OperatorSessionKeyPermissions'].message_type = _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS\n_LICENSE_KEYCONTAINER.fields_by_name['VideoResolutionConstraints'].message_type = _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT\n_LICENSE_KEYCONTAINER.containing_type = _LICENSE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER.fields_by_name['Type'].enum_type = _LICENSE_KEYCONTAINER_KEYTYPE\n_LICENSE_KEYCONTAINER.fields_by_name['Level'].enum_type = _LICENSE_KEYCONTAINER_SECURITYLEVEL\n_LICENSE_KEYCONTAINER.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['RequestedProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['_KeyControl'].message_type = _LICENSE_KEYCONTAINER_KEYCONTROL\n_LICENSE_KEYCONTAINER.fields_by_name['_OperatorSessionKeyPermissions'].message_type = _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS\n_LICENSE_KEYCONTAINER.fields_by_name['VideoResolutionConstraints'].message_type = _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT\n_LICENSE_KEYCONTAINER.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_KEYTYPE.containing_type = _LICENSE_KEYCONTAINER",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER.fields_by_name['Type'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER.fields_by_name['Type'].enum_type = _LICENSE_KEYCONTAINER_KEYTYPE\n_LICENSE_KEYCONTAINER.fields_by_name['Level'].enum_type = _LICENSE_KEYCONTAINER_SECURITYLEVEL\n_LICENSE_KEYCONTAINER.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['RequestedProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['_KeyControl'].message_type = _LICENSE_KEYCONTAINER_KEYCONTROL\n_LICENSE_KEYCONTAINER.fields_by_name['_OperatorSessionKeyPermissions'].message_type = _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS\n_LICENSE_KEYCONTAINER.fields_by_name['VideoResolutionConstraints'].message_type = _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT\n_LICENSE_KEYCONTAINER.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_KEYTYPE.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_SECURITYLEVEL.containing_type = _LICENSE_KEYCONTAINER",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER.fields_by_name['Level'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER.fields_by_name['Level'].enum_type = _LICENSE_KEYCONTAINER_SECURITYLEVEL\n_LICENSE_KEYCONTAINER.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['RequestedProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['_KeyControl'].message_type = _LICENSE_KEYCONTAINER_KEYCONTROL\n_LICENSE_KEYCONTAINER.fields_by_name['_OperatorSessionKeyPermissions'].message_type = _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS\n_LICENSE_KEYCONTAINER.fields_by_name['VideoResolutionConstraints'].message_type = _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT\n_LICENSE_KEYCONTAINER.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_KEYTYPE.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_SECURITYLEVEL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE.fields_by_name['Id'].message_type = _LICENSEIDENTIFICATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER.fields_by_name['RequiredProtection'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER.fields_by_name['RequiredProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['RequestedProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['_KeyControl'].message_type = _LICENSE_KEYCONTAINER_KEYCONTROL\n_LICENSE_KEYCONTAINER.fields_by_name['_OperatorSessionKeyPermissions'].message_type = _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS\n_LICENSE_KEYCONTAINER.fields_by_name['VideoResolutionConstraints'].message_type = _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT\n_LICENSE_KEYCONTAINER.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_KEYTYPE.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_SECURITYLEVEL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE.fields_by_name['Id'].message_type = _LICENSEIDENTIFICATION\n_LICENSE.fields_by_name['_Policy'].message_type = _LICENSE_POLICY",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER.fields_by_name['RequestedProtection'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER.fields_by_name['RequestedProtection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION\n_LICENSE_KEYCONTAINER.fields_by_name['_KeyControl'].message_type = _LICENSE_KEYCONTAINER_KEYCONTROL\n_LICENSE_KEYCONTAINER.fields_by_name['_OperatorSessionKeyPermissions'].message_type = _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS\n_LICENSE_KEYCONTAINER.fields_by_name['VideoResolutionConstraints'].message_type = _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT\n_LICENSE_KEYCONTAINER.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_KEYTYPE.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_SECURITYLEVEL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE.fields_by_name['Id'].message_type = _LICENSEIDENTIFICATION\n_LICENSE.fields_by_name['_Policy'].message_type = _LICENSE_POLICY\n_LICENSE.fields_by_name['Key'].message_type = _LICENSE_KEYCONTAINER",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER.fields_by_name['_KeyControl'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER.fields_by_name['_KeyControl'].message_type = _LICENSE_KEYCONTAINER_KEYCONTROL\n_LICENSE_KEYCONTAINER.fields_by_name['_OperatorSessionKeyPermissions'].message_type = _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS\n_LICENSE_KEYCONTAINER.fields_by_name['VideoResolutionConstraints'].message_type = _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT\n_LICENSE_KEYCONTAINER.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_KEYTYPE.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_SECURITYLEVEL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE.fields_by_name['Id'].message_type = _LICENSEIDENTIFICATION\n_LICENSE.fields_by_name['_Policy'].message_type = _LICENSE_POLICY\n_LICENSE.fields_by_name['Key'].message_type = _LICENSE_KEYCONTAINER\n_LICENSEERROR.fields_by_name['ErrorCode'].enum_type = _LICENSEERROR_ERROR",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER.fields_by_name['_OperatorSessionKeyPermissions'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER.fields_by_name['_OperatorSessionKeyPermissions'].message_type = _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS\n_LICENSE_KEYCONTAINER.fields_by_name['VideoResolutionConstraints'].message_type = _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT\n_LICENSE_KEYCONTAINER.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_KEYTYPE.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_SECURITYLEVEL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE.fields_by_name['Id'].message_type = _LICENSEIDENTIFICATION\n_LICENSE.fields_by_name['_Policy'].message_type = _LICENSE_POLICY\n_LICENSE.fields_by_name['Key'].message_type = _LICENSE_KEYCONTAINER\n_LICENSEERROR.fields_by_name['ErrorCode'].enum_type = _LICENSEERROR_ERROR\n_LICENSEERROR_ERROR.containing_type = _LICENSEERROR",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER.fields_by_name['VideoResolutionConstraints'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER.fields_by_name['VideoResolutionConstraints'].message_type = _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT\n_LICENSE_KEYCONTAINER.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_KEYTYPE.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_SECURITYLEVEL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE.fields_by_name['Id'].message_type = _LICENSEIDENTIFICATION\n_LICENSE.fields_by_name['_Policy'].message_type = _LICENSE_POLICY\n_LICENSE.fields_by_name['Key'].message_type = _LICENSE_KEYCONTAINER\n_LICENSEERROR.fields_by_name['ErrorCode'].enum_type = _LICENSEERROR_ERROR\n_LICENSEERROR_ERROR.containing_type = _LICENSEERROR\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['Pssh'].message_type = _WIDEVINECENCHEADER",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER.containing_type = _LICENSE\n_LICENSE_KEYCONTAINER_KEYTYPE.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_SECURITYLEVEL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE.fields_by_name['Id'].message_type = _LICENSEIDENTIFICATION\n_LICENSE.fields_by_name['_Policy'].message_type = _LICENSE_POLICY\n_LICENSE.fields_by_name['Key'].message_type = _LICENSE_KEYCONTAINER\n_LICENSEERROR.fields_by_name['ErrorCode'].enum_type = _LICENSEERROR_ERROR\n_LICENSEERROR_ERROR.containing_type = _LICENSEERROR\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['Pssh'].message_type = _WIDEVINECENCHEADER\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['LicenseType'].enum_type = _LICENSETYPE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_KEYTYPE.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_KEYTYPE.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE_KEYCONTAINER_SECURITYLEVEL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE.fields_by_name['Id'].message_type = _LICENSEIDENTIFICATION\n_LICENSE.fields_by_name['_Policy'].message_type = _LICENSE_POLICY\n_LICENSE.fields_by_name['Key'].message_type = _LICENSE_KEYCONTAINER\n_LICENSEERROR.fields_by_name['ErrorCode'].enum_type = _LICENSEERROR_ERROR\n_LICENSEERROR_ERROR.containing_type = _LICENSEERROR\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['Pssh'].message_type = _WIDEVINECENCHEADER\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE_KEYCONTAINER_SECURITYLEVEL.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE_KEYCONTAINER_SECURITYLEVEL.containing_type = _LICENSE_KEYCONTAINER\n_LICENSE.fields_by_name['Id'].message_type = _LICENSEIDENTIFICATION\n_LICENSE.fields_by_name['_Policy'].message_type = _LICENSE_POLICY\n_LICENSE.fields_by_name['Key'].message_type = _LICENSE_KEYCONTAINER\n_LICENSEERROR.fields_by_name['ErrorCode'].enum_type = _LICENSEERROR_ERROR\n_LICENSEERROR_ERROR.containing_type = _LICENSEERROR\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['Pssh'].message_type = _WIDEVINECENCHEADER\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.fields_by_name['LicenseType'].enum_type = _LICENSETYPE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE.fields_by_name['Id'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE.fields_by_name['Id'].message_type = _LICENSEIDENTIFICATION\n_LICENSE.fields_by_name['_Policy'].message_type = _LICENSE_POLICY\n_LICENSE.fields_by_name['Key'].message_type = _LICENSE_KEYCONTAINER\n_LICENSEERROR.fields_by_name['ErrorCode'].enum_type = _LICENSEERROR_ERROR\n_LICENSEERROR_ERROR.containing_type = _LICENSEERROR\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['Pssh'].message_type = _WIDEVINECENCHEADER\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE.fields_by_name['_Policy'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE.fields_by_name['_Policy'].message_type = _LICENSE_POLICY\n_LICENSE.fields_by_name['Key'].message_type = _LICENSE_KEYCONTAINER\n_LICENSEERROR.fields_by_name['ErrorCode'].enum_type = _LICENSEERROR_ERROR\n_LICENSEERROR_ERROR.containing_type = _LICENSEERROR\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['Pssh'].message_type = _WIDEVINECENCHEADER\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.fields_by_name['LicenseId'].message_type = _LICENSEIDENTIFICATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSE.fields_by_name['Key'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSE.fields_by_name['Key'].message_type = _LICENSE_KEYCONTAINER\n_LICENSEERROR.fields_by_name['ErrorCode'].enum_type = _LICENSEERROR_ERROR\n_LICENSEERROR_ERROR.containing_type = _LICENSEERROR\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['Pssh'].message_type = _WIDEVINECENCHEADER\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.fields_by_name['LicenseId'].message_type = _LICENSEIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEERROR.fields_by_name['ErrorCode'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEERROR.fields_by_name['ErrorCode'].enum_type = _LICENSEERROR_ERROR\n_LICENSEERROR_ERROR.containing_type = _LICENSEERROR\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['Pssh'].message_type = _WIDEVINECENCHEADER\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.fields_by_name['LicenseId'].message_type = _LICENSEIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['CencId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_CENC",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEERROR_ERROR.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEERROR_ERROR.containing_type = _LICENSEERROR\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['Pssh'].message_type = _WIDEVINECENCHEADER\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.fields_by_name['LicenseId'].message_type = _LICENSEIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['CencId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_CENC\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['WebmId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['Pssh'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['Pssh'].message_type = _WIDEVINECENCHEADER\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.fields_by_name['LicenseId'].message_type = _LICENSEIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['CencId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_CENC\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['WebmId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['License'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['LicenseType'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.fields_by_name['LicenseId'].message_type = _LICENSEIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['CencId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_CENC\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['WebmId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['License'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE\n_LICENSEREQUEST_CONTENTIDENTIFICATION.containing_type = _LICENSEREQUEST",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION_CENC.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.fields_by_name['LicenseId'].message_type = _LICENSEIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['CencId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_CENC\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['WebmId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['License'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE\n_LICENSEREQUEST_CONTENTIDENTIFICATION.containing_type = _LICENSEREQUEST\n_LICENSEREQUEST.fields_by_name['ClientId'].message_type = _CLIENTIDENTIFICATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.fields_by_name['LicenseType'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.fields_by_name['LicenseType'].enum_type = _LICENSETYPE\n_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.fields_by_name['LicenseId'].message_type = _LICENSEIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['CencId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_CENC\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['WebmId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['License'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE\n_LICENSEREQUEST_CONTENTIDENTIFICATION.containing_type = _LICENSEREQUEST\n_LICENSEREQUEST.fields_by_name['ClientId'].message_type = _CLIENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['ContentId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.fields_by_name['LicenseId'].message_type = _LICENSEIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['CencId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_CENC\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['WebmId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['License'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE\n_LICENSEREQUEST_CONTENTIDENTIFICATION.containing_type = _LICENSEREQUEST\n_LICENSEREQUEST.fields_by_name['ClientId'].message_type = _CLIENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['ContentId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['Type'].enum_type = _LICENSEREQUEST_REQUESTTYPE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.fields_by_name['LicenseId'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.fields_by_name['LicenseId'].message_type = _LICENSEIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['CencId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_CENC\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['WebmId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['License'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE\n_LICENSEREQUEST_CONTENTIDENTIFICATION.containing_type = _LICENSEREQUEST\n_LICENSEREQUEST.fields_by_name['ClientId'].message_type = _CLIENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['ContentId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['Type'].enum_type = _LICENSEREQUEST_REQUESTTYPE\n_LICENSEREQUEST.fields_by_name['ProtocolVersion'].enum_type = _PROTOCOLVERSION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['CencId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_CENC\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['WebmId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['License'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE\n_LICENSEREQUEST_CONTENTIDENTIFICATION.containing_type = _LICENSEREQUEST\n_LICENSEREQUEST.fields_by_name['ClientId'].message_type = _CLIENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['ContentId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['Type'].enum_type = _LICENSEREQUEST_REQUESTTYPE\n_LICENSEREQUEST.fields_by_name['ProtocolVersion'].enum_type = _PROTOCOLVERSION\n_LICENSEREQUEST.fields_by_name['EncryptedClientId'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['CencId'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['CencId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_CENC\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['WebmId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['License'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE\n_LICENSEREQUEST_CONTENTIDENTIFICATION.containing_type = _LICENSEREQUEST\n_LICENSEREQUEST.fields_by_name['ClientId'].message_type = _CLIENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['ContentId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['Type'].enum_type = _LICENSEREQUEST_REQUESTTYPE\n_LICENSEREQUEST.fields_by_name['ProtocolVersion'].enum_type = _PROTOCOLVERSION\n_LICENSEREQUEST.fields_by_name['EncryptedClientId'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_LICENSEREQUEST_REQUESTTYPE.containing_type = _LICENSEREQUEST",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['WebmId'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['WebmId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM\n_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['License'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE\n_LICENSEREQUEST_CONTENTIDENTIFICATION.containing_type = _LICENSEREQUEST\n_LICENSEREQUEST.fields_by_name['ClientId'].message_type = _CLIENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['ContentId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['Type'].enum_type = _LICENSEREQUEST_REQUESTTYPE\n_LICENSEREQUEST.fields_by_name['ProtocolVersion'].enum_type = _PROTOCOLVERSION\n_LICENSEREQUEST.fields_by_name['EncryptedClientId'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_LICENSEREQUEST_REQUESTTYPE.containing_type = _LICENSEREQUEST\n_PROVISIONEDDEVICEINFO.fields_by_name['SecurityLevel'].enum_type = _PROVISIONEDDEVICEINFO_WVSECURITYLEVEL",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['License'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['License'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE\n_LICENSEREQUEST_CONTENTIDENTIFICATION.containing_type = _LICENSEREQUEST\n_LICENSEREQUEST.fields_by_name['ClientId'].message_type = _CLIENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['ContentId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['Type'].enum_type = _LICENSEREQUEST_REQUESTTYPE\n_LICENSEREQUEST.fields_by_name['ProtocolVersion'].enum_type = _PROTOCOLVERSION\n_LICENSEREQUEST.fields_by_name['EncryptedClientId'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_LICENSEREQUEST_REQUESTTYPE.containing_type = _LICENSEREQUEST\n_PROVISIONEDDEVICEINFO.fields_by_name['SecurityLevel'].enum_type = _PROVISIONEDDEVICEINFO_WVSECURITYLEVEL\n_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL.containing_type = _PROVISIONEDDEVICEINFO",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_CONTENTIDENTIFICATION.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_CONTENTIDENTIFICATION.containing_type = _LICENSEREQUEST\n_LICENSEREQUEST.fields_by_name['ClientId'].message_type = _CLIENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['ContentId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['Type'].enum_type = _LICENSEREQUEST_REQUESTTYPE\n_LICENSEREQUEST.fields_by_name['ProtocolVersion'].enum_type = _PROTOCOLVERSION\n_LICENSEREQUEST.fields_by_name['EncryptedClientId'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_LICENSEREQUEST_REQUESTTYPE.containing_type = _LICENSEREQUEST\n_PROVISIONEDDEVICEINFO.fields_by_name['SecurityLevel'].enum_type = _PROVISIONEDDEVICEINFO_WVSECURITYLEVEL\n_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL.containing_type = _PROVISIONEDDEVICEINFO\n_REMOTEATTESTATION.fields_by_name['Certificate'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST.fields_by_name['ClientId'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST.fields_by_name['ClientId'].message_type = _CLIENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['ContentId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['Type'].enum_type = _LICENSEREQUEST_REQUESTTYPE\n_LICENSEREQUEST.fields_by_name['ProtocolVersion'].enum_type = _PROTOCOLVERSION\n_LICENSEREQUEST.fields_by_name['EncryptedClientId'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_LICENSEREQUEST_REQUESTTYPE.containing_type = _LICENSEREQUEST\n_PROVISIONEDDEVICEINFO.fields_by_name['SecurityLevel'].enum_type = _PROVISIONEDDEVICEINFO_WVSECURITYLEVEL\n_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL.containing_type = _PROVISIONEDDEVICEINFO\n_REMOTEATTESTATION.fields_by_name['Certificate'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_SIGNEDDEVICECERTIFICATE.fields_by_name['_DeviceCertificate'].message_type = _DEVICECERTIFICATE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST.fields_by_name['ContentId'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST.fields_by_name['ContentId'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION\n_LICENSEREQUEST.fields_by_name['Type'].enum_type = _LICENSEREQUEST_REQUESTTYPE\n_LICENSEREQUEST.fields_by_name['ProtocolVersion'].enum_type = _PROTOCOLVERSION\n_LICENSEREQUEST.fields_by_name['EncryptedClientId'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_LICENSEREQUEST_REQUESTTYPE.containing_type = _LICENSEREQUEST\n_PROVISIONEDDEVICEINFO.fields_by_name['SecurityLevel'].enum_type = _PROVISIONEDDEVICEINFO_WVSECURITYLEVEL\n_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL.containing_type = _PROVISIONEDDEVICEINFO\n_REMOTEATTESTATION.fields_by_name['Certificate'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_SIGNEDDEVICECERTIFICATE.fields_by_name['_DeviceCertificate'].message_type = _DEVICECERTIFICATE\n_SIGNEDDEVICECERTIFICATE.fields_by_name['Signer'].message_type = _SIGNEDDEVICECERTIFICATE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST.fields_by_name['Type'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST.fields_by_name['Type'].enum_type = _LICENSEREQUEST_REQUESTTYPE\n_LICENSEREQUEST.fields_by_name['ProtocolVersion'].enum_type = _PROTOCOLVERSION\n_LICENSEREQUEST.fields_by_name['EncryptedClientId'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_LICENSEREQUEST_REQUESTTYPE.containing_type = _LICENSEREQUEST\n_PROVISIONEDDEVICEINFO.fields_by_name['SecurityLevel'].enum_type = _PROVISIONEDDEVICEINFO_WVSECURITYLEVEL\n_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL.containing_type = _PROVISIONEDDEVICEINFO\n_REMOTEATTESTATION.fields_by_name['Certificate'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_SIGNEDDEVICECERTIFICATE.fields_by_name['_DeviceCertificate'].message_type = _DEVICECERTIFICATE\n_SIGNEDDEVICECERTIFICATE.fields_by_name['Signer'].message_type = _SIGNEDDEVICECERTIFICATE\n_SIGNEDMESSAGE.fields_by_name['Type'].enum_type = _SIGNEDMESSAGE_MESSAGETYPE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST.fields_by_name['ProtocolVersion'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST.fields_by_name['ProtocolVersion'].enum_type = _PROTOCOLVERSION\n_LICENSEREQUEST.fields_by_name['EncryptedClientId'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_LICENSEREQUEST_REQUESTTYPE.containing_type = _LICENSEREQUEST\n_PROVISIONEDDEVICEINFO.fields_by_name['SecurityLevel'].enum_type = _PROVISIONEDDEVICEINFO_WVSECURITYLEVEL\n_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL.containing_type = _PROVISIONEDDEVICEINFO\n_REMOTEATTESTATION.fields_by_name['Certificate'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_SIGNEDDEVICECERTIFICATE.fields_by_name['_DeviceCertificate'].message_type = _DEVICECERTIFICATE\n_SIGNEDDEVICECERTIFICATE.fields_by_name['Signer'].message_type = _SIGNEDDEVICECERTIFICATE\n_SIGNEDMESSAGE.fields_by_name['Type'].enum_type = _SIGNEDMESSAGE_MESSAGETYPE\n_SIGNEDMESSAGE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST.fields_by_name['EncryptedClientId'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST.fields_by_name['EncryptedClientId'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_LICENSEREQUEST_REQUESTTYPE.containing_type = _LICENSEREQUEST\n_PROVISIONEDDEVICEINFO.fields_by_name['SecurityLevel'].enum_type = _PROVISIONEDDEVICEINFO_WVSECURITYLEVEL\n_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL.containing_type = _PROVISIONEDDEVICEINFO\n_REMOTEATTESTATION.fields_by_name['Certificate'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_SIGNEDDEVICECERTIFICATE.fields_by_name['_DeviceCertificate'].message_type = _DEVICECERTIFICATE\n_SIGNEDDEVICECERTIFICATE.fields_by_name['Signer'].message_type = _SIGNEDDEVICECERTIFICATE\n_SIGNEDMESSAGE.fields_by_name['Type'].enum_type = _SIGNEDMESSAGE_MESSAGETYPE\n_SIGNEDMESSAGE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDMESSAGE_MESSAGETYPE.containing_type = _SIGNEDMESSAGE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_LICENSEREQUEST_REQUESTTYPE.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_LICENSEREQUEST_REQUESTTYPE.containing_type = _LICENSEREQUEST\n_PROVISIONEDDEVICEINFO.fields_by_name['SecurityLevel'].enum_type = _PROVISIONEDDEVICEINFO_WVSECURITYLEVEL\n_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL.containing_type = _PROVISIONEDDEVICEINFO\n_REMOTEATTESTATION.fields_by_name['Certificate'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_SIGNEDDEVICECERTIFICATE.fields_by_name['_DeviceCertificate'].message_type = _DEVICECERTIFICATE\n_SIGNEDDEVICECERTIFICATE.fields_by_name['Signer'].message_type = _SIGNEDDEVICECERTIFICATE\n_SIGNEDMESSAGE.fields_by_name['Type'].enum_type = _SIGNEDMESSAGE_MESSAGETYPE\n_SIGNEDMESSAGE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDMESSAGE_MESSAGETYPE.containing_type = _SIGNEDMESSAGE\n_WIDEVINECENCHEADER.fields_by_name['algorithm'].enum_type = _WIDEVINECENCHEADER_ALGORITHM",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_PROVISIONEDDEVICEINFO.fields_by_name['SecurityLevel'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_PROVISIONEDDEVICEINFO.fields_by_name['SecurityLevel'].enum_type = _PROVISIONEDDEVICEINFO_WVSECURITYLEVEL\n_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL.containing_type = _PROVISIONEDDEVICEINFO\n_REMOTEATTESTATION.fields_by_name['Certificate'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_SIGNEDDEVICECERTIFICATE.fields_by_name['_DeviceCertificate'].message_type = _DEVICECERTIFICATE\n_SIGNEDDEVICECERTIFICATE.fields_by_name['Signer'].message_type = _SIGNEDDEVICECERTIFICATE\n_SIGNEDMESSAGE.fields_by_name['Type'].enum_type = _SIGNEDMESSAGE_MESSAGETYPE\n_SIGNEDMESSAGE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDMESSAGE_MESSAGETYPE.containing_type = _SIGNEDMESSAGE\n_WIDEVINECENCHEADER.fields_by_name['algorithm'].enum_type = _WIDEVINECENCHEADER_ALGORITHM\n_WIDEVINECENCHEADER_ALGORITHM.containing_type = _WIDEVINECENCHEADER",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_PROVISIONEDDEVICEINFO_WVSECURITYLEVEL.containing_type = _PROVISIONEDDEVICEINFO\n_REMOTEATTESTATION.fields_by_name['Certificate'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_SIGNEDDEVICECERTIFICATE.fields_by_name['_DeviceCertificate'].message_type = _DEVICECERTIFICATE\n_SIGNEDDEVICECERTIFICATE.fields_by_name['Signer'].message_type = _SIGNEDDEVICECERTIFICATE\n_SIGNEDMESSAGE.fields_by_name['Type'].enum_type = _SIGNEDMESSAGE_MESSAGETYPE\n_SIGNEDMESSAGE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDMESSAGE_MESSAGETYPE.containing_type = _SIGNEDMESSAGE\n_WIDEVINECENCHEADER.fields_by_name['algorithm'].enum_type = _WIDEVINECENCHEADER_ALGORITHM\n_WIDEVINECENCHEADER_ALGORITHM.containing_type = _WIDEVINECENCHEADER\n_SIGNEDLICENSEREQUEST.fields_by_name['Type'].enum_type = _SIGNEDLICENSEREQUEST_MESSAGETYPE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_REMOTEATTESTATION.fields_by_name['Certificate'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_REMOTEATTESTATION.fields_by_name['Certificate'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION\n_SIGNEDDEVICECERTIFICATE.fields_by_name['_DeviceCertificate'].message_type = _DEVICECERTIFICATE\n_SIGNEDDEVICECERTIFICATE.fields_by_name['Signer'].message_type = _SIGNEDDEVICECERTIFICATE\n_SIGNEDMESSAGE.fields_by_name['Type'].enum_type = _SIGNEDMESSAGE_MESSAGETYPE\n_SIGNEDMESSAGE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDMESSAGE_MESSAGETYPE.containing_type = _SIGNEDMESSAGE\n_WIDEVINECENCHEADER.fields_by_name['algorithm'].enum_type = _WIDEVINECENCHEADER_ALGORITHM\n_WIDEVINECENCHEADER_ALGORITHM.containing_type = _WIDEVINECENCHEADER\n_SIGNEDLICENSEREQUEST.fields_by_name['Type'].enum_type = _SIGNEDLICENSEREQUEST_MESSAGETYPE\n_SIGNEDLICENSEREQUEST.fields_by_name['Msg'].message_type = _LICENSEREQUEST",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDDEVICECERTIFICATE.fields_by_name['_DeviceCertificate'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDDEVICECERTIFICATE.fields_by_name['_DeviceCertificate'].message_type = _DEVICECERTIFICATE\n_SIGNEDDEVICECERTIFICATE.fields_by_name['Signer'].message_type = _SIGNEDDEVICECERTIFICATE\n_SIGNEDMESSAGE.fields_by_name['Type'].enum_type = _SIGNEDMESSAGE_MESSAGETYPE\n_SIGNEDMESSAGE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDMESSAGE_MESSAGETYPE.containing_type = _SIGNEDMESSAGE\n_WIDEVINECENCHEADER.fields_by_name['algorithm'].enum_type = _WIDEVINECENCHEADER_ALGORITHM\n_WIDEVINECENCHEADER_ALGORITHM.containing_type = _WIDEVINECENCHEADER\n_SIGNEDLICENSEREQUEST.fields_by_name['Type'].enum_type = _SIGNEDLICENSEREQUEST_MESSAGETYPE\n_SIGNEDLICENSEREQUEST.fields_by_name['Msg'].message_type = _LICENSEREQUEST\n_SIGNEDLICENSEREQUEST.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDDEVICECERTIFICATE.fields_by_name['Signer'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDDEVICECERTIFICATE.fields_by_name['Signer'].message_type = _SIGNEDDEVICECERTIFICATE\n_SIGNEDMESSAGE.fields_by_name['Type'].enum_type = _SIGNEDMESSAGE_MESSAGETYPE\n_SIGNEDMESSAGE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDMESSAGE_MESSAGETYPE.containing_type = _SIGNEDMESSAGE\n_WIDEVINECENCHEADER.fields_by_name['algorithm'].enum_type = _WIDEVINECENCHEADER_ALGORITHM\n_WIDEVINECENCHEADER_ALGORITHM.containing_type = _WIDEVINECENCHEADER\n_SIGNEDLICENSEREQUEST.fields_by_name['Type'].enum_type = _SIGNEDLICENSEREQUEST_MESSAGETYPE\n_SIGNEDLICENSEREQUEST.fields_by_name['Msg'].message_type = _LICENSEREQUEST\n_SIGNEDLICENSEREQUEST.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSEREQUEST_MESSAGETYPE.containing_type = _SIGNEDLICENSEREQUEST",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDMESSAGE.fields_by_name['Type'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDMESSAGE.fields_by_name['Type'].enum_type = _SIGNEDMESSAGE_MESSAGETYPE\n_SIGNEDMESSAGE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDMESSAGE_MESSAGETYPE.containing_type = _SIGNEDMESSAGE\n_WIDEVINECENCHEADER.fields_by_name['algorithm'].enum_type = _WIDEVINECENCHEADER_ALGORITHM\n_WIDEVINECENCHEADER_ALGORITHM.containing_type = _WIDEVINECENCHEADER\n_SIGNEDLICENSEREQUEST.fields_by_name['Type'].enum_type = _SIGNEDLICENSEREQUEST_MESSAGETYPE\n_SIGNEDLICENSEREQUEST.fields_by_name['Msg'].message_type = _LICENSEREQUEST\n_SIGNEDLICENSEREQUEST.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSEREQUEST_MESSAGETYPE.containing_type = _SIGNEDLICENSEREQUEST\n_SIGNEDLICENSE.fields_by_name['Type'].enum_type = _SIGNEDLICENSE_MESSAGETYPE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDMESSAGE.fields_by_name['RemoteAttestation'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDMESSAGE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDMESSAGE_MESSAGETYPE.containing_type = _SIGNEDMESSAGE\n_WIDEVINECENCHEADER.fields_by_name['algorithm'].enum_type = _WIDEVINECENCHEADER_ALGORITHM\n_WIDEVINECENCHEADER_ALGORITHM.containing_type = _WIDEVINECENCHEADER\n_SIGNEDLICENSEREQUEST.fields_by_name['Type'].enum_type = _SIGNEDLICENSEREQUEST_MESSAGETYPE\n_SIGNEDLICENSEREQUEST.fields_by_name['Msg'].message_type = _LICENSEREQUEST\n_SIGNEDLICENSEREQUEST.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSEREQUEST_MESSAGETYPE.containing_type = _SIGNEDLICENSEREQUEST\n_SIGNEDLICENSE.fields_by_name['Type'].enum_type = _SIGNEDLICENSE_MESSAGETYPE\n_SIGNEDLICENSE.fields_by_name['Msg'].message_type = _LICENSE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDMESSAGE_MESSAGETYPE.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDMESSAGE_MESSAGETYPE.containing_type = _SIGNEDMESSAGE\n_WIDEVINECENCHEADER.fields_by_name['algorithm'].enum_type = _WIDEVINECENCHEADER_ALGORITHM\n_WIDEVINECENCHEADER_ALGORITHM.containing_type = _WIDEVINECENCHEADER\n_SIGNEDLICENSEREQUEST.fields_by_name['Type'].enum_type = _SIGNEDLICENSEREQUEST_MESSAGETYPE\n_SIGNEDLICENSEREQUEST.fields_by_name['Msg'].message_type = _LICENSEREQUEST\n_SIGNEDLICENSEREQUEST.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSEREQUEST_MESSAGETYPE.containing_type = _SIGNEDLICENSEREQUEST\n_SIGNEDLICENSE.fields_by_name['Type'].enum_type = _SIGNEDLICENSE_MESSAGETYPE\n_SIGNEDLICENSE.fields_by_name['Msg'].message_type = _LICENSE\n_SIGNEDLICENSE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_WIDEVINECENCHEADER.fields_by_name['algorithm'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_WIDEVINECENCHEADER.fields_by_name['algorithm'].enum_type = _WIDEVINECENCHEADER_ALGORITHM\n_WIDEVINECENCHEADER_ALGORITHM.containing_type = _WIDEVINECENCHEADER\n_SIGNEDLICENSEREQUEST.fields_by_name['Type'].enum_type = _SIGNEDLICENSEREQUEST_MESSAGETYPE\n_SIGNEDLICENSEREQUEST.fields_by_name['Msg'].message_type = _LICENSEREQUEST\n_SIGNEDLICENSEREQUEST.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSEREQUEST_MESSAGETYPE.containing_type = _SIGNEDLICENSEREQUEST\n_SIGNEDLICENSE.fields_by_name['Type'].enum_type = _SIGNEDLICENSE_MESSAGETYPE\n_SIGNEDLICENSE.fields_by_name['Msg'].message_type = _LICENSE\n_SIGNEDLICENSE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSE_MESSAGETYPE.containing_type = _SIGNEDLICENSE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_WIDEVINECENCHEADER_ALGORITHM.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_WIDEVINECENCHEADER_ALGORITHM.containing_type = _WIDEVINECENCHEADER\n_SIGNEDLICENSEREQUEST.fields_by_name['Type'].enum_type = _SIGNEDLICENSEREQUEST_MESSAGETYPE\n_SIGNEDLICENSEREQUEST.fields_by_name['Msg'].message_type = _LICENSEREQUEST\n_SIGNEDLICENSEREQUEST.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSEREQUEST_MESSAGETYPE.containing_type = _SIGNEDLICENSEREQUEST\n_SIGNEDLICENSE.fields_by_name['Type'].enum_type = _SIGNEDLICENSE_MESSAGETYPE\n_SIGNEDLICENSE.fields_by_name['Msg'].message_type = _LICENSE\n_SIGNEDLICENSE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSE_MESSAGETYPE.containing_type = _SIGNEDLICENSE\nDESCRIPTOR.message_types_by_name['ClientIdentification'] = _CLIENTIDENTIFICATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDLICENSEREQUEST.fields_by_name['Type'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDLICENSEREQUEST.fields_by_name['Type'].enum_type = _SIGNEDLICENSEREQUEST_MESSAGETYPE\n_SIGNEDLICENSEREQUEST.fields_by_name['Msg'].message_type = _LICENSEREQUEST\n_SIGNEDLICENSEREQUEST.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSEREQUEST_MESSAGETYPE.containing_type = _SIGNEDLICENSEREQUEST\n_SIGNEDLICENSE.fields_by_name['Type'].enum_type = _SIGNEDLICENSE_MESSAGETYPE\n_SIGNEDLICENSE.fields_by_name['Msg'].message_type = _LICENSE\n_SIGNEDLICENSE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSE_MESSAGETYPE.containing_type = _SIGNEDLICENSE\nDESCRIPTOR.message_types_by_name['ClientIdentification'] = _CLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['DeviceCertificate'] = _DEVICECERTIFICATE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDLICENSEREQUEST.fields_by_name['Msg'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDLICENSEREQUEST.fields_by_name['Msg'].message_type = _LICENSEREQUEST\n_SIGNEDLICENSEREQUEST.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSEREQUEST_MESSAGETYPE.containing_type = _SIGNEDLICENSEREQUEST\n_SIGNEDLICENSE.fields_by_name['Type'].enum_type = _SIGNEDLICENSE_MESSAGETYPE\n_SIGNEDLICENSE.fields_by_name['Msg'].message_type = _LICENSE\n_SIGNEDLICENSE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSE_MESSAGETYPE.containing_type = _SIGNEDLICENSE\nDESCRIPTOR.message_types_by_name['ClientIdentification'] = _CLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['DeviceCertificate'] = _DEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatus'] = _DEVICECERTIFICATESTATUS",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDLICENSEREQUEST.fields_by_name['RemoteAttestation'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDLICENSEREQUEST.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSEREQUEST_MESSAGETYPE.containing_type = _SIGNEDLICENSEREQUEST\n_SIGNEDLICENSE.fields_by_name['Type'].enum_type = _SIGNEDLICENSE_MESSAGETYPE\n_SIGNEDLICENSE.fields_by_name['Msg'].message_type = _LICENSE\n_SIGNEDLICENSE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSE_MESSAGETYPE.containing_type = _SIGNEDLICENSE\nDESCRIPTOR.message_types_by_name['ClientIdentification'] = _CLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['DeviceCertificate'] = _DEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatus'] = _DEVICECERTIFICATESTATUS\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatusList'] = _DEVICECERTIFICATESTATUSLIST",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDLICENSEREQUEST_MESSAGETYPE.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDLICENSEREQUEST_MESSAGETYPE.containing_type = _SIGNEDLICENSEREQUEST\n_SIGNEDLICENSE.fields_by_name['Type'].enum_type = _SIGNEDLICENSE_MESSAGETYPE\n_SIGNEDLICENSE.fields_by_name['Msg'].message_type = _LICENSE\n_SIGNEDLICENSE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSE_MESSAGETYPE.containing_type = _SIGNEDLICENSE\nDESCRIPTOR.message_types_by_name['ClientIdentification'] = _CLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['DeviceCertificate'] = _DEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatus'] = _DEVICECERTIFICATESTATUS\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatusList'] = _DEVICECERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['EncryptedClientIdentification'] = _ENCRYPTEDCLIENTIDENTIFICATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDLICENSE.fields_by_name['Type'].enum_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDLICENSE.fields_by_name['Type'].enum_type = _SIGNEDLICENSE_MESSAGETYPE\n_SIGNEDLICENSE.fields_by_name['Msg'].message_type = _LICENSE\n_SIGNEDLICENSE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSE_MESSAGETYPE.containing_type = _SIGNEDLICENSE\nDESCRIPTOR.message_types_by_name['ClientIdentification'] = _CLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['DeviceCertificate'] = _DEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatus'] = _DEVICECERTIFICATESTATUS\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatusList'] = _DEVICECERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['EncryptedClientIdentification'] = _ENCRYPTEDCLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['LicenseIdentification'] = _LICENSEIDENTIFICATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDLICENSE.fields_by_name['Msg'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDLICENSE.fields_by_name['Msg'].message_type = _LICENSE\n_SIGNEDLICENSE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSE_MESSAGETYPE.containing_type = _SIGNEDLICENSE\nDESCRIPTOR.message_types_by_name['ClientIdentification'] = _CLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['DeviceCertificate'] = _DEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatus'] = _DEVICECERTIFICATESTATUS\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatusList'] = _DEVICECERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['EncryptedClientIdentification'] = _ENCRYPTEDCLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['LicenseIdentification'] = _LICENSEIDENTIFICATION\nDESCRIPTOR.message_types_by_name['License'] = _LICENSE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDLICENSE.fields_by_name['RemoteAttestation'].message_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDLICENSE.fields_by_name['RemoteAttestation'].message_type = _REMOTEATTESTATION\n_SIGNEDLICENSE_MESSAGETYPE.containing_type = _SIGNEDLICENSE\nDESCRIPTOR.message_types_by_name['ClientIdentification'] = _CLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['DeviceCertificate'] = _DEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatus'] = _DEVICECERTIFICATESTATUS\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatusList'] = _DEVICECERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['EncryptedClientIdentification'] = _ENCRYPTEDCLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['LicenseIdentification'] = _LICENSEIDENTIFICATION\nDESCRIPTOR.message_types_by_name['License'] = _LICENSE\nDESCRIPTOR.message_types_by_name['LicenseError'] = _LICENSEERROR",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "_SIGNEDLICENSE_MESSAGETYPE.containing_type",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "_SIGNEDLICENSE_MESSAGETYPE.containing_type = _SIGNEDLICENSE\nDESCRIPTOR.message_types_by_name['ClientIdentification'] = _CLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['DeviceCertificate'] = _DEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatus'] = _DEVICECERTIFICATESTATUS\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatusList'] = _DEVICECERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['EncryptedClientIdentification'] = _ENCRYPTEDCLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['LicenseIdentification'] = _LICENSEIDENTIFICATION\nDESCRIPTOR.message_types_by_name['License'] = _LICENSE\nDESCRIPTOR.message_types_by_name['LicenseError'] = _LICENSEERROR\nDESCRIPTOR.message_types_by_name['LicenseRequest'] = _LICENSEREQUEST",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['ClientIdentification']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['ClientIdentification'] = _CLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['DeviceCertificate'] = _DEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatus'] = _DEVICECERTIFICATESTATUS\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatusList'] = _DEVICECERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['EncryptedClientIdentification'] = _ENCRYPTEDCLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['LicenseIdentification'] = _LICENSEIDENTIFICATION\nDESCRIPTOR.message_types_by_name['License'] = _LICENSE\nDESCRIPTOR.message_types_by_name['LicenseError'] = _LICENSEERROR\nDESCRIPTOR.message_types_by_name['LicenseRequest'] = _LICENSEREQUEST\nDESCRIPTOR.message_types_by_name['ProvisionedDeviceInfo'] = _PROVISIONEDDEVICEINFO",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['DeviceCertificate']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['DeviceCertificate'] = _DEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatus'] = _DEVICECERTIFICATESTATUS\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatusList'] = _DEVICECERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['EncryptedClientIdentification'] = _ENCRYPTEDCLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['LicenseIdentification'] = _LICENSEIDENTIFICATION\nDESCRIPTOR.message_types_by_name['License'] = _LICENSE\nDESCRIPTOR.message_types_by_name['LicenseError'] = _LICENSEERROR\nDESCRIPTOR.message_types_by_name['LicenseRequest'] = _LICENSEREQUEST\nDESCRIPTOR.message_types_by_name['ProvisionedDeviceInfo'] = _PROVISIONEDDEVICEINFO\nDESCRIPTOR.message_types_by_name['ProvisioningOptions'] = _PROVISIONINGOPTIONS",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['DeviceCertificateStatus']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['DeviceCertificateStatus'] = _DEVICECERTIFICATESTATUS\nDESCRIPTOR.message_types_by_name['DeviceCertificateStatusList'] = _DEVICECERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['EncryptedClientIdentification'] = _ENCRYPTEDCLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['LicenseIdentification'] = _LICENSEIDENTIFICATION\nDESCRIPTOR.message_types_by_name['License'] = _LICENSE\nDESCRIPTOR.message_types_by_name['LicenseError'] = _LICENSEERROR\nDESCRIPTOR.message_types_by_name['LicenseRequest'] = _LICENSEREQUEST\nDESCRIPTOR.message_types_by_name['ProvisionedDeviceInfo'] = _PROVISIONEDDEVICEINFO\nDESCRIPTOR.message_types_by_name['ProvisioningOptions'] = _PROVISIONINGOPTIONS\nDESCRIPTOR.message_types_by_name['ProvisioningRequest'] = _PROVISIONINGREQUEST",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['DeviceCertificateStatusList']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['DeviceCertificateStatusList'] = _DEVICECERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['EncryptedClientIdentification'] = _ENCRYPTEDCLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['LicenseIdentification'] = _LICENSEIDENTIFICATION\nDESCRIPTOR.message_types_by_name['License'] = _LICENSE\nDESCRIPTOR.message_types_by_name['LicenseError'] = _LICENSEERROR\nDESCRIPTOR.message_types_by_name['LicenseRequest'] = _LICENSEREQUEST\nDESCRIPTOR.message_types_by_name['ProvisionedDeviceInfo'] = _PROVISIONEDDEVICEINFO\nDESCRIPTOR.message_types_by_name['ProvisioningOptions'] = _PROVISIONINGOPTIONS\nDESCRIPTOR.message_types_by_name['ProvisioningRequest'] = _PROVISIONINGREQUEST\nDESCRIPTOR.message_types_by_name['ProvisioningResponse'] = _PROVISIONINGRESPONSE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['EncryptedClientIdentification']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['EncryptedClientIdentification'] = _ENCRYPTEDCLIENTIDENTIFICATION\nDESCRIPTOR.message_types_by_name['LicenseIdentification'] = _LICENSEIDENTIFICATION\nDESCRIPTOR.message_types_by_name['License'] = _LICENSE\nDESCRIPTOR.message_types_by_name['LicenseError'] = _LICENSEERROR\nDESCRIPTOR.message_types_by_name['LicenseRequest'] = _LICENSEREQUEST\nDESCRIPTOR.message_types_by_name['ProvisionedDeviceInfo'] = _PROVISIONEDDEVICEINFO\nDESCRIPTOR.message_types_by_name['ProvisioningOptions'] = _PROVISIONINGOPTIONS\nDESCRIPTOR.message_types_by_name['ProvisioningRequest'] = _PROVISIONINGREQUEST\nDESCRIPTOR.message_types_by_name['ProvisioningResponse'] = _PROVISIONINGRESPONSE\nDESCRIPTOR.message_types_by_name['RemoteAttestation'] = _REMOTEATTESTATION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['LicenseIdentification']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['LicenseIdentification'] = _LICENSEIDENTIFICATION\nDESCRIPTOR.message_types_by_name['License'] = _LICENSE\nDESCRIPTOR.message_types_by_name['LicenseError'] = _LICENSEERROR\nDESCRIPTOR.message_types_by_name['LicenseRequest'] = _LICENSEREQUEST\nDESCRIPTOR.message_types_by_name['ProvisionedDeviceInfo'] = _PROVISIONEDDEVICEINFO\nDESCRIPTOR.message_types_by_name['ProvisioningOptions'] = _PROVISIONINGOPTIONS\nDESCRIPTOR.message_types_by_name['ProvisioningRequest'] = _PROVISIONINGREQUEST\nDESCRIPTOR.message_types_by_name['ProvisioningResponse'] = _PROVISIONINGRESPONSE\nDESCRIPTOR.message_types_by_name['RemoteAttestation'] = _REMOTEATTESTATION\nDESCRIPTOR.message_types_by_name['SessionInit'] = _SESSIONINIT",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['License']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['License'] = _LICENSE\nDESCRIPTOR.message_types_by_name['LicenseError'] = _LICENSEERROR\nDESCRIPTOR.message_types_by_name['LicenseRequest'] = _LICENSEREQUEST\nDESCRIPTOR.message_types_by_name['ProvisionedDeviceInfo'] = _PROVISIONEDDEVICEINFO\nDESCRIPTOR.message_types_by_name['ProvisioningOptions'] = _PROVISIONINGOPTIONS\nDESCRIPTOR.message_types_by_name['ProvisioningRequest'] = _PROVISIONINGREQUEST\nDESCRIPTOR.message_types_by_name['ProvisioningResponse'] = _PROVISIONINGRESPONSE\nDESCRIPTOR.message_types_by_name['RemoteAttestation'] = _REMOTEATTESTATION\nDESCRIPTOR.message_types_by_name['SessionInit'] = _SESSIONINIT\nDESCRIPTOR.message_types_by_name['SessionState'] = _SESSIONSTATE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['LicenseError']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['LicenseError'] = _LICENSEERROR\nDESCRIPTOR.message_types_by_name['LicenseRequest'] = _LICENSEREQUEST\nDESCRIPTOR.message_types_by_name['ProvisionedDeviceInfo'] = _PROVISIONEDDEVICEINFO\nDESCRIPTOR.message_types_by_name['ProvisioningOptions'] = _PROVISIONINGOPTIONS\nDESCRIPTOR.message_types_by_name['ProvisioningRequest'] = _PROVISIONINGREQUEST\nDESCRIPTOR.message_types_by_name['ProvisioningResponse'] = _PROVISIONINGRESPONSE\nDESCRIPTOR.message_types_by_name['RemoteAttestation'] = _REMOTEATTESTATION\nDESCRIPTOR.message_types_by_name['SessionInit'] = _SESSIONINIT\nDESCRIPTOR.message_types_by_name['SessionState'] = _SESSIONSTATE\nDESCRIPTOR.message_types_by_name['SignedCertificateStatusList'] = _SIGNEDCERTIFICATESTATUSLIST",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['LicenseRequest']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['LicenseRequest'] = _LICENSEREQUEST\nDESCRIPTOR.message_types_by_name['ProvisionedDeviceInfo'] = _PROVISIONEDDEVICEINFO\nDESCRIPTOR.message_types_by_name['ProvisioningOptions'] = _PROVISIONINGOPTIONS\nDESCRIPTOR.message_types_by_name['ProvisioningRequest'] = _PROVISIONINGREQUEST\nDESCRIPTOR.message_types_by_name['ProvisioningResponse'] = _PROVISIONINGRESPONSE\nDESCRIPTOR.message_types_by_name['RemoteAttestation'] = _REMOTEATTESTATION\nDESCRIPTOR.message_types_by_name['SessionInit'] = _SESSIONINIT\nDESCRIPTOR.message_types_by_name['SessionState'] = _SESSIONSTATE\nDESCRIPTOR.message_types_by_name['SignedCertificateStatusList'] = _SIGNEDCERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['SignedDeviceCertificate'] = _SIGNEDDEVICECERTIFICATE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['ProvisionedDeviceInfo']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['ProvisionedDeviceInfo'] = _PROVISIONEDDEVICEINFO\nDESCRIPTOR.message_types_by_name['ProvisioningOptions'] = _PROVISIONINGOPTIONS\nDESCRIPTOR.message_types_by_name['ProvisioningRequest'] = _PROVISIONINGREQUEST\nDESCRIPTOR.message_types_by_name['ProvisioningResponse'] = _PROVISIONINGRESPONSE\nDESCRIPTOR.message_types_by_name['RemoteAttestation'] = _REMOTEATTESTATION\nDESCRIPTOR.message_types_by_name['SessionInit'] = _SESSIONINIT\nDESCRIPTOR.message_types_by_name['SessionState'] = _SESSIONSTATE\nDESCRIPTOR.message_types_by_name['SignedCertificateStatusList'] = _SIGNEDCERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['SignedDeviceCertificate'] = _SIGNEDDEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['SignedProvisioningMessage'] = _SIGNEDPROVISIONINGMESSAGE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['ProvisioningOptions']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['ProvisioningOptions'] = _PROVISIONINGOPTIONS\nDESCRIPTOR.message_types_by_name['ProvisioningRequest'] = _PROVISIONINGREQUEST\nDESCRIPTOR.message_types_by_name['ProvisioningResponse'] = _PROVISIONINGRESPONSE\nDESCRIPTOR.message_types_by_name['RemoteAttestation'] = _REMOTEATTESTATION\nDESCRIPTOR.message_types_by_name['SessionInit'] = _SESSIONINIT\nDESCRIPTOR.message_types_by_name['SessionState'] = _SESSIONSTATE\nDESCRIPTOR.message_types_by_name['SignedCertificateStatusList'] = _SIGNEDCERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['SignedDeviceCertificate'] = _SIGNEDDEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['SignedProvisioningMessage'] = _SIGNEDPROVISIONINGMESSAGE\nDESCRIPTOR.message_types_by_name['SignedMessage'] = _SIGNEDMESSAGE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['ProvisioningRequest']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['ProvisioningRequest'] = _PROVISIONINGREQUEST\nDESCRIPTOR.message_types_by_name['ProvisioningResponse'] = _PROVISIONINGRESPONSE\nDESCRIPTOR.message_types_by_name['RemoteAttestation'] = _REMOTEATTESTATION\nDESCRIPTOR.message_types_by_name['SessionInit'] = _SESSIONINIT\nDESCRIPTOR.message_types_by_name['SessionState'] = _SESSIONSTATE\nDESCRIPTOR.message_types_by_name['SignedCertificateStatusList'] = _SIGNEDCERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['SignedDeviceCertificate'] = _SIGNEDDEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['SignedProvisioningMessage'] = _SIGNEDPROVISIONINGMESSAGE\nDESCRIPTOR.message_types_by_name['SignedMessage'] = _SIGNEDMESSAGE\nDESCRIPTOR.message_types_by_name['WidevineCencHeader'] = _WIDEVINECENCHEADER",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['ProvisioningResponse']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['ProvisioningResponse'] = _PROVISIONINGRESPONSE\nDESCRIPTOR.message_types_by_name['RemoteAttestation'] = _REMOTEATTESTATION\nDESCRIPTOR.message_types_by_name['SessionInit'] = _SESSIONINIT\nDESCRIPTOR.message_types_by_name['SessionState'] = _SESSIONSTATE\nDESCRIPTOR.message_types_by_name['SignedCertificateStatusList'] = _SIGNEDCERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['SignedDeviceCertificate'] = _SIGNEDDEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['SignedProvisioningMessage'] = _SIGNEDPROVISIONINGMESSAGE\nDESCRIPTOR.message_types_by_name['SignedMessage'] = _SIGNEDMESSAGE\nDESCRIPTOR.message_types_by_name['WidevineCencHeader'] = _WIDEVINECENCHEADER\nDESCRIPTOR.message_types_by_name['SignedLicenseRequest'] = _SIGNEDLICENSEREQUEST",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['RemoteAttestation']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['RemoteAttestation'] = _REMOTEATTESTATION\nDESCRIPTOR.message_types_by_name['SessionInit'] = _SESSIONINIT\nDESCRIPTOR.message_types_by_name['SessionState'] = _SESSIONSTATE\nDESCRIPTOR.message_types_by_name['SignedCertificateStatusList'] = _SIGNEDCERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['SignedDeviceCertificate'] = _SIGNEDDEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['SignedProvisioningMessage'] = _SIGNEDPROVISIONINGMESSAGE\nDESCRIPTOR.message_types_by_name['SignedMessage'] = _SIGNEDMESSAGE\nDESCRIPTOR.message_types_by_name['WidevineCencHeader'] = _WIDEVINECENCHEADER\nDESCRIPTOR.message_types_by_name['SignedLicenseRequest'] = _SIGNEDLICENSEREQUEST\nDESCRIPTOR.message_types_by_name['SignedLicense'] = _SIGNEDLICENSE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['SessionInit']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['SessionInit'] = _SESSIONINIT\nDESCRIPTOR.message_types_by_name['SessionState'] = _SESSIONSTATE\nDESCRIPTOR.message_types_by_name['SignedCertificateStatusList'] = _SIGNEDCERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['SignedDeviceCertificate'] = _SIGNEDDEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['SignedProvisioningMessage'] = _SIGNEDPROVISIONINGMESSAGE\nDESCRIPTOR.message_types_by_name['SignedMessage'] = _SIGNEDMESSAGE\nDESCRIPTOR.message_types_by_name['WidevineCencHeader'] = _WIDEVINECENCHEADER\nDESCRIPTOR.message_types_by_name['SignedLicenseRequest'] = _SIGNEDLICENSEREQUEST\nDESCRIPTOR.message_types_by_name['SignedLicense'] = _SIGNEDLICENSE\nDESCRIPTOR.enum_types_by_name['LicenseType'] = _LICENSETYPE",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['SessionState']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['SessionState'] = _SESSIONSTATE\nDESCRIPTOR.message_types_by_name['SignedCertificateStatusList'] = _SIGNEDCERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['SignedDeviceCertificate'] = _SIGNEDDEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['SignedProvisioningMessage'] = _SIGNEDPROVISIONINGMESSAGE\nDESCRIPTOR.message_types_by_name['SignedMessage'] = _SIGNEDMESSAGE\nDESCRIPTOR.message_types_by_name['WidevineCencHeader'] = _WIDEVINECENCHEADER\nDESCRIPTOR.message_types_by_name['SignedLicenseRequest'] = _SIGNEDLICENSEREQUEST\nDESCRIPTOR.message_types_by_name['SignedLicense'] = _SIGNEDLICENSE\nDESCRIPTOR.enum_types_by_name['LicenseType'] = _LICENSETYPE\nDESCRIPTOR.enum_types_by_name['ProtocolVersion'] = _PROTOCOLVERSION",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['SignedCertificateStatusList']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['SignedCertificateStatusList'] = _SIGNEDCERTIFICATESTATUSLIST\nDESCRIPTOR.message_types_by_name['SignedDeviceCertificate'] = _SIGNEDDEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['SignedProvisioningMessage'] = _SIGNEDPROVISIONINGMESSAGE\nDESCRIPTOR.message_types_by_name['SignedMessage'] = _SIGNEDMESSAGE\nDESCRIPTOR.message_types_by_name['WidevineCencHeader'] = _WIDEVINECENCHEADER\nDESCRIPTOR.message_types_by_name['SignedLicenseRequest'] = _SIGNEDLICENSEREQUEST\nDESCRIPTOR.message_types_by_name['SignedLicense'] = _SIGNEDLICENSE\nDESCRIPTOR.enum_types_by_name['LicenseType'] = _LICENSETYPE\nDESCRIPTOR.enum_types_by_name['ProtocolVersion'] = _PROTOCOLVERSION\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['SignedDeviceCertificate']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['SignedDeviceCertificate'] = _SIGNEDDEVICECERTIFICATE\nDESCRIPTOR.message_types_by_name['SignedProvisioningMessage'] = _SIGNEDPROVISIONINGMESSAGE\nDESCRIPTOR.message_types_by_name['SignedMessage'] = _SIGNEDMESSAGE\nDESCRIPTOR.message_types_by_name['WidevineCencHeader'] = _WIDEVINECENCHEADER\nDESCRIPTOR.message_types_by_name['SignedLicenseRequest'] = _SIGNEDLICENSEREQUEST\nDESCRIPTOR.message_types_by_name['SignedLicense'] = _SIGNEDLICENSE\nDESCRIPTOR.enum_types_by_name['LicenseType'] = _LICENSETYPE\nDESCRIPTOR.enum_types_by_name['ProtocolVersion'] = _PROTOCOLVERSION\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\nClientIdentification = _reflection.GeneratedProtocolMessageType('ClientIdentification', (_message.Message,), dict(",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['SignedProvisioningMessage']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['SignedProvisioningMessage'] = _SIGNEDPROVISIONINGMESSAGE\nDESCRIPTOR.message_types_by_name['SignedMessage'] = _SIGNEDMESSAGE\nDESCRIPTOR.message_types_by_name['WidevineCencHeader'] = _WIDEVINECENCHEADER\nDESCRIPTOR.message_types_by_name['SignedLicenseRequest'] = _SIGNEDLICENSEREQUEST\nDESCRIPTOR.message_types_by_name['SignedLicense'] = _SIGNEDLICENSE\nDESCRIPTOR.enum_types_by_name['LicenseType'] = _LICENSETYPE\nDESCRIPTOR.enum_types_by_name['ProtocolVersion'] = _PROTOCOLVERSION\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\nClientIdentification = _reflection.GeneratedProtocolMessageType('ClientIdentification', (_message.Message,), dict(\n  NameValue = _reflection.GeneratedProtocolMessageType('NameValue', (_message.Message,), dict(",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['SignedMessage']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['SignedMessage'] = _SIGNEDMESSAGE\nDESCRIPTOR.message_types_by_name['WidevineCencHeader'] = _WIDEVINECENCHEADER\nDESCRIPTOR.message_types_by_name['SignedLicenseRequest'] = _SIGNEDLICENSEREQUEST\nDESCRIPTOR.message_types_by_name['SignedLicense'] = _SIGNEDLICENSE\nDESCRIPTOR.enum_types_by_name['LicenseType'] = _LICENSETYPE\nDESCRIPTOR.enum_types_by_name['ProtocolVersion'] = _PROTOCOLVERSION\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\nClientIdentification = _reflection.GeneratedProtocolMessageType('ClientIdentification', (_message.Message,), dict(\n  NameValue = _reflection.GeneratedProtocolMessageType('NameValue', (_message.Message,), dict(\n    DESCRIPTOR = _CLIENTIDENTIFICATION_NAMEVALUE,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['WidevineCencHeader']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['WidevineCencHeader'] = _WIDEVINECENCHEADER\nDESCRIPTOR.message_types_by_name['SignedLicenseRequest'] = _SIGNEDLICENSEREQUEST\nDESCRIPTOR.message_types_by_name['SignedLicense'] = _SIGNEDLICENSE\nDESCRIPTOR.enum_types_by_name['LicenseType'] = _LICENSETYPE\nDESCRIPTOR.enum_types_by_name['ProtocolVersion'] = _PROTOCOLVERSION\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\nClientIdentification = _reflection.GeneratedProtocolMessageType('ClientIdentification', (_message.Message,), dict(\n  NameValue = _reflection.GeneratedProtocolMessageType('NameValue', (_message.Message,), dict(\n    DESCRIPTOR = _CLIENTIDENTIFICATION_NAMEVALUE,\n    __module__ = 'wv_proto3_pb2'",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['SignedLicenseRequest']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['SignedLicenseRequest'] = _SIGNEDLICENSEREQUEST\nDESCRIPTOR.message_types_by_name['SignedLicense'] = _SIGNEDLICENSE\nDESCRIPTOR.enum_types_by_name['LicenseType'] = _LICENSETYPE\nDESCRIPTOR.enum_types_by_name['ProtocolVersion'] = _PROTOCOLVERSION\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\nClientIdentification = _reflection.GeneratedProtocolMessageType('ClientIdentification', (_message.Message,), dict(\n  NameValue = _reflection.GeneratedProtocolMessageType('NameValue', (_message.Message,), dict(\n    DESCRIPTOR = _CLIENTIDENTIFICATION_NAMEVALUE,\n    __module__ = 'wv_proto3_pb2'\n    # @@protoc_insertion_point(class_scope:ClientIdentification.NameValue)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.message_types_by_name['SignedLicense']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.message_types_by_name['SignedLicense'] = _SIGNEDLICENSE\nDESCRIPTOR.enum_types_by_name['LicenseType'] = _LICENSETYPE\nDESCRIPTOR.enum_types_by_name['ProtocolVersion'] = _PROTOCOLVERSION\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\nClientIdentification = _reflection.GeneratedProtocolMessageType('ClientIdentification', (_message.Message,), dict(\n  NameValue = _reflection.GeneratedProtocolMessageType('NameValue', (_message.Message,), dict(\n    DESCRIPTOR = _CLIENTIDENTIFICATION_NAMEVALUE,\n    __module__ = 'wv_proto3_pb2'\n    # @@protoc_insertion_point(class_scope:ClientIdentification.NameValue)\n    ))",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.enum_types_by_name['LicenseType']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.enum_types_by_name['LicenseType'] = _LICENSETYPE\nDESCRIPTOR.enum_types_by_name['ProtocolVersion'] = _PROTOCOLVERSION\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\nClientIdentification = _reflection.GeneratedProtocolMessageType('ClientIdentification', (_message.Message,), dict(\n  NameValue = _reflection.GeneratedProtocolMessageType('NameValue', (_message.Message,), dict(\n    DESCRIPTOR = _CLIENTIDENTIFICATION_NAMEVALUE,\n    __module__ = 'wv_proto3_pb2'\n    # @@protoc_insertion_point(class_scope:ClientIdentification.NameValue)\n    ))\n  ,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR.enum_types_by_name['ProtocolVersion']",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DESCRIPTOR.enum_types_by_name['ProtocolVersion'] = _PROTOCOLVERSION\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\nClientIdentification = _reflection.GeneratedProtocolMessageType('ClientIdentification', (_message.Message,), dict(\n  NameValue = _reflection.GeneratedProtocolMessageType('NameValue', (_message.Message,), dict(\n    DESCRIPTOR = _CLIENTIDENTIFICATION_NAMEVALUE,\n    __module__ = 'wv_proto3_pb2'\n    # @@protoc_insertion_point(class_scope:ClientIdentification.NameValue)\n    ))\n  ,\n  ClientCapabilities = _reflection.GeneratedProtocolMessageType('ClientCapabilities', (_message.Message,), dict(",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "ClientIdentification",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "ClientIdentification = _reflection.GeneratedProtocolMessageType('ClientIdentification', (_message.Message,), dict(\n  NameValue = _reflection.GeneratedProtocolMessageType('NameValue', (_message.Message,), dict(\n    DESCRIPTOR = _CLIENTIDENTIFICATION_NAMEVALUE,\n    __module__ = 'wv_proto3_pb2'\n    # @@protoc_insertion_point(class_scope:ClientIdentification.NameValue)\n    ))\n  ,\n  ClientCapabilities = _reflection.GeneratedProtocolMessageType('ClientCapabilities', (_message.Message,), dict(\n    DESCRIPTOR = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES,\n    __module__ = 'wv_proto3_pb2'",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DeviceCertificate",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DeviceCertificate = _reflection.GeneratedProtocolMessageType('DeviceCertificate', (_message.Message,), dict(\n  DESCRIPTOR = _DEVICECERTIFICATE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:DeviceCertificate)\n  ))\n_sym_db.RegisterMessage(DeviceCertificate)\nDeviceCertificateStatus = _reflection.GeneratedProtocolMessageType('DeviceCertificateStatus', (_message.Message,), dict(\n  DESCRIPTOR = _DEVICECERTIFICATESTATUS,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:DeviceCertificateStatus)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DeviceCertificateStatus",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DeviceCertificateStatus = _reflection.GeneratedProtocolMessageType('DeviceCertificateStatus', (_message.Message,), dict(\n  DESCRIPTOR = _DEVICECERTIFICATESTATUS,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:DeviceCertificateStatus)\n  ))\n_sym_db.RegisterMessage(DeviceCertificateStatus)\nDeviceCertificateStatusList = _reflection.GeneratedProtocolMessageType('DeviceCertificateStatusList', (_message.Message,), dict(\n  DESCRIPTOR = _DEVICECERTIFICATESTATUSLIST,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:DeviceCertificateStatusList)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "DeviceCertificateStatusList",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "DeviceCertificateStatusList = _reflection.GeneratedProtocolMessageType('DeviceCertificateStatusList', (_message.Message,), dict(\n  DESCRIPTOR = _DEVICECERTIFICATESTATUSLIST,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:DeviceCertificateStatusList)\n  ))\n_sym_db.RegisterMessage(DeviceCertificateStatusList)\nEncryptedClientIdentification = _reflection.GeneratedProtocolMessageType('EncryptedClientIdentification', (_message.Message,), dict(\n  DESCRIPTOR = _ENCRYPTEDCLIENTIDENTIFICATION,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:EncryptedClientIdentification)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "EncryptedClientIdentification",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "EncryptedClientIdentification = _reflection.GeneratedProtocolMessageType('EncryptedClientIdentification', (_message.Message,), dict(\n  DESCRIPTOR = _ENCRYPTEDCLIENTIDENTIFICATION,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:EncryptedClientIdentification)\n  ))\n_sym_db.RegisterMessage(EncryptedClientIdentification)\nLicenseIdentification = _reflection.GeneratedProtocolMessageType('LicenseIdentification', (_message.Message,), dict(\n  DESCRIPTOR = _LICENSEIDENTIFICATION,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:LicenseIdentification)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "LicenseIdentification",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "LicenseIdentification = _reflection.GeneratedProtocolMessageType('LicenseIdentification', (_message.Message,), dict(\n  DESCRIPTOR = _LICENSEIDENTIFICATION,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:LicenseIdentification)\n  ))\n_sym_db.RegisterMessage(LicenseIdentification)\nLicense = _reflection.GeneratedProtocolMessageType('License', (_message.Message,), dict(\n  Policy = _reflection.GeneratedProtocolMessageType('Policy', (_message.Message,), dict(\n    DESCRIPTOR = _LICENSE_POLICY,\n    __module__ = 'wv_proto3_pb2'",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "License",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "License = _reflection.GeneratedProtocolMessageType('License', (_message.Message,), dict(\n  Policy = _reflection.GeneratedProtocolMessageType('Policy', (_message.Message,), dict(\n    DESCRIPTOR = _LICENSE_POLICY,\n    __module__ = 'wv_proto3_pb2'\n    # @@protoc_insertion_point(class_scope:License.Policy)\n    ))\n  ,\n  KeyContainer = _reflection.GeneratedProtocolMessageType('KeyContainer', (_message.Message,), dict(\n    OutputProtection = _reflection.GeneratedProtocolMessageType('OutputProtection', (_message.Message,), dict(\n      DESCRIPTOR = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "LicenseError",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "LicenseError = _reflection.GeneratedProtocolMessageType('LicenseError', (_message.Message,), dict(\n  DESCRIPTOR = _LICENSEERROR,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:LicenseError)\n  ))\n_sym_db.RegisterMessage(LicenseError)\nLicenseRequest = _reflection.GeneratedProtocolMessageType('LicenseRequest', (_message.Message,), dict(\n  ContentIdentification = _reflection.GeneratedProtocolMessageType('ContentIdentification', (_message.Message,), dict(\n    CENC = _reflection.GeneratedProtocolMessageType('CENC', (_message.Message,), dict(\n      DESCRIPTOR = _LICENSEREQUEST_CONTENTIDENTIFICATION_CENC,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "LicenseRequest",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "LicenseRequest = _reflection.GeneratedProtocolMessageType('LicenseRequest', (_message.Message,), dict(\n  ContentIdentification = _reflection.GeneratedProtocolMessageType('ContentIdentification', (_message.Message,), dict(\n    CENC = _reflection.GeneratedProtocolMessageType('CENC', (_message.Message,), dict(\n      DESCRIPTOR = _LICENSEREQUEST_CONTENTIDENTIFICATION_CENC,\n      __module__ = 'wv_proto3_pb2'\n      # @@protoc_insertion_point(class_scope:LicenseRequest.ContentIdentification.CENC)\n      ))\n    ,\n    WebM = _reflection.GeneratedProtocolMessageType('WebM', (_message.Message,), dict(\n      DESCRIPTOR = _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBM,",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "ProvisionedDeviceInfo",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "ProvisionedDeviceInfo = _reflection.GeneratedProtocolMessageType('ProvisionedDeviceInfo', (_message.Message,), dict(\n  DESCRIPTOR = _PROVISIONEDDEVICEINFO,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:ProvisionedDeviceInfo)\n  ))\n_sym_db.RegisterMessage(ProvisionedDeviceInfo)\nProvisioningOptions = _reflection.GeneratedProtocolMessageType('ProvisioningOptions', (_message.Message,), dict(\n  DESCRIPTOR = _PROVISIONINGOPTIONS,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:ProvisioningOptions)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "ProvisioningOptions",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "ProvisioningOptions = _reflection.GeneratedProtocolMessageType('ProvisioningOptions', (_message.Message,), dict(\n  DESCRIPTOR = _PROVISIONINGOPTIONS,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:ProvisioningOptions)\n  ))\n_sym_db.RegisterMessage(ProvisioningOptions)\nProvisioningRequest = _reflection.GeneratedProtocolMessageType('ProvisioningRequest', (_message.Message,), dict(\n  DESCRIPTOR = _PROVISIONINGREQUEST,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:ProvisioningRequest)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "ProvisioningRequest",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "ProvisioningRequest = _reflection.GeneratedProtocolMessageType('ProvisioningRequest', (_message.Message,), dict(\n  DESCRIPTOR = _PROVISIONINGREQUEST,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:ProvisioningRequest)\n  ))\n_sym_db.RegisterMessage(ProvisioningRequest)\nProvisioningResponse = _reflection.GeneratedProtocolMessageType('ProvisioningResponse', (_message.Message,), dict(\n  DESCRIPTOR = _PROVISIONINGRESPONSE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:ProvisioningResponse)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "ProvisioningResponse",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "ProvisioningResponse = _reflection.GeneratedProtocolMessageType('ProvisioningResponse', (_message.Message,), dict(\n  DESCRIPTOR = _PROVISIONINGRESPONSE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:ProvisioningResponse)\n  ))\n_sym_db.RegisterMessage(ProvisioningResponse)\nRemoteAttestation = _reflection.GeneratedProtocolMessageType('RemoteAttestation', (_message.Message,), dict(\n  DESCRIPTOR = _REMOTEATTESTATION,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:RemoteAttestation)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "RemoteAttestation",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "RemoteAttestation = _reflection.GeneratedProtocolMessageType('RemoteAttestation', (_message.Message,), dict(\n  DESCRIPTOR = _REMOTEATTESTATION,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:RemoteAttestation)\n  ))\n_sym_db.RegisterMessage(RemoteAttestation)\nSessionInit = _reflection.GeneratedProtocolMessageType('SessionInit', (_message.Message,), dict(\n  DESCRIPTOR = _SESSIONINIT,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SessionInit)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "SessionInit",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "SessionInit = _reflection.GeneratedProtocolMessageType('SessionInit', (_message.Message,), dict(\n  DESCRIPTOR = _SESSIONINIT,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SessionInit)\n  ))\n_sym_db.RegisterMessage(SessionInit)\nSessionState = _reflection.GeneratedProtocolMessageType('SessionState', (_message.Message,), dict(\n  DESCRIPTOR = _SESSIONSTATE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SessionState)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "SessionState",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "SessionState = _reflection.GeneratedProtocolMessageType('SessionState', (_message.Message,), dict(\n  DESCRIPTOR = _SESSIONSTATE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SessionState)\n  ))\n_sym_db.RegisterMessage(SessionState)\nSignedCertificateStatusList = _reflection.GeneratedProtocolMessageType('SignedCertificateStatusList', (_message.Message,), dict(\n  DESCRIPTOR = _SIGNEDCERTIFICATESTATUSLIST,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SignedCertificateStatusList)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "SignedCertificateStatusList",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "SignedCertificateStatusList = _reflection.GeneratedProtocolMessageType('SignedCertificateStatusList', (_message.Message,), dict(\n  DESCRIPTOR = _SIGNEDCERTIFICATESTATUSLIST,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SignedCertificateStatusList)\n  ))\n_sym_db.RegisterMessage(SignedCertificateStatusList)\nSignedDeviceCertificate = _reflection.GeneratedProtocolMessageType('SignedDeviceCertificate', (_message.Message,), dict(\n  DESCRIPTOR = _SIGNEDDEVICECERTIFICATE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SignedDeviceCertificate)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "SignedDeviceCertificate",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "SignedDeviceCertificate = _reflection.GeneratedProtocolMessageType('SignedDeviceCertificate', (_message.Message,), dict(\n  DESCRIPTOR = _SIGNEDDEVICECERTIFICATE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SignedDeviceCertificate)\n  ))\n_sym_db.RegisterMessage(SignedDeviceCertificate)\nSignedProvisioningMessage = _reflection.GeneratedProtocolMessageType('SignedProvisioningMessage', (_message.Message,), dict(\n  DESCRIPTOR = _SIGNEDPROVISIONINGMESSAGE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SignedProvisioningMessage)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "SignedProvisioningMessage",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "SignedProvisioningMessage = _reflection.GeneratedProtocolMessageType('SignedProvisioningMessage', (_message.Message,), dict(\n  DESCRIPTOR = _SIGNEDPROVISIONINGMESSAGE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SignedProvisioningMessage)\n  ))\n_sym_db.RegisterMessage(SignedProvisioningMessage)\nSignedMessage = _reflection.GeneratedProtocolMessageType('SignedMessage', (_message.Message,), dict(\n  DESCRIPTOR = _SIGNEDMESSAGE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SignedMessage)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "SignedMessage",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "SignedMessage = _reflection.GeneratedProtocolMessageType('SignedMessage', (_message.Message,), dict(\n  DESCRIPTOR = _SIGNEDMESSAGE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SignedMessage)\n  ))\n_sym_db.RegisterMessage(SignedMessage)\nWidevineCencHeader = _reflection.GeneratedProtocolMessageType('WidevineCencHeader', (_message.Message,), dict(\n  DESCRIPTOR = _WIDEVINECENCHEADER,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:WidevineCencHeader)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "WidevineCencHeader",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "WidevineCencHeader = _reflection.GeneratedProtocolMessageType('WidevineCencHeader', (_message.Message,), dict(\n  DESCRIPTOR = _WIDEVINECENCHEADER,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:WidevineCencHeader)\n  ))\n_sym_db.RegisterMessage(WidevineCencHeader)\nSignedLicenseRequest = _reflection.GeneratedProtocolMessageType('SignedLicenseRequest', (_message.Message,), dict(\n  DESCRIPTOR = _SIGNEDLICENSEREQUEST,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SignedLicenseRequest)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "SignedLicenseRequest",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "SignedLicenseRequest = _reflection.GeneratedProtocolMessageType('SignedLicenseRequest', (_message.Message,), dict(\n  DESCRIPTOR = _SIGNEDLICENSEREQUEST,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SignedLicenseRequest)\n  ))\n_sym_db.RegisterMessage(SignedLicenseRequest)\nSignedLicense = _reflection.GeneratedProtocolMessageType('SignedLicense', (_message.Message,), dict(\n  DESCRIPTOR = _SIGNEDLICENSE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SignedLicense)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "SignedLicense",
        "kind": 5,
        "importPath": "modules.cdm.protos.wv_proto3_pb2",
        "description": "modules.cdm.protos.wv_proto3_pb2",
        "peekOfCode": "SignedLicense = _reflection.GeneratedProtocolMessageType('SignedLicense', (_message.Message,), dict(\n  DESCRIPTOR = _SIGNEDLICENSE,\n  __module__ = 'wv_proto3_pb2'\n  # @@protoc_insertion_point(class_scope:SignedLicense)\n  ))\n_sym_db.RegisterMessage(SignedLicense)\n# @@protoc_insertion_point(module_scope)",
        "detail": "modules.cdm.protos.wv_proto3_pb2",
        "documentation": {}
    },
    {
        "label": "Cdm",
        "kind": 6,
        "importPath": "modules.cdm.cdm",
        "description": "modules.cdm.cdm",
        "peekOfCode": "class Cdm:\n    def __init__(self):\n        self.logger = logging.getLogger(__name__)\n        self.sessions = {}\n    def open_session(self, init_data_b64, device, raw_init_data = None, offline=False):\n        self.logger.debug(\"open_session(init_data_b64={}, device={}\".format(init_data_b64, device))\n        self.logger.info(\"opening new cdm session\")\n        if device.session_id_type == 'android':\n            # format: 16 random hexdigits, 2 digit counter, 14 0s\n            rand_ascii = ''.join(random.choice('ABCDEF0123456789') for _ in range(16))",
        "detail": "modules.cdm.cdm",
        "documentation": {}
    },
    {
        "label": "DeviceConfig",
        "kind": 6,
        "importPath": "modules.cdm.deviceconfig",
        "description": "modules.cdm.deviceconfig",
        "peekOfCode": "class DeviceConfig:\n    def __init__(self, device):\n        self.device_name = device['name']\n        self.description = device['description']\n        self.security_level = device['security_level']\n        self.session_id_type = device['session_id_type']\n        self.private_key_available = device['private_key_available']\n        self.vmp = device['vmp']\n        self.send_key_control_nonce = device['send_key_control_nonce']\n        if 'keybox_filename' in device:",
        "detail": "modules.cdm.deviceconfig",
        "documentation": {}
    },
    {
        "label": "device_android_generic",
        "kind": 5,
        "importPath": "modules.cdm.deviceconfig",
        "description": "modules.cdm.deviceconfig",
        "peekOfCode": "device_android_generic = {\n    'name': 'android_generic',\n    'description': 'android studio cdm',\n    'security_level': 1,\n    'session_id_type': 'android',\n    'private_key_available': True,\n    'vmp': True,\n    'send_key_control_nonce': True\n}\ndevice_chrome_generic = {",
        "detail": "modules.cdm.deviceconfig",
        "documentation": {}
    },
    {
        "label": "device_chrome_generic",
        "kind": 5,
        "importPath": "modules.cdm.deviceconfig",
        "description": "modules.cdm.deviceconfig",
        "peekOfCode": "device_chrome_generic = {\n    'name': 'chrome_cdm',\n    'description': 'Chrome CDM 2710',\n    'security_level': 3,\n    'session_id_type': 'chrome',\n    'private_key_available': True,\n    'vmp': True,\n    'send_key_control_nonce': True\n}\ndevices_available = [device_chrome_generic, device_android_generic]",
        "detail": "modules.cdm.deviceconfig",
        "documentation": {}
    },
    {
        "label": "devices_available",
        "kind": 5,
        "importPath": "modules.cdm.deviceconfig",
        "description": "modules.cdm.deviceconfig",
        "peekOfCode": "devices_available = [device_chrome_generic, device_android_generic]\nFILES_FOLDER = 'devices'\nclass DeviceConfig:\n    def __init__(self, device):\n        self.device_name = device['name']\n        self.description = device['description']\n        self.security_level = device['security_level']\n        self.session_id_type = device['session_id_type']\n        self.private_key_available = device['private_key_available']\n        self.vmp = device['vmp']",
        "detail": "modules.cdm.deviceconfig",
        "documentation": {}
    },
    {
        "label": "FILES_FOLDER",
        "kind": 5,
        "importPath": "modules.cdm.deviceconfig",
        "description": "modules.cdm.deviceconfig",
        "peekOfCode": "FILES_FOLDER = 'devices'\nclass DeviceConfig:\n    def __init__(self, device):\n        self.device_name = device['name']\n        self.description = device['description']\n        self.security_level = device['security_level']\n        self.session_id_type = device['session_id_type']\n        self.private_key_available = device['private_key_available']\n        self.vmp = device['vmp']\n        self.send_key_control_nonce = device['send_key_control_nonce']",
        "detail": "modules.cdm.deviceconfig",
        "documentation": {}
    },
    {
        "label": "Key",
        "kind": 6,
        "importPath": "modules.cdm.key",
        "description": "modules.cdm.key",
        "peekOfCode": "class Key:\n    def __init__(self, kid, type, key, permissions=[]):\n        self.kid = kid\n        self.type = type\n        self.key = key\n        self.permissions = permissions\n    def __repr__(self):\n        if self.type == \"OPERATOR_SESSION\":\n           return \"key(kid={}, type={}, key={}, permissions={})\".format(self.kid, self.type, binascii.hexlify(self.key), self.permissions)\n        else:",
        "detail": "modules.cdm.key",
        "documentation": {}
    },
    {
        "label": "get_pssh",
        "kind": 2,
        "importPath": "modules.cdm.pssh",
        "description": "modules.cdm.pssh",
        "peekOfCode": "def get_pssh(mpd_url):\n    pssh = ''\n    try:\n        r = requests.get(url=mpd_url)\n        r.raise_for_status()\n        xml = xmltodict.parse(r.text)\n        mpd = json.loads(json.dumps(xml))\n        periods = mpd['MPD']['Period']\n    except Exception as e:\n        pssh = input(f'\\nUnable to find PSSH in MPD: {e}. \\nEdit getPSSH.py or enter PSSH manually: ')",
        "detail": "modules.cdm.pssh",
        "documentation": {}
    },
    {
        "label": "fetch_mpd_content",
        "kind": 2,
        "importPath": "modules.cdm.pssh",
        "description": "modules.cdm.pssh",
        "peekOfCode": "def fetch_mpd_content(url):\n    \"\"\"Fetch MPD content from a URL.\"\"\"\n    response = requests.get(url)\n    response.raise_for_status()  # Will raise an exception for HTTP errors\n    return response.text\ndef extract_widevine_pssh_base64_from_mpd(mpd_content):\n    \"\"\"\n    Extract Widevine PSSH data from MPD (DASH Manifest) content in Base64 format.\n    Args:\n    mpd_content (str): MPD file content as a string.",
        "detail": "modules.cdm.pssh",
        "documentation": {}
    },
    {
        "label": "extract_widevine_pssh_base64_from_mpd",
        "kind": 2,
        "importPath": "modules.cdm.pssh",
        "description": "modules.cdm.pssh",
        "peekOfCode": "def extract_widevine_pssh_base64_from_mpd(mpd_content):\n    \"\"\"\n    Extract Widevine PSSH data from MPD (DASH Manifest) content in Base64 format.\n    Args:\n    mpd_content (str): MPD file content as a string.\n    Returns:\n    list of dict: List containing dicts with keys 'schemeIdUri' and 'pssh' (Base64 encoded) specific to Widevine.\n    \"\"\"\n    root = ET.fromstring(mpd_content)\n    widevine_pssh_data_list = []",
        "detail": "modules.cdm.pssh",
        "documentation": {}
    },
    {
        "label": "base64_to_pssh_box_base64",
        "kind": 2,
        "importPath": "modules.cdm.pssh",
        "description": "modules.cdm.pssh",
        "peekOfCode": "def base64_to_pssh_box_base64(base64_pssh, system_id):\n    try:\n        pssh_data = base64.b64decode(base64_pssh)\n    except base64.binascii.Error as e:\n        return None, f\"Base64 decoding error: {e}\"\n    system_id_bytes = uuid.UUID(system_id).bytes\n    box_size = 32 + len(pssh_data)\n    pssh_box = struct.pack('>I4s', box_size, b'pssh')\n    pssh_box += struct.pack('>I', 0)\n    pssh_box += system_id_bytes",
        "detail": "modules.cdm.pssh",
        "documentation": {}
    },
    {
        "label": "process_mpd",
        "kind": 2,
        "importPath": "modules.cdm.pssh",
        "description": "modules.cdm.pssh",
        "peekOfCode": "def process_mpd(mpd_url, system_id):\n    mpd_content = fetch_mpd_content(mpd_url)\n    widevine_pssh_data_base64 = extract_widevine_pssh_base64_from_mpd(mpd_content)\n    if widevine_pssh_data_base64:\n        base64_pssh = widevine_pssh_data_base64[0]['pssh']\n        pssh_box_base64, error = base64_to_pssh_box_base64(base64_pssh, system_id)\n        if pssh_box_base64:\n            return pssh_box_base64, None\n        else:\n            return None, f\"Failed to convert PSSH data: {error}\"",
        "detail": "modules.cdm.pssh",
        "documentation": {}
    },
    {
        "label": "Session",
        "kind": 6,
        "importPath": "modules.cdm.session",
        "description": "modules.cdm.session",
        "peekOfCode": "class Session:\n    def __init__(self, session_id, init_data, device_config, offline):\n        self.session_id = session_id\n        self.init_data = init_data\n        self.offline = offline\n        self.device_config = device_config\n        self.device_key = None\n        self.session_key = None\n        self.derived_keys = {\n            'enc': None,",
        "detail": "modules.cdm.session",
        "documentation": {}
    },
    {
        "label": "FromFileMixin",
        "kind": 6,
        "importPath": "modules.cdm.vmp",
        "description": "modules.cdm.vmp",
        "peekOfCode": "class FromFileMixin:\n    @classmethod\n    def from_file(cls, filename):\n        \"\"\"Load given a filename\"\"\"\n        with open(filename, \"rb\") as f:\n            return cls(f.read())\n# the signatures use a format internally similar to\n# protobuf's encoding, but without wire types\nclass VariableReader(FromFileMixin):\n    \"\"\"Protobuf-like encoding reader\"\"\"",
        "detail": "modules.cdm.vmp",
        "documentation": {}
    },
    {
        "label": "VariableReader",
        "kind": 6,
        "importPath": "modules.cdm.vmp",
        "description": "modules.cdm.vmp",
        "peekOfCode": "class VariableReader(FromFileMixin):\n    \"\"\"Protobuf-like encoding reader\"\"\"\n    def __init__(self, buf):\n        self.buf = buf\n        self.pos = 0\n        self.size = len(buf)\n    def read_int(self):\n        \"\"\"Read a variable length integer\"\"\"\n        # _DecodeVarint will take care of out of range errors\n        (val, nextpos) = _di(self.buf, self.pos)",
        "detail": "modules.cdm.vmp",
        "documentation": {}
    },
    {
        "label": "TaggedReader",
        "kind": 6,
        "importPath": "modules.cdm.vmp",
        "description": "modules.cdm.vmp",
        "peekOfCode": "class TaggedReader(VariableReader):\n    \"\"\"Tagged reader, needed for implementing a WideVine signature reader\"\"\"\n    def read_tag(self):\n        \"\"\"Read a tagged buffer\"\"\"\n        return (self.read_int(), self.read_bytes())\n    def read_all_tags(self, max_tag=3):\n        tags = {}\n        while (not self.is_end()):\n            (tag, bytes) = self.read_tag()\n            if (tag > max_tag):",
        "detail": "modules.cdm.vmp",
        "documentation": {}
    },
    {
        "label": "SignatureReader",
        "kind": 6,
        "importPath": "modules.cdm.vmp",
        "description": "modules.cdm.vmp",
        "peekOfCode": "class SignatureReader(FromFileMixin):\n    \"\"\"Parses a widevine .sig signature file.\"\"\"\n    SIGNER_TAG = 1\n    SIGNATURE_TAG = 2\n    ISMAINEXE_TAG = 3\n    def __init__(self, buf):\n        reader = TaggedReader(buf)\n        self.version = reader.read_int()\n        if (self.version != 0):\n            raise Exception(\"Unsupported signature format version {}\".format(self.version))",
        "detail": "modules.cdm.vmp",
        "documentation": {}
    },
    {
        "label": "WvDecrypt",
        "kind": 6,
        "importPath": "modules.cdm.wvdecryptcustom",
        "description": "modules.cdm.wvdecryptcustom",
        "peekOfCode": "class WvDecrypt(object):\n    WV_SYSTEM_ID = [\n     237, 239, 139, 169, 121, 214, 74, 206, 163, 200, 39, 220, 213, 29, 33, 237]\n    def __init__(self, init_data_b64, cert_data_b64, device):\n        self.init_data_b64 = init_data_b64\n        self.cert_data_b64 = cert_data_b64\n        self.device = device\n        self.cdm = cdm.Cdm()\n        def check_pssh(pssh_b64):\n            pssh = base64.b64decode(pssh_b64)",
        "detail": "modules.cdm.wvdecryptcustom",
        "documentation": {}
    },
    {
        "label": "get_cookies",
        "kind": 2,
        "importPath": "services.prime",
        "description": "services.prime",
        "peekOfCode": "def get_cookies():\n    cookies = {}\n    return cookies\ndef get_headers():\n    headers = {}\n    return headers\ndef get_params():\n    params = {}\n    return params\ndef get_data():",
        "detail": "services.prime",
        "documentation": {}
    },
    {
        "label": "get_headers",
        "kind": 2,
        "importPath": "services.prime",
        "description": "services.prime",
        "peekOfCode": "def get_headers():\n    headers = {}\n    return headers\ndef get_params():\n    params = {}\n    return params\ndef get_data():\n    data = {}\n    return data",
        "detail": "services.prime",
        "documentation": {}
    },
    {
        "label": "get_params",
        "kind": 2,
        "importPath": "services.prime",
        "description": "services.prime",
        "peekOfCode": "def get_params():\n    params = {}\n    return params\ndef get_data():\n    data = {}\n    return data",
        "detail": "services.prime",
        "documentation": {}
    },
    {
        "label": "get_data",
        "kind": 2,
        "importPath": "services.prime",
        "description": "services.prime",
        "peekOfCode": "def get_data():\n    data = {}\n    return data",
        "detail": "services.prime",
        "documentation": {}
    },
    {
        "label": "generate_pssh",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def generate_pssh(mpd_url):\n    pssh = get_pssh(mpd_url)\n    return pssh\ndef print_title(title_text):\n    title = pyfiglet.figlet_format(title_text, font='slant')\n    print(Fore.MAGENTA + title + Fore.RESET)\ndef get_service_module(service_name):\n    try:\n        return importlib.import_module(f'services.{service_name}')\n    except ImportError:",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "print_title",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def print_title(title_text):\n    title = pyfiglet.figlet_format(title_text, font='slant')\n    print(Fore.MAGENTA + title + Fore.RESET)\ndef get_service_module(service_name):\n    try:\n        return importlib.import_module(f'services.{service_name}')\n    except ImportError:\n        print(f\"No module named '{service_name}' found in 'services' package\")\n        sys.exit(1)\ndef get_license_keys(pssh, lic_url, service_module):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_service_module",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_service_module(service_name):\n    try:\n        return importlib.import_module(f'services.{service_name}')\n    except ImportError:\n        print(f\"No module named '{service_name}' found in 'services' package\")\n        sys.exit(1)\ndef get_license_keys(pssh, lic_url, service_module):\n    service = get_service_module(service_module)\n    headers = service.get_headers()\n    params = service.get_params()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_license_keys",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_license_keys(pssh, lic_url, service_module):\n    service = get_service_module(service_module)\n    headers = service.get_headers()\n    params = service.get_params()\n    cookies = service.get_cookies()\n    data = service.get_data()\n    wvdecrypt = WvDecrypt(init_data_b64=pssh, cert_data_b64=None, device=device_android_generic)\n    challenge = wvdecrypt.get_challenge()\n    data['widevine2Challenge'] = b64encode(challenge).decode()\n    response = requests.post(url=lic_url, headers=headers, params=params, cookies=cookies, data=data)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "print_license_keys",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def print_license_keys(keys):\n    for key in keys:\n        print(Fore.CYAN + f'--key {key}' + Fore.RESET)\n    print(Fore.GREEN + \"\\nAll Done...\" + Fore.RESET)\ndef parse_arguments():\n    parser = argparse.ArgumentParser(description='WKS-KEYS 2.0 - A tool to obtain Widevine keys from MPD URLs')\n    parser.add_argument('-u', '--license-url', required=True, help='URL to request Widevine license')\n    parser.add_argument('-m', '--mpd-url', help='URL of the Media Presentation Description (MPD)')\n    parser.add_argument('-p', '--pssh', required=False, help='Protection System Specific Header (PSSH)')\n    parser.add_argument('-s', '--service', required=True, help='Specify the service module (e.g., prime, netflix)')",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "parse_arguments",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def parse_arguments():\n    parser = argparse.ArgumentParser(description='WKS-KEYS 2.0 - A tool to obtain Widevine keys from MPD URLs')\n    parser.add_argument('-u', '--license-url', required=True, help='URL to request Widevine license')\n    parser.add_argument('-m', '--mpd-url', help='URL of the Media Presentation Description (MPD)')\n    parser.add_argument('-p', '--pssh', required=False, help='Protection System Specific Header (PSSH)')\n    parser.add_argument('-s', '--service', required=True, help='Specify the service module (e.g., prime, netflix)')\n    return parser.parse_args()\ndef clear_screen():\n    os.system('cls' if os.name == 'nt' else 'clear')\ndef main():",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "clear_screen",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def clear_screen():\n    os.system('cls' if os.name == 'nt' else 'clear')\ndef main():\n    clear_screen()\n    print_title('WKS-KEYS 2.0')\n    args = parse_arguments()\n    lic_url = args.license_url\n    pssh = args.pssh if args.pssh else generate_pssh(args.mpd_url) if args.mpd_url else None\n    if not pssh:\n        print(\"No PSSH data provided or extracted.\")",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def main():\n    clear_screen()\n    print_title('WKS-KEYS 2.0')\n    args = parse_arguments()\n    lic_url = args.license_url\n    pssh = args.pssh if args.pssh else generate_pssh(args.mpd_url) if args.mpd_url else None\n    if not pssh:\n        print(\"No PSSH data provided or extracted.\")\n        return\n    correct, keys = get_license_keys(pssh, lic_url, args.service)",
        "detail": "main",
        "documentation": {}
    }
]